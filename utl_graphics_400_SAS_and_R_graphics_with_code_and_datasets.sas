
********************************************************************************************************;
%let pgm=visual_analytics.sas
;

%let purpose       = SAS program that created the 100 simple graphs;

%let out_lib       = c:\sd1;

%let ftg_exe       = c:/exe/p2p/pdftopptcmd.exe;  * free boxoft product to convert pdf slides to powerpoint slides;

%let ftg_pdf_r     = c:/pdf/&pgm._r.pdf;  * R slides eventually append to SAS pdf output;

%let ftg_pdf       = c:/pdf/&pgm..pdf;
%let ftg_ppt       = c:/ppt/&pgm..ppt;

%let arial_bullets = ¤ o º;

%let b1            = o;
%let b2            = º;

%let t=^S={font_size=18pt just=l cellwidth=100pct};
%let _l=^S={font_size=12pt just=l cellwidth=100pct};

options validvarname=upcase center orientation=landscape
 noxwait noxsync ls=171 ps=25 nodate nonumber ;run;quit;

********************************************************************************************************;

proc datasets library=work kill nolist;
run;quit;

options validvarname=upcase center orientation=landscape
 noxwait noxsync ls=171 ps=25 nodate nonumber ;run;quit;

%let t=^S={font_size=18pt just=l cellwidth=100pct};
%let _l=^S={font_size=12pt just=l cellwidth=100pct};

%let pth=%sysfunc(tranwrd(%sysfunc(pathname(work)),\,/));
%put &=pth;

%macro utl_sd1get(loc=%str(c:\ftg\zip\sga_scan.csv.gz));
data _null_;
 file "&loc" recfm=f lrecl=60;
 infile cards length=l;
 input hex0120 $varying120. l;
 select (l);
   when (120) bin060=input(hex0120,$hex120.);
   otherwise bin060=input(hex0120,$hex120.);
 end;
 l=l/2;
 put bin060 $varying60. l;
%mend utl_sd1get;

%macro utl_sd1put(loc=%str(&PTH\test.zip));

    * hex dump of zip file that utl_sd1get will turn into this input zip file;
    * you need to copy and paste the hex output text into utl_sd1get to reverse process;
    * this technique is used to put binary information into a text document;

    filename wrk temp ;

    /* FIRST STEP IS TO CREATE A TEXT FILE C:\TEMP\TEST1.TXT FROM THE TEST.ZIP FILE WE CREATED ABOVE */
    data _null_;
      infile "&loc"  recfm=n  ignoredoseof;
      file wrk recfm=f lrecl=1;
      input byt $char1.;
      put byt $hex2.;
    run;

    /* NEXT WE CREATE A FIXED BLOCK 80 TEXT FILE THAT WE CAN INCLUDE AFTER THE CARDS STATEMENT BELOW */
    /* THIS REQUIRES THAT WE CUT IN PASTE OR "INC C:\TEMP\TEST1.TXT" FROM THE LOG                    */
    data _null_;
      infile wrk recfm=f lrecl=120;
      input;
      put _infile_;
    run;

    filename wrk clear;run;

%mend utl_sd1put;


****     *    *****    *
 *  *   * *     *     * *
 *  *  *   *    *    *   *
 *  *  *****    *    *****
 *  *  *   *    *    *   *
 *  *  *   *    *    *   *
****   *   *    *    *   *;

data PGA2007;
  input Rank 2.  Player & $15. Age Events Rounds CutsMade Top10 Wins Earnings;
  length  LastName $10 StatName $10;
  keep Rank LastName Earnings StatName Stat;
  LastName=scan(Player,2,' ');
  label CutsMade="Cuts Made" Top10="Top 10s";
  format Earnings dollar12.;
  array sname{5} Age Events CutsMade Wins Top10;
    do i=1 to dim(sname);
      StatName=vlabel(sname{i});
      Stat=sname{i};
    if i>1 then earnings=.;
    output;
    end;
  datalines;
 1 Tiger Woods     33  16  61 16 12  7 10867052
 2 Phil Mickelson  38  22  73 16  7  3  5819988
 3 Vijay Singh     45  27 101 25  7  2  4728377
 4 Steve Stricker  41  23  80 19  9  1  4663077
 5 K.J. Choi       38  25  88 20  7  2  4587859
 6 Rory Sabbatini  32  23  80 18 10  1  4550040
 7 Jim Furyk       38  24  84 20  8  1  4154046
 8 Zach Johnson    32  23  78 18  5  2  3922338
 9 Sergio Garcia   29  19  67 16  7  0  3721185
10 Aaron Baddeley  27  23  82 19  7  1  3441119
run;

data TigerWins;
  input Tournament $1-17 Purse : comma12.;
  call symput(cats("T",_n_),strip(Tournament));
  call symput(cats("P",_n_),put(Purse,dollar11.));
  datalines;
Tour Championship $1,260,000
BMW Championship  $1,260,000
PGA Championship  $1,350,000
WGC: Bridgestone  $1,350,000
Wachovia          $1,134,000
WGC: CA           $1,350,000
Buick Inv.          $936,000
run;

data hazardx;
   input day A ALow AHigh ARisk B BLow BHigh BRisk;
   label day='Days since randomization';
   label A='Drug A';
   label B='Drug B';
   label ARisk='Drug A';
   label BRisk='Drug B';
   datalines;
 0   .      .      .      .    .      .      .       .
10   .0005  .0001  .0009  212  .0078  .007   .0086   428
30   .0007  .0002  .0012  199  .0026  .002   .0032   339
50   .0005  .0001  .0009  189  .0005  .0002  .0008   309
70   .0004  .0001  .0007  183  .001   .0006  .0014   297
90   .0001  .      .      178  .0008  .0005  .0011   285
110  .0003  .0001  .0005  175  .0002  .0001  .0003   276
130  .0003  .0001  .0005  168  .0002  .0001  .0003   271
150  .0003  .0001  .0005  162  .0002  .0001  .0003   264
170  .0005  .0001  .0009   93  .001   .0005  .0015   148
190  .0     .0     .0      13  .003   .0     .006     19
200  .      .      .      .    .      .      .       .
;
run;

proc format;

   picture abs
        low-<0='000'
        0<-high='000';
   value stime 0='Baseline'
               1='Week 1'
             2='Week 2'
             3='Week 4'
             4='Week 6'
               5='Week 8'
             6='End Point';
   value trt 1='Pla'
              2='A'
             3='B';
   value val 0='None'
             1='Mild'
           2='Moderate'
           3='Severe'
           4='Very Severe';
run;

data eye;
   input time trtgrp value percent;
   format time stime.;
   format trtgrp trt.;
   format value val.;
   datalines;
    0    1    0    6.67
    0    1    1   26.67
    0    1    2   57.78
    0    1    3    6.67
    0    1    4    2.22
    0    2    0   21.74
    0    2    1   15.94
    0    2    2   50.72
    0    2    3    8.70
    0    2    4    2.90
    0    3    0   15.07
    0    3    1   21.92
    0    3    2   45.21
    0    3    3   16.44
    0    3    4    1.37
    1    1    0   15.56
    1    1    1   24.44
    1    1    2   42.22
    1    1    3   15.56
    1    1    4    2.22
    1    2    0   26.09
    1    2    1   34.78
    1    2    2   26.09
    1    2    3   13.04
    1    3    0   15.07
    1    3    1   36.99
    1    3    2   35.62
    1    3    3    9.59
    1    3    4    2.74
    2    1    0   15.56
    2    1    1   40.00
    2    1    2   40.00
    2    1    3    4.44
    2    2    0   28.36
    2    2    1   40.30
    2    2    2   22.39
    2    2    3    8.96
    2    3    0   25.00
    2    3    1   27.78
    2    3    2   40.28
    2    3    3    5.56
    2    3    4    1.39
    3    1    0   15.91
    3    1    1   38.64
    3    1    2   25.00
    3    1    3   18.18
    3    1    4    2.27
    3    2    0   29.69
    3    2    1   35.94
    3    2    2   26.56
    3    2    3    7.81
    3    3    0   19.72
    3    3    1   43.66
    3    3    2   33.80
    3    3    3    2.82
    4    1    0   27.91
    4    1    1   44.19
    4    1    2   23.26
    4    1    3    2.33
    4    1    4    2.33
    4    2    0   36.07
    4    2    1   29.51
    4    2    2   29.51
    4    2    3    4.92
    4    3    0   20.00
    4    3    1   44.62
    4    3    2   29.23
    4    3    3    4.62
    4    3    4    1.54
    5    1    0   26.19
    5    1    1   38.10
    5    1    2   28.57
    5    1    3    7.14
    5    2    0   33.93
    5    2    1   41.07
    5    2    2   21.43
    5    2    3    3.57
    5    3    0   28.57
    5    3    1   30.16
    5    3    2   36.51
    5    3    3    4.76
    6    1    0   24.44
    6    1    1   37.78
    6    1    2   28.89
    6    1    3    8.89
    6    2    0   31.88
    6    2    1   37.68
    6    2    2   27.54
    6    2    3    2.90
    6    3    0   30.14
    6    3    1   27.40
    6    3    2   36.99
    6    3    3    4.11
    6    3    4    1.37
;
run;

data eye2;
   set eye;
   if value > 1 then percent=-percent;
run;

data Releases;
format Date DATE7.;
input Category $8. Release $6. Date DATE9. StatRelease $5.;
datalines;
Ancient 8.0   01Nov1999
Ancient 8.1   01Jul2000
Ancient 8.2   01Mar2001
Old     9.0   01Oct2002
Old     9.1   01Dec2003
Old     9.1.3 01Aug2004
Old     9.2   01Mar2008
Recent  9.2m2 01Apr2010 9.22
Recent  9.3   12Jul2011 9.3
Recent  9.3m2 29Aug2012 12.1
Recent  9.4   10Jul2013 12.3
Recent  9.4m1 09Dec2013 13.1
;
run;quit;

data work.cancer;
   infile datalines;
   input cause $ 1-20 mcases fcases mdeaths fdeaths;
   deaths=mdeaths + fdeaths;
   mcases= -1 * mcases;
   mdeaths= -1 * mdeaths;
   datalines;
Lung Cancer         114760  98620  89510  70880
Colorectal Cancer    55290  57050  26000  26180
Breast Cancer         2030 178480    450  40460
Pancreatic Cancer    18830  18340  16840  16530
Prostate Cancer     218890      0  27050      0
Leukemia             24800  19440  12320   9470
Lymphoma             38670  32710  10370   9360
Liver Cancer         13650   5510  11280   5500
Ovarian Cancer           0  22430      0  15280
Esophageal Cancer    12130   3430  10900   3040
Bladder Cancer       50040  17120   9630   4120
Kidney Cancer        31590  19600   8080   4810
;
run;

proc sort data=cancer;
   by descending deaths;
run;

data forest;
   input Study $1-16 grp OddsRatio LowerCL UpperCL Weight;
   format weight percent5. Q1 Q3 4.2 oddsratio lowercl uppercl 5.3;
   ObsId=_N_;
   OR='OR'; LCL='LCL'; UCL='UCL'; WT='Weight';
   if grp=1 then do;
      weight=weight*.05;
      Q1=OddsRatio-OddsRatio*weight;
      Q3=OddsRatio+OddsRatio*weight;
        lcl2=lowercl;
      ucl2=uppercl;
   end;
   else study2=study;
datalines;
Modano  (1967)    1  0.590 0.096 3.634  1
Borodan (1981)    1  0.464 0.201 1.074  3.5
Leighton (1972)   1  0.394 0.076 2.055  2
Novak   (1992)    1  0.490 0.088 2.737  2
Stawer  (1998)    1  1.250 0.479 3.261  3
Truark   (2002)   1  0.129 0.027 0.605  2.5
Fayney   (2005)   1  0.313 0.054 1.805  2
Modano  (1969)    1  0.429 0.070 2.620  2
Soloway (2000)    1  0.718 0.237 2.179  3
Adams   (1999)    1  0.143 0.082 0.250  4
Truark2  (2002)   1  0.129 0.027 0.605  2.5
Fayney2  (2005)   1  0.313 0.054 1.805  2
Modano2 (1969)    1  0.429 0.070 2.620  2
Soloway2(2000)    1  0.718 0.237 2.179  3
Adams2   (1999)   1  0.143 0.082 0.250  4
Overall           2  0.328 0.233 0.462  .
;
run;

proc sort data=forest out=forest2;
   by descending obsid;
run;

/* Add sequence numbers to each observation */
data forest3;
   set forest2 end=last;
   retain fmtname 'Study' type 'n';
   studyvalue=_n_;
   if study2='Overall' then study2value=1;
   else study2value = .;

/* Output values and formatted strings to data set */
   label=study;
   start=studyvalue;
   end=studyvalue;
   output;
   if last then do;
      hlo='O';
      label='Other';
   end;
run;

/* Create the format from the data set */
proc format library=work cntlin=forest3;
run;

/* Apply the format to the study values and remove Overall from Study column. */
/* Compute the width of the box proportional to weight in log scale. */
data forest4;
   format studyvalue study2value study.;
   drop fmtname type label start end hlo pct;
   set forest3 (where=(studyvalue > 0)) nobs=nobs;
   if studyvalue=1 then studyvalue=.;
   /* Compute marker width */
   x1=oddsratio / (10 ** (weight/2));
   x2=oddsratio * (10 ** (weight/2));

   /* Compute top and bottom offsets */
   if _n_ = nobs then do;
      pct=0.75/nobs;
      call symputx("pctx", pct);
      call symputx("pct2x", 2*pct);
      call symputx("countx", nobs);
   end;
run;




data trttrt;
input PatientID $ Start_date :date9. End_date :date9. Treatment;
format Start_date End_date date9.;
datalines;
A   05Jan2011  31Mar2011  1
A   01May2011  01Sep2011  2
B   01Feb2011  31Aug2011  3
C   15Jun2011  15Oct2011  1
D   15Jan2011  15Mar2011  1
D   01May2011  15Sep2011  2
D   01Oct2011  15Dec2011  3
E   01Apr2011  15Nov2011  1
;
run;

data pe_data;
   label pe10="Price-Earnings Ratio";
   input year re pe re10 pe10 label;
   %let thresholdPE=20;
   uPE = ifn(pe10 gt &thresholdPE, pe10, &thresholdPE);
   lPE = ifn(pe10 lt &thresholdPE, pe10, &thresholdPE);
   datalines;
1881      8.748326716      12.63265306      7.537763587      18.21479737 .
1882      8.712312283      13.45454545      7.736350471      15.61534241 .
1883      8.772956612      13.51162791      7.860859788      15.21615679 .
1884      7.580501458      12.95              7.810135656      14.45259058 .
1885      6.838179787      13.67741935      7.82213087      13.27527484 .
1886      8.357775295      19.25925926      8.13992424      16.83662413 .
1887      8.703106708      16.90909091      8.352263165      17.36163361 .
1888      6.584913869      14.75              8.252704406      15.36958563 .
1889      7.977874028      20.15384615      8.280566537      16.08095171 .
1890      7.523849831      17.93333333      7.979979659      17.27778813 .
1891      9.393863217      16.68965517      8.044533309      15.73568663 .
1892      9.483735093      16.20588235      8.12167559      18.92413597 .
1893      7.682400812      15.16216216      8.01262001      17.70495851 .
1894      4.933176162      16.61538462      7.74788748      15.93062495 .
1895      7.59797756      26.5625              7.823867257      16.91267357 .
1896      6.570014733      17.08              7.645091201      16.58686842 .
1897      9.421492175      20.0952381      7.716929748      17.2693833  .
1898      10.48734391      15.74193548      8.107172752      19.21911004 .
1899      12.3032239      17.37142857      8.539707739      22.47147694 .
1900      12.60701841      12.70833333      9.048024598      18.30899549 .
1901      12.81585823      14.72916667      9.390224099      20.52280842 .
1902      14.72837353      16.24              9.914687943      22.16449102 .
1903      12.96021217      13.42857143      10.44246908      19.94828451 .
1904      11.71288058      12.60377358      11.12043952      15.6426204  .
1905      16.01557141      17.20408163      11.96219891      18.12062854 .
1906      17.38554578      14.73134328      13.04375201      19.72303606 .
1907      15.42972465      12.57894737      13.64457526      16.76602446 .
1908      13.12673905      10.37878788      13.90851477      11.73666722 .
1909      15.5465983      15.62068966      14.23285221      14.74267528 .
1910      16.01064582      13.26315789      14.57321495      14.48739753 .
1911      13.07481658      12.69863014      14.59911079      13.9511611  .
1912      14.45828571      15.45762712      14.572102      13.84369516 .
1913      12.752208      13.28571429      14.55130159      13.18194541 .
1914      10.42141782      13.28571429      14.42215531      11.64309536 .
1915      17.12750769      14.38461538      14.53334894      10.39429155 .
1916      26.46978462      10.60227273      15.44177282      12.49474629 .
1917      18.50660571      6.254901961      15.74946093      10.72194945 .
1918      12.14496        5.6328125      15.65128303      6.618908448 .
1919      9.753724352      7.929292929      15.07199563      6.152910614 .
1920      8.522778947      9.494623656      14.32320894      6.144371604 .
1921      3.473410651      8.8875              13.36306835      5.288353901 .
1922      8.313514286      25.17241379      12.74859121      6.542968118 .
1923      11.46633988      12.89855072      12.6200044      8.411304745 .
1924      10.88132254      9.010204082      12.66599487      8.186531413 .
1925      14.13519553      11.37634409      12.36676365      9.773386982 .
1926      14.34261943      10.12              11.15404713      11.56714746 .
1927      12.98738497      10.80645161      10.60212506      13.89565787 .
1928      16.33532632      15.79279279      11.02116169      19.3458461  .
1929      19.0578807      18.01449275      11.95157733      26.70068962 1929
1930      12.34864906      13.48447205      12.33416434      21.50222122 .
1931      8.634528671      16.4742268      12.85027614      16.49357344 .
1932      6.433376744      13.60655738      12.66226238      9.142699232 .
1933      6.7472              17.29268293     12.1903484      8.78597685  .
1934      7.292929412      23.95454545      11.83150908      13.25853075 .
1935      11.14754783      18.89795918      11.53274431      11.64868162 .
1936      14.64285957      18.10526316      11.56276833      17.50054293 .
1937      16.10775211      17.24509804      11.87480504      21.83884878 .
1938      9.253302857      10.00884956      11.1666027      13.57664964 .
1939      13.10607194      19.53125       10.57142182      16.18474091 .
1940      15.07353191      13.66666667      10.84391011      16.94344617 .
1941      14.95557707      10.04761905      11.47601495      13.96665086 .
1942      12.33659645      7.698275862      12.06633692      10.03241617 .
1943      10.93511724      9.796116505      12.48512864      10.01552807 .
1944      10.57566742      12.60638298      12.81340244      11.04131802 .
1945      10.67688791      14.50537634      12.76633645      11.97215468 .
1946      9.979579535      18.77083333      12.30000845      15.69863714 .
1947      13.75062278      14.3490566      12.06429551      11.64206937 .
1948      19.31386       9.211180124      13.07035123      10.49870365 .
1949      19.9831966      6.707423581      13.75806369      9.911458212 .
1950      22.63234016      7.275862069      14.51394452      10.56798292 .
1951      18.63754868      7.468309859      14.88214168      11.64571967 .
1952      18.26309774      9.913934426      15.47479181      12.4156482  .
1953      18.88714349      10.90833333      16.26999443      12.87383768 .
1954      20.99971236      10.14342629      17.31239893      11.77507151 .
1955      27.34126567      12.85198556      18.9788367      15.58928957 .
1956      25.00864348      12.1961326      20.4817431      17.5699758  .
1957      23.85111608      13.32258065      21.49179243      16.26715402 .
1958      20.17180138      12.20178042      21.57758656      13.54126614 .
1959      23.41946212      19.24567474      21.92121312      17.9918142  .
1960      22.21142013      17.1179941      21.87912111      18.28795752 .
1961      21.523568      18.26299694      22.16772305      18.54037445 .
1962      24.43640526      21.65203762      22.7850538      21.02286748 .
1963      26.33373204      17.72752044      23.52971265      19.01232613 .
1964      29.519              19.01741294      24.38164142      21.28370472 .
1965      33.03581887      18.92747253      24.95109674      22.9156049  .
1966      34.14616413      17.98073218      25.8648488      23.80689785 .
1967      31.63862991      15.21621622      26.64360018      20.08809023 .
1968      32.75045393      17.83114447      27.90146544      21.17405218 .
1969      30.95144127      17.71527778      28.65466336      20.79401134 .
1970      26.09030352      15.62456747      29.04255169      16.87693471 .
1971      28.07229197      18.22417154      29.69742409      16.37163882 .
1972      30.50494648      18.12280702      30.30427821      17.13107266 .
1973      35.44451845      18.44548287      31.21535685      18.5676248  .
1974      34.53892975      11.77818627      31.71734983      13.37393459 .
1975      28.97898129      8.161979753      31.31166607      8.888070624 .
1976      34.28961641      12.16834171      31.3260113      11.2618136  .
1977      35.26896384      10.4752775      31.68904469      11.46629374 .
1978      36.54157072      8.287419651      32.06815637      9.223651481 .
1979      38.66197635      8.086780211      32.83920988      9.21486248  .
1980      34.48051862      7.460969044      33.67823139      8.783883955 .
1981      32.97041103      8.972334683      34.16804329      9.186074813 .
1982      26.1609227      7.635416667      33.73364092      7.367785849 .
1983      27.86944534      11.41376582      32.97613361      8.851539214 .
1984      31.92608758      11.8595866      32.71484939      10.0230095  .
1985      26.9826438      10.31310096      32.51521564      10.06444996 .
1986      26.35776691      14.24982888      31.72203069      11.82517321 .
1987      30.61607606      18.26726519      31.25674191      15.17823127 .
1988      39.71432007      14.31314286      31.57401684      14.01976801 .
1989      36.336373      12.01220539      31.34145651      15.10915041 .
1990      32.09180862      14.86532575      31.10258551      17.23442627 .
1991      23.31961303      15.25304592      30.13750571      15.73817169 .
1992      27.09762581      26.15210559      30.23117602      20.23581475 .
1993      30.29317428      22.79884756      30.47354891      20.43568003 .
1994      41.21044311      21.61745887      31.40198447      21.48950392 .
1995      44.52103212      15.20424837      33.1558233      19.95331897 .
1996      49.27449202      18.09246172      35.44749581      24.29422615 .
1997      49.7522495      19.78363026      37.36111316      27.50062618 .
1998      46.44603287      24.25377644      38.03428444      32.29775118 .
1999      57.76290711      33.12387268      40.17693785      40.44962333 .
2000      57.80011422      29.59497613      42.74776841      42.54908284 2000
2001      28.21937346      26.6186              43.23774445      35.99154243 .
2002      30.73559406      46.18104496      43.60154128      30.14033621 .
2003      53.27081987      32.46973541      45.89930583      22.88856259 .
2004      62.14712533      22.17152236      47.99297406      25.73231016 .
2005      71.38149713      20.48181042      50.67902056      26.52233299 .
2006      81.51              18.04761905      53.90257135      25.42010586 .
2007      63.4335206      17.37725432      55.27069846      26.2774106  .
2008      14.2649772      22.3514657      52.0525929      25.65251027 .
2009      .            58.97580645      51.41811354      16.1622791  .
;
run;

* example data;
data scatter;
  set sashelp.class(rename=(height=a weight=b));
  output;
  set sashelp.class(rename=(height=a weight=b));
  a=a+40;
  b=b+90;
  output;
run;

data emprol;
  do minority='YES','NO';
     do jobtime=5,10,15,20,25,30;
       do educ=12 to 32 by 2;
          salary= jobtime*1000 + educ*2000 + uniform(57531)*3000;
          output;
       end;
     end;
  end;
run;

data compliance;
  do month=1 to 12 by 1;
     compliance= uniform(57531);
     bsi=4+20*compliance;
     output;
  end;
run;

data first_example;
  call streaminit(12345);
  do x=0 to 10;
    y = 2 + 3*x + RAND('Normal',0,2);
  output;
  end;
run;quit;

data boxplots;
  set sashelp.class(rename=(height=a weight=b));
  results=a;
  treatment='TreatmentA';
  output;
  set sashelp.class(rename=(height=a weight=b));
  a=a+40;
  b=b+90;
  results=a;
  treatment='TreatmentB';
  output;
run;

data addtrt;
  length treatment $12;
  merge boxplots(rename=(a=trt_A_bodyweight b=trt_A_results))
        boxplots(rename=(a=trt_b_results b=trt_b_bodyweight))
  ;
  treatment=cats(treatment,sex);
  a=trt_A_bodyweight;
  b=trt_A_results;
run;;

****     *    ****   *      *****  *   *
 *  *   * *   *   *  *      *      *   *
 *  *  *   *  *   *  *      *       * *
 ***   *****  ****   *      ****     *
 *  *  *   *  * *    *      *        *
 *  *  *   *  *  *   *      *        *
****   *   *  *   *  *****  *****    *;


/* THIS IS FYI ONLY NOT NEEDED

 This is how I created the zip file from R

 %utlfkil(&pth/barley.xpt);
 * R dataframe to SAS xport dataset;
 %utl_submit_R(%nrbquote
   (
     library(SASxport);
     library(lattice);
     write.xport(barley,file="&pth/barley.xpt",autogen.formats=FALSE);
   ));

 * xpt to sas7bdat;
 libname xpt xport "&pth\barley.xpt";
 data barley(compress=no outrep=windows_32); ;
    set xpt.barley;
 run;

 data grptre32(outrep=windows_32 compress=no);
  set Cno_minisap_grptre;
 run;

 * zip barley.sas7bdat;
 %utl_submit_R(%nrbquote
   (
     library(R.utils);
     setwd("&pth");
     gzip("grptre32.sas7bdat",remove=FALSE,overwrite=TRUE);
   ));

 * create hext version of xipped sas7bdat;
 %utl_sd1put(loc=%str(&pth\grptre32.sas7bdat.gz));
*/

* get the barley data;

%utlfkil(&pth/grptre32.gz);
%utl_sd1get(loc=%str(&pth\grptre32.sas7bdat.gz));    ;
cards4;
1F8B0800000000000006ED590D70535516BEF969D2342D96D2F2678127586D8186F407680BD29736691B499B90A4050614D3F695664D9390BCA09555
D241144711875F655D4751D6AE8A8E328BCC2036C3CAEAA2B3E82AA8E88E55D62E2A6A2354407EB2E7DEF75EFA129A1475DC9F19EF34EF9C7BEEF9CE
3DF7DC73EEFB294283EDC0975DB7ECCE1E7978FFC654A47ABDE881B19332474E9E8C8A274BA4C5F2A8964C12232F96003B0FA14C9944D0B0E96C548D
D164A8B55AEC56434931F5139B5E67D761FAC35DE3BF2B5DF8A14EA06492CDEF84A2143B4721841D109C28D7684BB445F5458B66952E9B6DB19AD14F
6C78CE3DDAC036E1173FFE4AC19F5F17F4A2BEFDDA7E6DFF276D3F9FBFB89DCA848B340F8D04424D44A8972FA66CE0D3799D7FE622A4E5E516E03763
06FAA7AF466829CFB3C00779BE0CF8B93C2F07BE94B7F3F6F841FE5111DF2EE24B453C12F16F8D1BE41F16F1AD713C3F2D694B371C18C85F7AAAD2B7
7395ECD06B9F57D674AA4EDC7BAAB767EFC4B55F2DD87B292A8FCC7FFD8B93474EF51C9E93FECCBEE3865083B18ED29BAB0A4DF596C183A9B8ACB0A4
487C5221D446DAF79587D73F78FDAEEECF2A2FCE9BB773D2B55FF6906937A4D18F8F5BBB65DFACD3953D334B6EBEE447A186BE87161C9F5E3FB4FD92
E2C2929258FB25A44DA0179FACDA468DBB8ACEB863CA6143BD3A7443DAFB4F7A6FC8A337BF222DAADC9E4DF72D7C76F48EDE9CD0B76F789BCF2CAB4D
60BFB4B06456ACFD021CA0EE12FAB995CA1F66BF3B85FE836ECCFDBBEF9A12AAFBF48EECE76BE7D1DFBFB76EE3424A436FFFDAB555EED1846EA87DF3
A6EA437509ECCF2E2C298BB5CFC57926FDE2CEE78F4D38713DDDB36DC985B5EBA684B8DDB991B6EFFFDD9E0AF91CFAB9AA56E3C1F365A1C5AFB5EC7D
66554D02FBE571770A847014D21656D12F640CCC916DD3D1E8A06F462F3ADB737201CC3CAD898F9B99BEE45E627A775545E870537AE5D4A59943DB2F
D51696C6ED2F179FEBE8EE51FBDB3FE9ABA2E77616F7577756D02BF006A0C534B70E810EB6A1ED17CF8BF75FC8CFF215E927B6377F5EB97AD7EDB297
1B3F8DE6A720CFEDBBEB36B9F2748F55D3AC5DDB5C13B206FC7EA7C34D55317E9632F8596787836592E467F88DA64F6E2EF8BA728FF2E4B18F6A3E89
E667CEEF5F3C7EC170AE5275A2DCBDEF83F33DFB2229E77259DDD0F693E4E7AB6F6EEBD6F465D35FFE6D568E6A3B8AE6A7ACE4EE4F77CDBE9AFEE680
EDADB67B4684E62F71D0818EB909EC27CE4FCB7725DF76D615D2F2078E4C3B9E951DCDCF2F52CE7BF27D33E957F744EAD4CF5E137A72DDEA732FDD53
9EC07EE2FC14ECD35B9F3B6CB3E446F373DDEA43BB8BD55574AFE4A876E6BB334207CB9EBD2F309F4E603F717E6EFEE6DEF557EDA8A54F4FBD89CE99
9E470BF93962F61FA9278EDAE9DE5DE1DECA869CD0A5C25BBF6AFC782E3DA4FD24F97970CA923B57EDD4D2078ED67BA5FA9C687E46485B74597E0E6D
FFF2FC14F247FFF58DEF3DAFFF47E5D4A6A79B0353BF89E68F20EF6B7535FCA54F11EA9EFBDAD2F62396687C700DE41BF4FAC2E2326D4192FC012360
693C7D76323BA3EACC673D42FE74DF74DFB12DDDB9F4531DC6635B9F52875CA30A757D73A904F613E7CF566CE84811AD2DBF7AD3EEA28B3D42FE70D1
28A7299C0613734247D88AEA0F364C4E603F71FE78E729FED5A29D4923D5C71B42177B7B84FC299BB4E654D1D85A9A8661EFBC31A1AA5359FD8F3D28
4B603F71FE603365119A0EAAFFFE3275674A48C89FE90BF665FD496DA791E2C4B2E0252AB4FCE61D3B0EDF386168FB49F2079B99F64E09DD397EEBD3
8E73D4B0E7DBD0F62FCF1FA1BD003F6D1A4AC5BCA5DED0D008A3D5750DB57A536DBCE918CC221552C6626A97E98B13420826988A14B1185D43AD6199
3E19A65B19E71BBC8398CCC97D7B5B11EB5B55A3D1A4375BECC930675362E7A9B2555BCD2653D279A894B879AC0B6D06BD31E93C75F2B879AC660059
93CEE395C5CD63D25B1AEDC684CE61CCC3D2B8797436036693614292CB31F8BD3119E6048AC5E86A9A8C8685891301633251EC7A384C42087A127EED
236273475783239D781E8C7928236E9EEAEA1A6343C2742398BDE91C66BE61B10D578ADEA6C76C524CAF3A0E539F144230A96A6E3DC67A5DAD013036
BBCE6A6FB424C5409D92790C0DB5C606002DB298AD09938DC7409DA6C460EA4D4D49CA9460A04EE331E5C361A04EE33149101C06EA5426C634952785
100CD4A9340653363C868AC7CCD6160D87813A95C762869F07EA34769E5945C9C2463050A7F238CCB0BE419DC663B4C361A04EE330DAA4D1C698CCCB
3149A3FD0422751A8F491A398C813A8DC7940E87813A8DC324437018A8D398FDB15B75D5090F371E03751A93D776835587BF8325C308F75301635B8C
4F52E3826418A85382C141C7F7670AE8E340DB376DC92072A586D43E7568B54A4CB9D693FA57023D932A95CC01F94EA5445288DAF04738B41C55C0B5
1D1BBEA2EB23C842AE69707D980459B09322E29712FDB157787D04AD275705B1A910D91925E2D748F0D52E922889C42A926488F876323A5124117BAB
16F1F82C0A4AC2F8AF221C94878369E1A094742DE1475B031D1D9D264733E3D2D75B7C4E374B71571BC306BC21CD16BEDBC83A5D4ED6C9F8B97E48D3
4581091931A71E08668583D784834503C1D1E160713838C1ABE83AA2EAEF3A0ABFF754DE2C3402CC51012FE5C560C647B5326D8E808BF5231BE3625A
58CA111D09B0308DAB1371D3B2CCED2CE5710BFA82D6776BAB599F6B9AA57F0DDC35D4C48F9473644D036B898A9C2C6F6938A8207FDC6AD78737D6F8
18062F8D5F558DD3C584348F51564F806528D6C389C10BAC52E3F175500D8E0ED0B89F327B193778896538285670DBE16778330B024C80A152C854CA
7030351C54419007822019130EE68783E5E1605D3838890469653848858393C3C1526F5AD7FB10A00F54A7BB3E047A0C7E1FA9CEC21A8212EF086422
BE92D5506DE0675CA83819E73827F88DA7D98FD7C0C76850BF0D2F8471B3BE4EC42F8348E04231AD106D372419BF1ECED20AB21E3C4EFAA030704F8D
3DD060B6A691588FE263BD6908980A47BB6B8DA43F681FE0B49E96CAA642F5D8BC4C8BB3AD1307D16CADE7FCC1EE3633C40BA655D38BAE31B6516C3B
23931500C0E56CF6394007DC6871B00E976739E586DDA09C7ECAED61293FB1E7645AA7CB65D3401D70DCBA60DCCF7A7C4C2BE57453369DAD119E3035
16AB193FCCC11CF7DADB9914592E20881FC4644700DE37C191A84D8D52360A340C24190447B06A85724CAA448154A261B17315AA31140CAB6599D161
E213195393B10CD90C1833BA5B9D0064A8DBDA19F0DC07CB06BF89EE6D4E970B3B8317C4E77DC50889542A99229128650AA437D4E81A4DF6FE2EA5B2
7F1BDF91E4A8E50A4983D94E4547D5CAFE974482BCBC363F369F9F97E7F635AF087858269F2E2A984E89FBC505D36F49DD249694608DA28254B2AB4A
D8552BBFAB48229569126E6BBB83E5D6D1E20181C7C52765AB8C2C1E92D61B6035BD7B4D8C63254335BB1CEE5B712AB43AFD5E97A393AC9CEC8B87A4
03B7BF2D019F8FC1790F8B806DF473D1AD361974568CF5C179E573638EC5FB9B0108E1D020885F6E4321B220C182E163BB2136B6054A524F197C3DAD
F7FA585CD6540B94958F9C5B5DED10F3897CCC2109482884989394077D1FD386ABC4EB60DBA371E38F09996C1200885112A416C6B992117683E23742
4E0A343EA0E468E134F8B00AE99822C3CFC8FC39A351C8AE835E82AD14DCE1774F29530B48E2B946251B199D7A505C91262BC3511F3D0106F319778B
CB834F99E8FAA0B0490CFD0519B271E26A1A344175785A998A8C495037A3251205D48DCE623134E8FBBB14CAFE8D1C2F4957CA15C86AB098E05188D4
D34EBE9397E7C5465A5DCB2FDFD3A28214EECEC7EFDADD6D7050CB8848CD8BEEE7FCF0E37BA894DC164CC216C381546730592839AA365B0D5EF53A25
6A6C303659AC766F6AA247A4A15BAE143FF6285517645209FEE7C81E89447255CC03403B7924E0AED176E97C24F2E326FAF91805F7E899A0DD82B2FE
677DA3B997CEFF926F578C8944225A74623CE6F3E1A782ED9720EE1199AE53A10B91F311056821846DA7C29A2E46E7B8005896E7F10B4E0E66E45254
0F6424CFE346B253CE7D2411F84C113F56C453223E5FC46B053E35FAEF7984BF045BA2BD6BB9976240910F048050F09E71B48EA7169E2EE229CBD3DF
22D18B01AC32125937D88DFB0EC8FD4FDF6687926F32218B99104C2DD5F0186E6DB4116A617C2D707221BDB186EB9B2DD58DF5649CD0EA4047C0E560
F1B12AA8625D4E072ABD1A5E9A62BE705DE07CC245A94457DED295517804470FAF57A01779999C97C9F9B8623E8597617A8997297919A6906E97E5DB
0F43C8CE0D21FB4FB4EFA1097B7A065A3FD0517C7FA476329C1E08658BF4055D9C77E4B598E2FAF8A535C2B75FD4E19FD8C4FFFB1EAEE1BD93F23493
A7593CCDE3E98FBB9BA48A6E12D9226C3AE173AFD09A1C66C6E74E568C7430FBB3E3015C5A46DBBF01D1D9AEB400240000
;;;;
run;quit;

%utlfkil(&pth/grptre32.sas7bdat);
* unzip and create grptre32 dataset;
%utl_submit_R(%nrbquote
  (
    library(R.utils);
    setwd("&pth");
    gunzip("grptre32.sas7bdat.gz",remove=FALSE,overwrite=TRUE);
  ));


%utl_sd1get(loc=%str(&pth\barley.sas7bdat.gz));    ;
cards4;
1F8B0800000000000006ED995D6C53551CC04FB7B14D377533C3A081789D3321642E5DDB755BD76DB75BBBB5B2B2B20FA031E0CA3E587574D2760CE3
4720F8B0076282C40F1495F060E2A2D188090F68328D2290191E8831264E097E257B000CEA0202F5DE73CEBD6DFFFBFF37E0C18F8493B4E7DCDBDF3D
F7DCDF3DE7DEF33F652C9D3E9BDDD577B8ACF4D4272F16B2DBBEACDEB3ECFE92D2F272662BB7E4D8F24C2AD792B5DF66D18A4D8C95E45A0CA2DBD3AD
B4053A7C2D9EAE0E5F58B9E9E4F5F478F4FCE3E483078702DF7A8C9C9F44999E3273BD71258CE56899D188FA2AABDD5A1DACDEE0743C561BEAEA6437
99F4735E70757C617CE0EFC71B2FFF667066DB6EA55BE97F924EC8FEABA787F4AF9C5656AC65CA9D8C9D9183A94C2B174BE627AD6095FB0F6865BF5E
D0B687B5B243962BB4B257967F2FD278599E2A928C96F664943764942B40591E2A53831A8CC4FA87C7E2D1887C4654D7DBABF5BC3716DD3E184F4493
4F296D91F8561672FE7CFBF9989FE4D7471283FD11F351C392C5C7379D8FD1F50747E3F16822CDDF63DDF5E8F85C2BC9B7C647479F48244763925F91
FBE137479F5649BE3D1E890D285D9127A303FA59982B7FE0FDF13937C97BC746C692C3E9F61CBBF47A6862C2A7B68F4436C78DB32EE0E7B5FD7A5A4D
F2D04FC169EB33DECFDD240FFD7C70E2BE3F4A4A5B491EFAE9DB5733FB407923C9433F5BEB5F393B3949F3C04F8CB767AF47EDDE1E8925469311C803
3F0381FE8F5E989C6C2779E047117EEA491EF851787F68F0923CF0A318D74BF1C08F62D7D361BA3DC08FE02FB6AAEB0647B60F26D3FB093FCAB32FFF
FAE9CC8A00C9433FE2FEBA481EFA11FEBD240FFC54F3FE5F584BF2C04FFD57D35AEAA0DB03FCD879FDFE16B5273EB839AACCE7819FEA1FCE14ED7B67
B693E4A19FDDD1654DE5677D240FFDF0E7CF783BC9C3FE23FA6723C9C3FE239E6F2AC9033F41DEFE433E75CD6895E2A8A95DCC4F84FB2F0E923CF013
15FDD94DF2C0CFD89103ABB7F57EDD46F2C0CF00E797AA240FFC2478FBA7691E8E2FD1DF5A04EFB42DE647991B3B73A0745B88E4819FE4C191934BBF
DFD844F2B0FF88FEEC2779E887BF1FCFD5913CEC3FFCFD72AF9BE4A11FDE7F36AB6A6830921CD1AB5AC48FD17E8A077EB6723F338D240FFCF489FBEB
2579E0E704BFDEB087E4811FAB98CFD0D70BFCEC17CF7FE9BFB6669E4FE06742F86C2779E0674ECC079C240FFCA862FCB6913CF0A38AF16B2779E027
28E6332AC9033F91213DBDDDAAAE8F26FA476389684CD18FB4D7117EAE6B12794DCE3AAFFD954ADDE8BCFA3F7D4C2A95AA60AFF2D9F572ED93C79668
736C11E15B582EFFCED32883BFA2F17519C717EA5F79169E97F0720E5B66EECF618A96DD25CB46D2AA48AD34B72AB433EAA99215F0DC21CF5EC7D2EB
0C8C5DD58E71A7379B1490F4F581EE1E5F281CF075E8F1C63A4F57C0D71366619FA7AB3BD0E3338FBC22EAD1EB2EB8014FC505E9EBD763907C266291
7CD9368BACD3C85372DF12B94FCFAFC97D05729F9E6BB76CDE3DBB8CECBB84ECFB27D29F5A32EEC39C962E68F99D72BBD45ACEE3B91D19BCC1EA7DA9
4C2F9488ED5A269CA4FEA5EB582C65C6BE8B25FDDE19EB4B4532BF43EEF3C8EDC21B3A7B61465F2FCB38B69897975F676D79DA992DF37A758F59DAC1
E6254BE6C6C90C07EFF1A12F96B0F8F37428483E4F617CC8E3D5F1469287F1218FCFCFF9491E8D9F1B3C240FDE1FAA789F35933C9C7FF0CBFDC585C5
DB36E4D5A0F2F61C45E3791BE24779B82FE7C8B92A0FC9C3F7EB02EB0536C48F8CAF9C240FFD9C7EEBAABF742FCDA37E865AB0781BF5C3E3C3199A87
7E8CF89CE2A11F3E1F5AE52279E8273C95179B99A92479E847CC17EB491EFA31D68F90781BF5C30799DA4AF2D0CF8F57822BBDCFA3EB17A81FDE1F0E
39481EED3F87AC240FFD5CAA3CB5FB688393E4D1F8671A8DB7513F62BED842F2D00F5F2F781C5DBF40FD88F50295E4A11FB1DE41F3D08F781E3A491E
FAE1E3B1148DCF513F7797351FFBEE0D3FC9A3E36B2DBA5E80FAE13E67BD248FF71F07C9E3CFE72692C7C7970B8BB7513F22FE44D723503F627D84E6
513FAB3C240FFD88FE602779E847F47F27C9A3FD676F3D166FD37EC26D240FFDF0E7D5CE769247C7D704BA1E81FA11EF5F3BC9433FA23D4E92C7C797
1B8BB7513FFC799BD742F2D08FE8CF3E92877EC4F3B39EE4F1F53B17C9A3EFAF8DCD240FFD88196013166FA37EC47A9F97E4A11FF1FC44D70B503FE2
FF0334FE47FD5C0CBF59303E5E45F2F0FF03E1A781E4E1FF2B22A1EB0B981F26D613D1F933E647F02FB5933C9C3F8BF57A743E8CF991FF9738481EFA
D9776C78456F2F3A9F5FC04F488C4BA6CAF1F988DCAE55D745E35BA2B1A876C92276E6BBA7BA55C36BF6F18E0CBEABDB17EA5C2F78F9FB4EA3FE0EC9
D764F0B12D5ABBC452836AD4EF56B38ECFAA3F2318DAD9297F6F90F5FBE5B62D8BCF370FE8CABE5EB606E145FC2FEA337E6F5AB07E368F77C9DCB8DE
4A9C37FDB9015F43F09D80C7DA23E27F7199864FA3FD46FBB2EFAF11FFA77D7A407BEA88F604E5EF86FF80DCB613BCE15FB6C73CDE8AF3536B41FB0D
9EF263F86C96FC6AB99D7DBF36993CB8BFA8CF8CEA4D3F8D32EF589837FDCBFEA01AD703FCB3E7CC43DED53BDF0E73E56B9B1EE27B33AAFC1B368181
7B00240000
;;;;
run;

%utlfkil(&pth/barley.sas7bdat);
* unzip and create barley dataset;
%utl_submit_R(%nrbquote
  (
    library(R.utils);
    setwd("&pth");
    gunzip("barley.sas7bdat.gz",remove=FALSE,overwrite=TRUE);
  ));

****     *    *****
 *  *   * *     *
 *  *  *   *    *
 *  *  *****    *
 *  *  *   *    *
 *  *  *   *    *
****   *   *    *;

%utl_sd1get(loc=%str(&pth\dat.sas7bdat.gz));    ;
cards4;
1F8B0800000000000006ED585F685B55183FB7CD9648B399423B227478138BECA1969B3FFDA76B73B226E98AAB8D4DB729A26B9AA633D8255B927628
0ACEED610FE28393C9740F63C8C03E89137C1041457448C507119930AD43102AE840B04EB75ECFB9F73B37375FEF59D789C2603FB8F9BEFB7DBF73CE
F7FDCEC99F1B426AF864E9C8C4F996E6AF3E7CD543EEFA3CF4B2FF5E5F733048C241A521ECB2588D4A5D3CAC307780105FA322189978464D0DEF4A26
E2E3EABF011B1FE7F6E4E02F3F9E1DBE1817D658445DF8C8B2BC381F21BC0051445FA716D14223A1C7BAA3FB7AD263A3E416C1D7FC6ED3B163E2C2F9
A3CF85DF113CABB63BB883DB042FC1F9E5B8E8662F0D01E26546DD4CC822BC995A98EF05CE4FCCD120FE16F32977D8FD41E647C1EF607E02FC6B4D8C
0FFE8526E030BC66F3276C7E07F26128E04ACCB41E6ADA3F6359F8ACA8CFDF0FF9009D74CC0BFB00CDD5E5098C6B01EBA2538EF920D8FB68DE31EF03
ABD1E9BABCA85BACBF18DBEF9817EB7B69D6312FE657517F225E43CE31DF66CD3FE53CDE9ABFBE3F51574D9F69C7BC18EFA7FB1DF3A28F00EACF0F71
B17F5B507F28FFA286F64FE43B21DF8FFA137DD7EACF3BE6DB2D3B7DC37CD4EACFFDB5F67CE2D33E9A99CB162BA5AA684B0DF54542DC8E94CAE542C5
FA6AA35B1BDFFDF683871252FE60B9547AA6522D15817FA0EFF5CBF3F3FD52FE50395B9C52C7B2070B537C151AE1382FAF27313B335B7DDAAA2766F0
7F1FA47BF23373F9AA15B7F8BB8B85B97CB952A83EABA6B2E503F485933F7F7C69EBB094BF375BC9E7AC55553A71A26B29107C50CAC7FA0CE7DE7B65
7E3E21E5637D3EBBFA66FAB8A747CAC7FA7CB9C0B04B5E0FD2C79C7FE70E3A5ECE4F16D4D57CACCF0F8B4D27DE5E1A95F2B13E470BFE81E0E5A4948F
F5D9A21D79E2F0E121291FE91333CF67BF948FF531E65FA6523ED6C7A8FF6C923E52EA54A35D3D6BEA63E8EF1D91F2B13EE679DE2EE5637DDE3FFDF0
A1DDDFA4A47C7C7E0C7E2B95F21DCFCF829C8FF531CFDB0E93DF1D5E539FE5D9C5D3CD87D2523ED2277666E68BD6EF9F1C90F2B13EE679DE29E5637D
AADE0B4FFDF66BAF948FF579E314C33DDBA57CC7F33349693A9FADCEF0A96EAC4F4CD42FE3E3F363E873A95FCAC7FA98FB9B90F2B13E46BF8FC7A57C
AC0F7C4D4AF9581FF3F31FF4EFE95AA5273E3FA69E43523ED6C7A8FF54B794EFA88F3725E5237D74F3FD1B91F2913EC4D8DFE354CA47FA90698E7383
746FA1922B152B85A2CA47467A25FAF0C745032B7FEB3AB949AC877B5B8CD175BD9D9C317E65B7B1CB4536B0DFDAE693BE42AEEB2EA2EB2BB659AF31
7EAF6DBC87BFB814E2B7FC06C38AB8CFE60BB029F46DD65D3BACB60D6C07588D34DAD6B9CEC6446BB7032A02FF9F20339E4CEF898F85D8154E8D251F
4D8F66EA0AEF35FA23C4BD0E7DBCEE5ADFBC838DC47C16D908352930A7B03AC436408CDB1588B921C62DDBAA557BF59743ECAA43ECFFC01F0CE2FF9E
65862BCC6E86FB662D4854665B6D7CC1E567E86EEEF8CC7BBE033AE03F2DF816617FF65D0B7CEF1AC03681DD043600D6B3AED53DA4F69F5A8B6DACD7
F0DB6E7236175B59B1CD64629FE5B5925550EC37FF007B95D44100140000
;;;;
run;

%utlfkil(&pth/dat.sas7bdat);
* unzip and create barley dataset;
%utl_submit_R(%nrbquote
  (
    library(R.utils);
    setwd("&pth");
    gunzip("dat.sas7bdat.gz",remove=FALSE,overwrite=TRUE);
  ));

*   *  *****   ***     *    ****    ***
** **    *    *   *   * *   *   *  *   *
* * *    *    *      *   *  *   *   *
*   *    *    *      *****  ****     *
*   *    *    *      *   *  * *       *
*   *    *    *   *  *   *  *  *   *   *
*   *    *     ***   *   *  *   *   ***;

%let dfr=mtcars;

%utlfkil(&pth/&dfr..sas7bdat);

%utl_sd1get(loc=%str(&pth\&dfr..sas7bdat.gz));
cards4;
1F8B0800000000000006ED5A6B6C5B45161E276EE2103775A823A5DD52EE46FD11AAB438B1E3E69D71E334C92A01C70E79D0AA5BB775558371829394
D216A9AB05A93FD0A2B2D2EEB280B6027EF1164502A92065BBA83CD415ACBA125A6953A5BC56EAF22842145AD27867E69CB9BE9E7874033F809572A4
E49C197FF7CC996FCECC9DE384909C9CBEF89B5D27BD95EFBEFEB08B94BD59FF60F58D9ECA9A1AD250E3286A709AA862475E7F8383991D84788A1D12
110BC58C6D7DFDDD03435DA168CCF8C1120E0D85B8BE70E8B59DCFF4FD2B24B518C4383B636A1E9C41080F4006D1BCD9E7F7D50FD48F0603BFDE1289
DE4A7EA0F0319F0B9C6B953FEAE7A3FEC4CD1267C6B62CCBF27F226398BF5CBE71B35F457EB29A29633D2173B899BCCC7623E6A37584F8B0FF18B377
7083B5D7313B85F6FDBF20E44F68B731BB176D17B303E8E79F6B73F6098B9DB2D84D16DB69B1DF5B93B31FB3D8FB2D76C06213C5C670C89EB86140AB
9182AE46BD17F4D1EDD42F6415BD5CBBE3A1D35F3B414FFB683E8B973A417B68BEB6F70BFDA5F481FF0EBEBA7E45BDADDFBF9FE51254C6D90E9A8EE0
E7159405CB222DA23CEADAC71A68BE3FD5EFA5CE7D4294788D0933DEA726DAAF7BFF49177D753D8FB48CDECD9B137EC5AF1497D92FA679528E6FA0BF
03A0E712C84319CCFF81720D0FAA5F42FFFC089335D2AF8C37853CDC4EBDCFF75C38E42DA1423D5F0E7137056CE3157E1FA92B1CEF8934FA2B437EDD
D8BED9265E0F057E9BF2DBC3BBB17D2BCE7F25EA32ECD7C52BD78D2CCA07883F0EED991158FF1DAB4C9EC5B89F48BCDE2FE0E5FA5643FB2BCCDF999D
A65FB96E228E7E35CF54BF327FEB97EC17E2B5F70BFCCA7D69C0386D7743FBE83E5C2F17EDE5CBD523F1320E55E4BAB9705E12A7F7CB3603DB112B91
7F7BBF30FE665BBF629BB557204EF26013EFD90DA65FF0771FE81349DCB7A5F879153DCC37CA55BB783D85FDCE1C013D778739FE1AE770C5A697AA68
946FB87FD8FB051E3629F11E46FF29E4B58C8A658B57D14F795ADC69EF17D3373FFE6763E83F02F10DCAFDE280F3E1A07A9EE9CEC98E7CBF9F46B1FD
2B3C1F5763DC573A218FEDCE5FDC6F5FE5E215C39C1984368DC0FC2F78707F5C83383EB18F17E6DB98EFB76427FA1DC5F9AFC4B88BE9DFC46BC3FE9C
042DCF3D5CB7B949D033BBCDF3F72611B09BDEC8DD9F57DF9BAA5FB2685F80CEF995E798C8DB43E5CAFED4FB85796E54E29D06CDCE75B97F81870ACC
5F1987CEAF47392765BCF7A2FF84F9DE14BC9EAE8078DDF6F1C2BC5ACD7160FE8BF317EE250B9D85CF494D3E9096FCF857633ECC0CE3FC2B61BDD63B
E0F393BAFB8ED78C57DD1790BF23D0A63B300F2AE8FEE39F1DE96CFC16E3957ED578737E61DD943CBB84EB767442D917F2BD29CF135DBC38EF93B9F7
1BB8C7F7315B37E0D58D7197204E7DCFAB7EE53D4FC9DFF73218F714AE9BDBBC3F40FAD8C56BD0FCFB19AE2795FB783B9EEB1E7C5F94206FF6E70EBB
B6B3F27905BB0F4385EF20C5E2B7932C646534F3D96CB6C9129D8BFF723A84F608BB88549BFD45BC1427ABD096C25C646BCDD6063622973A522A7400
476F22B9EF1908B9C69E69CB353B0A7D3F101BEA8E8CF575F78719603814EDEB1E1A2363DDA168AC6FA8DB7C721EFC70DFA564E9E22ECDCD9FD70B25
04EA86128CCD813EA5CE62DF0AECE37A01FB4AB18FEBEF589F3AD6D5027D570AF4FD187299895C876F985C62BA02DB95BE1AE263FAA0052FB13C97BC
DCF0407B0B014EB23FD13CECE4EDF6AB5F2E15CBD7AE087539EA95D817C2B6EB7B8DEEB2E4BAD7F2AC5BD8EB96E8CDC946762CCAEA21D33A481689C3
DA7887716078D809833F5945E63CE7452052D737FBEBF9DE1B894F2678FD8C425A4AF6BE70CF3DED742439B9673C3D994C1BB78C6F36FC4D123F309E
C9242773F848F0E3EBBEF8BC578BEFCA8C8FDF3939359E46FC0DC52FBD7FAA35A4C5F764E2E9BD46343E91DCCB47C1F3AF538B0F4FA7A6A7F6E7CE12
781FB5D081787ACFFEE94C524E8DE11BB8BE2D9D3C90C84C26A7EE35B6C533775111CF29AAC52BFC189B7615BDF2F9E69016AFF003FE0FEBFD2BFC18
BB7EDF78F19735412D5EE5E7DC5FAEF5561ED7E30BF2B36F2BED49C57767CC51F5FCDCF787FFFC7576568F57F979F1EDB55F7B8E87B478959FBB9AFF
F8C1D31B5BB478959FB119677A76B64E8B57F939917AA7EAFC6CB316AFF233E57E6BE717E9561A3B104F4F8E4FC555BCCA8FD87CB44B8B57F9F9707E
A0367C7F488B57F911F9F044408B2F983F4FF8B478959F2B75EFFEF6546B508B57F981FAB1850E2752071253B97E1D3F703FDBAAC5ABFCF4ED79F977
4FDFD1A5C5ABFC9CB9F268E4988B6AF12A3F229F6FD0E3557EE03C0C6AF12A3F623F56B6D3A14C6277D2588C57F9B9DEDB79E6DF8FF76AF105F7D760
8F16AFF223F8BC18D6E20BE74F408B2F7C3E7768F185F7570BE5A778A0718B2D3FF0FD60B716AFF2537ACE7724FC861E5F909F8D212D5EE507F2C1AF
C5ABFC40FE07B5F882F973BC19F0C186A5F133B64D8B57F911E7D5D11E2DBEE0FE3AD6A1C5ABFCC8EF337478951F8827A8C517DE5F6D3492884FA5E2
69F3FEB3F0DDF7BF9B2E3FB3FC8C7846D4A7DFAEE536FFFB5239A96497EB72F1196577F21242B055C6FA2F677945B890857BFDB5EC7C5E7DFDA0C5AF
B5BE96B6C762575B6CC362D75A6C9FC56EB2D8D462F75AEC88C596C2EFFFBBCCD606F1CD0061A380AEC3FAC547A0CACFD5F0D06EC336C57618752FF6
F72FAAF523B9A6B6D61F88F490AEB17E12EE8B457AD903E168686884953B83B1EEAEE118ABC50608E961F57F5728BAD5F4360FFC2ED7FF4B135EFF97
A32DEBFF2A6CF3FA7F94887FB7304562F91EA821B90FF917303FE7FADFFAB76F3BB1D6FFD7A3F6A2F6939FBAFE772ABDA3A6652C7E6485B5F13F8097
007900240000
;;;;
run;

%utlfkil(&pth/&dfr..sas7bdat);
* unzip and create &dfr dataset;
%utl_submit_R(%nrbquote
  (
    library(R.utils);
    setwd("&pth");
    gunzip("&dfr..sas7bdat.gz",remove=FALSE,overwrite=TRUE);
  ));

****    ***
 *  *  *   *
 *  *   *
 *  *    *
 *  *     *
 *  *  *   *
****    ***;

/*

 * data from R to SAS
 %let dfr=ds;

 %utlfkil(&pth/&dfr..xpt);
 * R dataframe to SAS xport dataset;
 %utl_submit_R(%nrbquote
   (
     library(SASxport);
     tmp <- read.csv("http://www.math.smith.edu/r/data/help.csv");
     &dfr<- tmp[, (colnames(tmp) %in% c("mcs","pcs"))];
     head(&dfr);
     write.xport(&dfr,file="&pth/&dfr..xpt",autogen.formats=FALSE);
   ));

 * xpt to sas7bdat;
 libname xpt xport "&pth\&dfr..xpt";
 data &dfr (compress=no outrep=windows_32); ;
    set xpt.&dfr;
 run;

 * zip barley.sas7bdat;
 %utl_submit_R(%nrbquote
   (
     library(R.utils);
     setwd("&pth");
     gzip("&dfr..sas7bdat",remove=FALSE,overwrite=TRUE);
   ));

 * create hext version of xipped sas7bdat;
 %utl_sd1put(loc=%str(&pth\&dfr..sas7bdat.gz));

%utlfkil(&pth/&dfr..sas7bdat);
* unzip and create barley dataset;
%utl_submit_R(%nrbquote
  (
    library(R.utils);
    setwd("&pth");
    gunzip("&dfr..sas7bdat.gz",remove=FALSE,overwrite=TRUE);
  ));

%utl_sd1put(loc=%str(&pth\&dfr..sas7bdat.gz));
*/


%let dfr=ds;
%utl_sd1get(loc=%str(&pth\&dfr..sas7bdat.gz));
cards4;
1F8B0800000000000006ED5A07545457DE7F080A16082AA81B893362231481018681199837BD178A2DC519BBAE468D9AD865EC622F314A50195B12A3
92AC262A3650A389891AA3C6C482905822628C6B81D8987DEFF71F1B5FF624FB7DDFD93D7B0ED733DCF7EEBBE5DFDB95619EB6FDD7263BB78634FD66
CFE200A6E117F1735B09829B868733A2709F7A22BF27B37C7D9E1B17F9708FE90C13ECEBF3784696224BA8359835EA2CE1FFA9A915D90ABEBF75E2B2
629BE18CE2718F4384474A9EF43C70C11C645CF7188894CE710971F196F8EEE24447B23DD3C6FC2F1B7FE6DE15B3DB3FFED5FE2ECE97053F9EF704B6
BA56D7FE4B5AB2577EF9C6EB0F536F37D388EB84410C53EE55A610EEB98977CE25EE21CE3BBE897B96F00FDCFB2CEEB9BDF7F935EE39DAFB2CE29E23
BDCF358D1926D1BBCF57B59EBD5378552EB99D6861B9DEB9312C85ADF1787276FA29D9DF3C1E79DEC654D6E3F194BDB73593EF8BA581ADD9060CC32A
AAADEC036EDEC5071AB63E07BA6C9392BDCBCDAFD994C4EF537252A66339DCDC1DF799D87B1E4FC199A9129643C9EDFB7512CB9D29FC4E6FE7F7F3C4
658663FDA67015CB8394E72F66AB3D1E817D8598BDCF9DD7BF99927DC4F56D1B59F9FDD8FD0F356C3D86714DAF56B3973C1EC7270722015F50810ADF
87CED1F37095F53925C7BA953FA4A0DFB7D4C4C3C51CC84FE6CF2FE9DB478B7DF61D49E3CF778549CC80D71AAAE1F79377EA68611B72E3A377C5B1DC
3277599192BDC9E1BBE65A671EFFF221510A7E7D79BF85261E4EC139A3920DE0F068599688F98D4F803E655BD7E98047EF301D5BC5C15BB62A01F8B6
FAD200B8DF9568797A0B8C3E4AD0A5EDC6247E3DF3C94C1BF65DF0B11270165558F15E1DA960FDB9FD333E071DCA5746E9F07E384C83F3766D97020F
6D82867DC8D1FDE10311E03DDECC003AFCD8C602BE2DD86F03DEEAB352CCBBB9C988FD5EEA033A39B7F634F3F8977F3F490A79B8B5D208BE4E7DD98C
7354F56DFCB9CC2197925FEF592E22FA5FBBA5E2F9ED38F1BE01DF6BD68A005F6E3733F08C5CA4C53CE1990CF6450E5F6B512CF8916D33A26FD55102
FA97D587FC951DBF9206B852020C78DF31280D7C6CEE47E74F7A4F017A8EE941F00976428E999C7833E4E99E2711FB25C4ABF97767459F349CBF25C4
02B8EE1E4CE5E19797EFD142AE4BAFC7832F4367823EC275C90A7C0F73EA40A71046C2DEE6E87864541A8FA7C7E7B40EFCBE9DAAE6E9EB88F92015F4
2BCB833CB1E16364187FEBA88E978F92D3C1A9E0E3C51003E47CB84B8E7D03120CC0B3C82301FDAEAD34816F973E6641B7AA050AC09FB1440AFE75EA
6EC4BE632B159097CC9FEC6C2077DED685F18067EA4425E09CD02011F458D2CC0E7A35389E02FEB5E3E8CBC35FF4693CF00C79C708B9595CAD829C6C
5EA6C5792F7BA02FC24771265E7E8B73B6A462FF840D808FD55CEE0C7CCFBD2E05BC6AA70AF33BB4859C954D1DACC0F9B7EFD8006FE05D31F8746024
D1A7DE6019D69BFAE9F17E7A3E0BBEF8988D6C2507DF2F2763C08F1BFE19A0CFCB2301AFEB4EAE19FA784B1D09F973D935044FF704D0EBDD2F2D3C3D
CA4F48C05F4F4928F1D7A735F4D635B1B50572BDE66D23F473CB6F1ABC1F3A2703FD67575858CE26BB832BC9FED5A4925C47BEAF823C7CBA0C725F30
E110F8CFAC60CD90DF530D600F8A2F7CE495F7EBB08B9E6367B16FC1BE84449C1F63227DBE7DC9407211988E7DA6E959D06171BA9AE4637902E838E7
91097C1F6C89039C5DFDF5EC350E8E795362C1BFE56A2DF86FAA9182DE95D274E8CBCD0F93C1CFD5C3EC807F444F05F6EB5462625B70EBF265B1E0DB
EE9F0DC067AE3919EF0B8F815FC513C7A849DF9274C06F79B684F60F36B137B8F9CBFB76C67808A71FFCBADFFA1AB0FFB09658E77C302F19FAB76B8F
0DF0B0EB63419FD9DF10BF72B76AC1EFBC7B66D0F9C23192EB6F2526ECFBC36A0BF87D29D0C4D3B1405B2C01BED123F5EC556EDEDAD208D06B5B3F13
F0BF182EC5FC88EE4AD0376A839AA7AB33CEA56139B7285C5301FBEA3E77C1C2CB7789CF3D19F663B8FDF8F71FF571A4B79C7DE7E10B8D2079BA359C
F059F6B59AF4E42315E0EE305AC4EFEB7AF1860CF37616A9D09F78CB4AF6544376387ABD1E748BDDA184FC0FD8A200BC53378AA1973D3798492F0E68
D117EC65A17F636DE44F461ED4427E0EEF043F1D8BE65940EFB95DD590EF753E1AD06B787319E4F6C33D329CBBE2B018F0349B42F251F95612E06A78
45C9DEE1E4E88DC932F0473A5C0F7A2D3909FD633A8F079E6C8B1035E4E6AF4D55A0E3F9BDF05739A7C7A4411E7D1DC9E0F782D6E07BCE076605F4BF
A9400DFD1BE7073F2EF85AA0243B1E9A06395FF7A51670060C9180CE1D966AB1AEB490057E8F76C33E33859F8810571CBA2F877FAD2E94424E22BF33
82FE1B16EB20570187D38047F27E16766AC03009F8746121F12DF94723E28FA896645FD7FCCD8C732FFB1A409F716D0CB097E79B26E2DCF71933E43F
542C02FD756F135F06374BC77E0597AC78F72D94814E3D634C386FF6B444C877559909F2161927C739BFECB0927DB9A9C1F71983CD90D3517DA9BFAA
57420E17E6C2FE3AA65FA0B842F717D865766F7BE28B3881E2ABE653D2F1BD4F16C50DB9638CBCBDC88968DB01EFF71839C9F73A31E0B83F8AECE08A
352A9CF7A994E4B8F74111F6118C6741DFED6DE02FCB46BCA0019D1A2953302F68971676ACB009E4C7E5D3C844725B8FECC69155343F3C8BFC7D11A7
C7DC74C19E1201C501B715C023F34D31F9B97225E28BEA2829E8BBE42CE8EDB83B430D3A8DF89EFC91F17C1AD1FBA102F193EDD544A2B798F4FD009B
8A79EFAFB342AE0686AA291E5CA9805E7E749CE4AF6520E12DF1A3FDABD6DB01C7A29529141FADD5437E8AB747835F96500BE8314000F8FE49ABE144
FE9F7FFD7F5CC381D686398E989DB3DA4C3DEE9F0FF7E39BE6C913DF781E0B9F5919C0FFF1F341FFF8F971E3E3EF564FDEDA532EC244787B6A1C4F3C
D14F5FD37FAF5E9095ADB1DB55598C85FB3D0B08BF8EB779FEFF02A64DFC9FE2C143CAF18279DC3FF28EF9314FF216E0C03FD7F78EF17D8D77CCDF3B
C6F71CD1FF07D5EFFFCED8BDDF19FB77B42AAE3DE66235D76E324FF3BFA671E17CA98539F894754F38CE4B034F1B4CE0DA168668E2F90FE1F147EDD9
DCF78F1A8F6E3D6FDFD0DBF32AC0CB674BEF7BC0BF747A00F3B4A616F2CCDA26780EFB93BBF97127FB3CA7257C7BF8E4E9593E79DB732389CFD00027
FAD05ADE5F66CE94C30E0D1B84BCD731B1500F7FE698124FF9C952C431AE11BF204F91EB2A93600F959B91FFE5545E457E96D3F29C0EFEC43C88E2C6
3EBB12619F672459E11F7AA4C27F32A7A729612F4F3721FF53F21DF97DED6A167631384C8F3CAD707D04CB4D77CB6329BEBD1F948C79D6CB941F4D9B
8C7CBABCD709C4C1C286F7111FCBB33758E01FA625EAE137C6C6EA295E5A073F2E6FACA478C97A380EEB078D473C91E3E86D82BFCE772563BCCB0B3A
D8EDA04E947F9AEE2B00B77216F2AEE2EFCCE9D8279CB3DB3C9E2F7279204FBF8CC36AE0796C4E32E5879566B619D77F7C3A86E25C2E0FE16D4D9C94
E6F5349B00F7C0D729AE9F5588B857D8EF34E236A6D3488AF3FBAE263A67F5079D5D37A3B538CF22475CC9648C89C3BEE7D3F4148FAEA23C688188E2
BCFC367AEC7F75938EFCB9037105E3EFD6200ED96DA3BC745A581AE0EAFF9318FCAF2F36A2DF3C464A751823E820FF58970E3A7DD64E0F3AF47C44F4
EA3D41CFAF77D6FC1A053E24C6A25EC004FD4A71DD16B78DBDC5F5618D52F07D486F1DF8F432172F206FCDCDA0BCB72A1AF009DA1A0077703F8A4B76
4E24F8F61E26FCFCC55487987384F2A6F455297C9CC7961F439D417E75B312716DFC5CE273E39988F78BD7BF4FDF4BB8389D8FF7DE8E9182CE730BCC
90BB4E0DA8EE71E612FCB720285B0E799DFB8696FFEE8C8867D11F39893C5D1E2D8C43DC30D307DF19893B1EDFD7BD61C4F74F76907E74FF5E8338B5
D115D439043F1DD2209EBC5A988C753777834FCEE5A116E2C7AF747ED52139ED1748799C6E9C91F2CC5D0AD0EDF5E314670E2D3600DF7B5FC8295E4B
B1815FF2BFEA282F7A19F9813CA47F1CD6CDBB04F97046F5A77839CD043D64CFD4503EF470BA11F274FD1B35E87C3152873C51BF3E017AB9D7A607BD
5D5CDECAF33FFCA815747B740F7A2E5FF63703E0DA592E47DCD4EC0AF24D77E40413E5915BA94EF4D9D674CC3FD0418B7E743EE5F7D9BD203FCE4993
D3806FF64DC44D65FD6F24018FB87516C4691FDC4FC47EEE0CAA4334594079D697B914DF5B2A12292FBDAC055D3AA568296F1E68E3E70B5E5FDB09F2
B52686EA42C23914775A26E9281F999B42FA308EE4E36453CAEB0F0769F9BCA66C5E7FCA075EAD54029EEA3CC471CECFF5542F7B7D3CD5FBAA1C3AC0
F7CE298AFB425F5043DFEBE7A96177BFD720CE2E0E7A0DF6D1F5B0CC80758D7C285E1CDCC20E79D8E620F99C3E0276A7F8A534AA7FF8062921474DFC
88EF23CFA25EE5F2DB11877DAD292CCE1B2449843E0CB8A540DDD5A79784EC4FB50AFC5D3E82F28CD4AB1954F7DA2C227A6DB4404EE247523D2BC5AA
E7EB22826B7362C1FF068D298FC8D2C04E1794CF51815F56AFFFF8E21DCA7F66DF3550DE5640799CA95D32EA438BA6B1A0E7CA9B62C01D50C552BDF6
EF2CBEE75DA77AD2C944DA3F44857CA4E4B84C8C7CBDC1E772EC77EE15AC171E5118499FDB8761BF815C7E8EFAC7F604AC1B38C780BCA05BB10CF84D
996C803E7C730776B9E0F324D869E78D5B22C851AF45647703DFA0BAD5E1C6A89395C45F8F437E5B7F861C75DC6E7BE4A0C7DE31268CF73B1D0FB80B
2EDA807FD7EB12D071DF30D80BF7800A92DF5677886FFE7D80AF23B584ECF5D483C9E053AF1EE9940FA553DD64F9062DE469D308CA7326BE4AFEE8D6
109207798402F4BC9C2CC5F8FEA31AF06DB381F8D97507D5A9FB68A87EDC2E18F5BF9CFBD7C83FEFF635E2BDE7196FDE172667B958A87CD7A7510457
73AA5BE7AC14511EAB84BE78F6B9A90EAD6C29055F6E1C435D23E79523C83F85C77F453E5C1E761FF95341F0F170C0B7782DEC81A37412E5695113A9
2EDA7DB29AF6FB99EC548F072AF2439904E790BC24F401DBA89E93D45BCBFB19CFC96129A863F874411DC07D74BA9DEA74EF89604F82EF92DFFECC98
00F9DFD6D80E7F203E077BEB7E758B06F270720BF9A70EA708EE851BE117CB479D853CE78C7319288E9AA4873D59BF56063A5B4220479E775A239F77
FA1E23FFDEF06A18F43F6F31E953C57ACAFF4B37DAB0AF5FA537EF5F62A03ACB19E8A733EC2F14BFB429A5F8ECAD228A7F7E4C23FBB0CB0F7557E7B6
A9529CBF340779BCF3D8B784DFC2EE66D8EB5962E4B925517956C0B7DB574975F20C3BEC9760740AE462E60535F4E6C33E546F7F456F067D2629E454
479F42F6D2CF69C1FEE619B08F4C74040B395D5D4AF187CE5F0D3C7303C83EE497101F436F137D9B7713611FF340C2E3E3E46892D7300BD9BF6AAA3F
0DE985F88299313615DFABCA689FF57B890E5FA7DAC1B7B2E6E46FCE0E50824E8B36505D66E476C44742E128AAAB0A9769F1FEDA2631CE9D1AA3A4FB
86D6A88F3AE3E4543F1BD94EC55EE1F8DCB06334EC8BFF0DD881E2A62AE26F4815E21477D630AAEBF69C9302BB37E30DF2173FEF14537DAC05EA8F4C
8B11744F74D481FB8392EFC7EB706EF55DD4373C4D1691BFBE3D94E8E79BA1A1F170AA7FDC1C62823C7E17A4479DA42AA133E63F38C052DDE98684EA
995F410F1C975E4A003C99E7C95FFC5249F5FF0ECBF4B04F773F4B81BC2485515DAC613A4BFABD87FCE6C162D491048347539D69FFD722ACCFF80AF6
C9B9768608F0771BA5807C317BA0779E0D4156B682DB7FEE9731444733D5B5A20AD5E0CB9B3D282E0A2945FC2A6F3519755D363094EAEEC31350072F
C8E3E203D4931BDB88EFDFA869BE87E2FD513BA81E79E90703FC68EC51AA4B773A68A47B8154BA37B447E0BEAD6C525731F08AA9AFA3FA6409C95F93
778D54979E2F831C4FB84671B9E43DBA37700C2639EE91DB99EA5E73D5C077C776BA27D9DA1772CAB6CDA07849A5A0BAF0D470AA57CF6A4D7A72EA1A
C5034193C99FF43A057D299F77404DF1C2FA24C0D97538D565738B92C1FF6973295EB8F713DD033D3066E05EB3E9E876C0B7E5291DDB9A3BFF67512C
DD4F5468E91E72AC0CF0E473FE9997EBD7F6C0EE97E4CC267884668A1BDC3F9A51E7522D93E19CB12E351BC2BDF78AE80CFDAF2AB5607CF35815F4BB
DF042BFC8FB990EE959C77B19FD3DD8AE2C31715A4B72B24D05BF7B7460BE861EB41F77FB765D057C6559900FC228A289F68E18E049FEB717EEC32F7
DECB118B3C2E5C23A53A6905E26FE6D87C3BDB9483EB86A723DD57C4B090CFD97D530167E850D22FDFB1DEFBBE71C8BFE4AE8764471B24AA296F1D41
795F5E9995EE69A3204FC26FAB8DA0FF9917200FEE9C1B903F4F45338A8FD26B108778AECF57527E9B4FF9D7C02B648F0E16411E1D0B0646803EBF39
E19F3D83B6D13DECFC2A92BFBF4F23FBDAF35BF223ADE7D17D780597B7A07E7899F2DFCE4B2D940747925CFE9996F44CFEDF9D330E8C4F4B3CF3F05C
6F4479BCF46424F06B3C85E29FC1257AE0B56328ECA4A7FD7211E05D35D104B96CB119FEC19920A67BF7C84DC48F3BAFE25E94B93893EE81CF6FA3BA
BA5545F7BCE7D255E8AB43B574AFD513FA9973F222F9C52EA5B03F5C5A9644F7C58FAC54DFAE5291FE48A9EEFAC36AE48F9E0902C4AB3903B723DF66
F2D7D0FA09CD719F522E596806BDDFEC8738465053CFDBE7CB280F562A601F9B04C663FC8285F291C0B3649F1F8DC77AC7B6DF28EF9FE8A67BA3B75B
901C9CA94FF5DF55DB81BF7B6B29E24DA7530C3DE3F239D81D57B638FD4FF3ABAED5B5BA56D7EA5A5DAB6B75ADAED5B5BA56D7FEE3CDF327DBEE0086
B16799F11F36145A8BA34B57B3B4D650B649E9E0DB01FFE7C733D54A033F1E5D6BDC66B7ED6DF0FC90A5077670D86B8D9B6DA7EA3F3FA2EF4A337BD7
1AD765191C47FC6A8D5909B0D76A8F2BBA384EF93E3FA6E942FB9A6A8D2B6D34FE73BDE7C715DDB29459AFD41ED45930F92C97B6DA55349ECD13CDAA
1C506B48959919AFB2AB55ED9E1FFF23B6FD03C3C4C85D00340000
;;;;
run;

%utlfkil(&pth/&dfr..sas7bdat);
* unzip and create &dfr dataset;
%utl_submit_R(%nrbquote
  (
    library(R.utils);
    setwd("&pth");
    gunzip("&dfr..sas7bdat.gz",remove=FALSE,overwrite=TRUE);
  ));

*****  *   *  ****   *       ***   *   *  *****  *****
*      ** **  *   *  *      *   *  *   *  *      *
*      * * *  *   *  *      *   *   * *   *      *
****   *   *  ****   *      *   *    *    ****   ****
*      *   *  *      *      *   *    *    *      *
*      *   *  *      *      *   *    *    *      *
*****  *   *  *      *****   ***     *    *****  *****;

%let dfr=employee;
%utlfkil(&pth/&dfr..sas7bdat);
%utl_sd1get(loc=%str(&pth\&dfr..sas7bdat.gz));
cards4;
1F8B0800000000000006ED9D0B9415D595860B421495645A6556D005931BC631C631998610C5F15520A818D04630A212727934D2CAA3E561C0572A4A
0C93210A068D63D05C88A32631D811E3E0234E19D0E0044D6B7C1035DAA04692186D1F31628CCCED7BFE7FD7ADBFCE0165CDCC5AB316B516D4ADC7FD
7A9F53E7ECB3F73EFBD48DA26CFBD9EFBF5A5EDD7BEF5FFEF4CA9ED11E3F1FB0B8CFC71BF6EEDF3F1AD8BF5BF7813DECAE0F75CB9D1FD8ADFAB1BA35
7CA81BEF1833644CE9B81123870F1FD534F2E4D3870F2FEDE4366CC8D8215DFB284A1A3EF1374F0EE977C6F213FFB6BAAFFD91D23DB1EDBB846B88A2
3DEBCA72F8671AABDBA8C6D3469C146D6FDBD1F5AEBF3DF2A457E7F19F5E3D7BC4699FE67D9FA06CBBB65DDBFF93ED1C6BBFD5BED0F55FF783A3BDAB
BBD247A3A8033DBA77F5732FDCF342F54323CE8FDD2B8A96747DAEFEEBAC76BE2991FB3CA5FA79313E37563F0FC277DFDD23FBBCBEEEF3B2BACFE5BA
CF87D47D7EBB67F6795DDDE725759FC7CB678850B7751E53DB5D7963EA8E3F13BB7D4FB77FFC0F6E3FE129B74FC6E1FAA4988419D8BB13E54B006A8C
737F60C5F3B5E3E4E44705345441F8CB77DC0FD0413950F2FA63EEB8F5E77950FB970D34D5ED1ADC89036E03A8949768F2E3EE78FD8379507A96827A
BB132F7F0720D611405B5F74C7973C9607C513B5687DDC8986AFF841A73FE78E27FC9748D4A4A0BEEE448FABFCA0659B6AC785CA4EC62B0875B2FF4A
5CC857B6D5D15E6BF3A0BA0D75D4DF5D787EB55FA2639E76C72FAD97A265120174803BF130412251EB93EE58EB2899A9A003DD89A36F01481AE4B77F
E38EFBB5E7411D1315040906ADC0857C3B4A6E45D1B44146FF6CF7A1B20F7627D269B890AFA3643F801EFF85808628E81077E2F555A917F4F79BDCF1
34295A69A2DD3735F7C57197C7B9A2B28EBE8F5ECFCA8E59D9850689CADDF81D3FE865D7FBA3910FE541D160050D70277A7E33F6152D3AEFB7EE9875
64A0131434D09DB8865D848FDFA997F2D8ADB57DF29BA7A468A315F45948E4AFA3E4A617FC12A5A72B68903B31E79ED40B5AF96B777CC503C1A2E1A9
7DCE9D7861699C2F9A03C56F6F76C785CA1EA0A043DD898BEFF64B74147A3F3B2D416D73EC3E14ED305CB80E17E4A9B1D3AEBA3F0F4A4FB1FB2011DA
439FB57E89BE8916BDEC3E29DA971474B83BB1754DEA9328B9E9313FA8DCACA0FFD1EDBDBF6CDBB6A37BCAB501FA846E1FFB00DF195CFB4EDF6E7D3F
C0777AD5BEF376CDB679BFDFD952FB7F63976BF1BEBFB3BEF6FF9AE8A31FE03B37D7FE5F16EDFB01BEB3A8F6FFF468BF0FF09D72EDFFA6E8231FE03B
71EDFFC1D16E1FE03B6E2BD9DF7977DBB66D49DD959A69D6A35B744204FBAC47F7DA399E6FA8FBDCA7EE73A9EEF341759F1BEB3E0FAEFB1CD77DE656
1565DB383BEA1B75AFED1B51BE13A20FD7F6D322E7EF2EC6F936ECDB1D2FEA8C76AFED7B7773FBB85BCFBAF2FDB5FA3716762BA3EEAA76F5EC96B973
9B6796262D28555DE3286AA91ACAC367B44E9FB5A0B9B974ECAC29CDD57BCE6A9E39A57976141D8F7D19B24F9A32716ED7F561D55D69D6D4D2D096D9
73A745EEF9775D6F9E326FF2F0EABF89735B66CD9C38BD34B2F9BCE6E9A58316344F9C3DE753D5EBE3AAB29C3D6B52F53AFFE68CE699734BC7567167
CD9ABDA0D65EBB3873264E9F583D8C8E9D377B76D70D6370BC25BB3EA9F9AC969943BBFE9BD932F32CDCD1D5AFBAAE57FFC6DC9619CDD1A85933E74E
9B539AD332737273E98496D95DB20FC63DADB3ABC2CD6F8D9AAAFB9659F3E69486CF6F6D9EDDD2DC75EB41336A5FFC5419F7CE689939AB5A6D0B4661
5F3A76FAC439735AA6B6B892D6DACD01D1FBDCAA0DB0AB8D743DD3DDDFEF77AA5BAFDDEDEBDBBAFE5E571BE0FEAF38D703E7BAF6DB70EEC338D7B57F
6F5BB1BFFCC573EE1DCFB9AD9E73FF17DB5BD58DB1943F57B7CEEA9E818DBD1BBB4723AAFBA7EA1CABFAB8CB67BAFE6B709FBB74D3366CFF9BF2EEEC
56EFFBEE68EB2A6E77EC1BB0DF277265DF03C71FA46D756D5D6DA6578DD6BBEE6CAF5AFBEF1BF5F07EA7C8E8263E6ED776D8F6BEF2E1FA8369757570
78D77FDDEABF0BA3FEF2EFB9BDDA15A73CEB8E97C3648A68A0C0648FCC1A3CC29D585849DD31CC4CD8A71DE7FFD11D3FF19480320F0CA023DD89B62B
FD123D08A792F62901C970051DE54EDC798757A2F47CD7E2D3CBDEC8833AE8CE18E8687762D1A55E89A2F9CFFA258A3EAFA063DC895BBE8D0B796B30
BD71931F948E5550EC4E6CF1577643F7BFB8637AF226D104012500552EF017ED12380334BD0D345A251AE24EF4BFD52B5174DE5BB57D7AD9F3795007
ED539308A03597E0C2801CA8F4049ED6C8DF88440355220462162DC3057173AFC353DB7ABF804E3490B3981380365E87A2892F78CE33EE984E2541F1
78BB0F121DEB4ECCFF062E48CBA6445AD9C909761FEA08A00A2B4F42010897149FDAF12AD13077E2173F4B7D124529E22DF42A0C7498DD873A02C8DA
91F839DB9E70C7F4050B956DEE097A71A535F64964A1004639D2D3DC3EF902EEB37604501F7F5F4B6E8744EC6B04591D593B3ACE9DB8FD5BB820ED68
C93301D0089508A0CBEF4DF312392B32D91D8F9FED88A0467AA72611443C9E6EAED4D1AFC4CD25A832C540786A00BDA212E1F18F94909255F67401D1
A57FF5C7DB2FDA371809621D65412ED41140C945DEA245EF75E425222826D0EA08B5CFAE22E19268A41B8E92439ECC8392512A11406B16C7F9A24167
9FB909C087A46885000E9A7AAFAB635FD1D2BD7E1B000D5389001A4AE54FCD874850B7D75DD1187F31D0489508E3D3E475A9AF68C9791BDDB1852601
4AD9C94D220E7453631FC882ED85A2E97044114B010D3958E27706EAAD120194068C886FA21DAD7D380F4AC6A844680F1B18089406B9FED701897A1A
087D0DA0F462BF445334584AD050BB0F129DE44E74CE49DDB154F6A76514B1A29D6EF7A18E00BAE51A5C90F984AD1A2B0F4A74B23B61314EE96BAD2F
D5F6167EB3CE8A705D644F0DA09BFD637FF4F4EF1D882DDB40B18022C473C75DE595A8D2F93B77CC198E38D46963801A0375C4F9847336E44149A1D3
0274C2225CC8DB47EDFB88596312F51510E74E0EF8376FD12CA07CAF148D76958168C235705CCB83E23E00BDA375A4135C3140A95A23B0B39763CAED
EC8D02528918AAEEC93A922EB2B7334693077E25A02304940234A02D75A707E48B76C09B0ED47B531ED4D122A008F1DC97A9B3C5D09AE01A64B4EC11
91E84003B9DE1F03D4FF265C904E4B3572C93A01651BD408403DD7A26801C5B697D651E6D4381043D53D2AB117741506468BDE87248AA0325FF8773F
88F6510154A8238036DC8C0B52476F42F90F53501F015189DFE007252D30FD0A957D80805280167D1D17E4F1D31AD1DE6F5AC2EA080E5CC757FCA097
B6B8E3423BCA34E4CE47EF5BB6E7FFC7906C52A061DE8D663099331DC51117950ED0756A02A2D2FF11BDDFA695002A4DB3FB50E9000DBCD12B913DBD
AD2A113773254E75172EBB013788E14EF3A650B4EC3E344C80B6FC0B2E480B3F0D9D77358CD288208D482400B5737C13D0160CDDB44A0CA4D3932940
F129A93B2D75C4CE4B7B9BA0B82CA0086E531FFFB014AF7ECD1DEFFD8C489475150C020075245E50C7FA4E776CE19F6257411D0174F07FA6F91BD020
6FF8A53BA6551285F4520A50D9DF8EA215D090E6FF13944DE14ECD5D1844752212B54A1789427A890D6CACBFAF593B2A80B468B4C49EFA41EA2DDA6E
68D92BB48E8E1389E8D02D0EA8DCC761945253068B067F3EB99381047BACEE3C1D408B4810445782B624E72D9FF81E4003F21221EDC6C6370365F39C
68479CDB5DE695C80CAD82444C0422280568646034590413B0F0D47ADB7DA82318E0EB6894E6FDB6CAFE3001D945D880E9A547D6D700A251210657E9
5A845A69C01354F7F8514700CDA797C4A02E8A76012A9BFAC824522799B901A5D9A93B9DEFFDC9AA3FD7F6719F4D22D168014567B813472EC105D190
0F3FE597A868B803B472851F44556BC11682348C9800B484CE4DBE68A5E35D6033D9F08C801822B33A02C88227D2D796A3D39636E44175C15FB4A333
DD5FEC717FEA05D1A9A1C165129D29A018277AD0BA95967D8F74117BFC85782440F36F804452D9CC28A279435047A1AF0174B42670881A613C92A04A
218103B1D739F40002202D9A05A44C1F01949E0A90A4DDFC021E003B6D126AD94C55B3B13FDFD7A2794872B1C8164127098819660DB425F3951D9F0A
A3D4626D00D18A3150F44548F4AF5E5031A18C12B10AACAF01F4C6DAD49D9606B9D6557696BDC7A796B95B18D728512066CB4EFBB814AD9051940234
92B1FF405FD33A4AB2191BF43544A8D631FC23DE369F9AC5912851E6B6A3AF01745B9ABAD3D24558371C690DA41225004D08F86D0F6ACE2541EA4AA4
00254CBA93CA1E8A766471248234B2C55CA5560D2420B0F968A865671BEA08A0E9DFF24BF4B08611D98E0A633F40977D1F20D611C67E3A350AEA384B
4029402BD5D00AA811824A670B2882E17DC86A7FD11A61CE58AC8D459B6EF7B93A2A01D43105A001B8216F67676980AC6CC6C1ADD30254BA18A04179
D05F5F46D11890222833FD1CA80C50206AC3DE6F5D242E36483C3580B6AC8444D26991BC996C6CCF830A53881580D23353AF4413C4882028550D9902
B4F94E8024B2350201A9B318D902A8FD5C03B9A7D6015067C0F25F29967F1CEA223BB3CDDCEEFCFF44F797F6FC69EA932C5A051BD2CC648E26734D42
5757CCC5ED490587A44EAA8B9FBE5ADB27276FCE83124EF459C3046821D3DC7710DF36D02C0195011ACFE90DF1DBE800325FDE4059E543E502D4E3FA
D82791CDB7D90430014C9826A802D03466A7CB1410E792F6555016DF86EE06E81A666D04FCB663E8FF133444404C0EDFCBFFF8930E684AAD231AB306
82DB940CF6577632149DD6DC76821608A8049BB097DF0688F69529A048159C596E00DDC24160A0DD50FBC3F35C6E844D049B4453ED3EB423802AFEA1
3BFA8727FD12B59E27A084E6EE17BCA0E48FD0028FCB53E3448D0D021580A6F9E7242D526AD62D149BA5279B8263D1389528A081BFF683EAD6143810
2DF9B6EB01CA6B4A26959BA2238823B581A2C9F80B746E76104820A8F142019500EACEB074A01D0D7C300FAA7300619500F4874052F97859BF435059
67DBCB0095FC7392F1A19BFC453313D0DA114023977A4156B40268A4DD878112A0A9FE3AB2067991D6D181761FF411409DD7FA415C09A27554007500
74353B6DDE96B498ADA536B0654F105084DA7FF426016138EAE7ECA4B8D1CD4D5A68963D22B27604D0BAA5B14FA2F827984A64408A20B3A76C5C03A8
3007C040829B6F337D64207500D9B0D6F83D80E2043041870B280168B700E80E8434CC70274823A44C2CE9E51FD7CC95309F24044A017A85AB1CA4D3
16966F518D4C165087032597ACF582923B1FF183A24C43A21DC1B81CC78C04F1FF9FC753DBA875C430918D6B00ADF31B11D14B12FEB1A2E96C7B0CD0
144E00073A6DE1F1EB0089A521C9F8401C49475A823A0BE31A24BA8D86BB3CFE03258E647D6D8CDD877604D0F45B00CAFB24A52D9844B81759890C69
D04E8F6C5C43D11EBD0F2019453EFB5C5E2282CA9AD942DF62BC7F36C2C6B3F9742508529F84A931C915B8208A6DE62627993937C17604D07AC62303
A65F3F017196DE403140635834017136EBE5B52291769132408F2DF74BC4600B4711031D65F7A11DD1F2A26728204EB4D8F22D769151761FDA11406F
04AC5A0612B4680CAC67E31A40DBFEC30FEAF1A81F64315E1BD758342A73E9228D12698F8A958D768410C5CDFE7CA4C25A3982983466A01240AFAAC1
1E9AB1615FFBB280628052EA238D6C41A297396343893469A70CD01406EDC4DBBED545242C8DC8EAE8600125005DC0C928796A1BDD7064313703316A
63E31A40CFFCD00BB23CDB4BA56875698D6847009DB116207145CF9191D6EA68888076669BB53DFF1F21AFA4AF3F07D024620BB722CE56C9308FDFF8
232FC8225CECBC564475B7981070BB7F09B72512D09634D030BB0F0A8E99055470D2302F953010411DDA79CB94E8DBDEA259F28E16AD2E510E810480
EE590D90A4815CF184BF6869164E44C304A8CCD1844583BBF53066256854700EC9666E6CA004E848BE2E213FBBD536EA35073CEA4501650617064A80
DABF26454322C16E30936D7213A0BA61090A0E93021B96E2C2801C283D1F014EE66ED9F4587F0195005A7C2D2492A77613FA1C0D77820A1E400CD048
BFDF167D01BADBB2A459473A6F5B06A8C735B157226A01F3DB58B4422639406576428923FD936449072B9B33309FE41299FC53EBF83C2A7BE5EFF2A0
9206ED52806ED781D28D26E9F9329960957DAE802C056F6EEA2B5A21086C20CDFFA7329FFEFD382F9118134CFFB0CACE66B760703950F2354D6DE0E3
47FBA1863489D44E8A2911275CA4689B35DB9E129D63F7A11D01B43F672544B10D0FB5A333ED3EB423802AF44944A254666E0CD464F7A11D0134F476
48B4A3A80DF3E1D8806DC205A0C7020929342226EB53EB6FF7C1E002686300C4952DAB14D4D7EEC3B886DA7F939D562AFB5C3C359B0124482DB71240
ED7CFCE201BC04AB84B112822A057D04506FBF44D1A23702120D115019A0CA525C9091F63E8C1EE6B711A4965B02509B7FBAD51C4095A830255D0168
9B3F89D03AED9B7449091A6720185C009D4A07509E1A2BD9A236002DC9141BDA1140533905240E2063FFECFD56473A251D39AB22F93D2592A231AFAD
00CA36E82398278398D7268F9F31127B334D081403B45033C9513406A20AEDA8418A5606A8F2DDD85734CB49B617CA10A419C0749B8E6486943CB55E
12202728C90648D847942810B3DD28562D41658636AC1D0164AE84543653ACB48B347ED9EEC3B806D02D7492251EC9BC365B9130367F3DB2716D863B
D1977524A956FBB96C7B1B710D74B2804A000D63A70DCC46588C8420F52463805226E18835B26A8B3BB6947482341DAD4CD0E5FEA29DEC1636D98CB2
810A0E20402B7F800BD269E9FFB341C63A8A583B02E80582A41DFD9DE62287FA5A0AD03B7E90BD98A800D234EB0E80DA7EE897088A2D79794720FAA8
D73061574CBFC5586B432799A0BA22421F39507213A7C7C43E7A4FE348EC6BF3051443A20981845DBE73C992E483FA88EE77A0B2E9664DDED153E33B
B86E63654BD1D8FB0B20ADEC0A40C3021231D46A6B2408D2C9A89DD9A66FCFFF4F21D92B814A1F0D1B60872DBC03A06703290E8D62B9C5A14120C23C
FEDC409FD37CDB60E72D01D416A8743AC7052D50589802D058FF3B12A26FC8BBE00CA4B1DB32408F057C922B42EA245370689800ADF16B012BDA306D
4F99990C830BA00BFCE64D3108AC8FDF22A5004DE7B47D3EB9B97D053CC9BB1079E78A180B029B0308D0A2B569BE68C8DDDA2CB62441A94E004730E5
FAD196CC8F2695391291208836A8811A00BA9653897950F9D0576AFBF4B54D7950E13D12F49A0FF50F4BD14392B86B75944D933950234043035D847D
CD963684F4520C50EF0088D6ED0E414D009D11E86B4F49CB8E420AAE0CD0C101BF4DD72319C83C4E805A016A08F435CE931424D2D184094A0FFB41C9
05A1CA5689E85BAC0B74DA601D651B4613802ED4D5AD12DFA6956BA0CC9674A036802E0B18139C252D54B64A9402F4346D80403BB2C90482CEB5FB5C
CB6E07E88E15B820AA966F5DB5F00FA71035BDB103A02FB1F78B75FB8EA6A403C4866CA04E9CD8103093F793F93682EA528967E4CA3A97EE563E1FA9
6D0C26378F784E8A76B4801A00BAFB1E144D34E448D19004C5FA1E8912408398B52173DBB3B14C96132E2691FD41EA2380C62E951BC4012CD41197CA
982B01D03206A4248DE86A2C25A6971494A809A0357E50B40DF948BD1F115096B5017D04D07719D81457A290FDC3A28D16502B409704542D33ED1454
502309406F073A2DE7472C444690EAEC25001DFA13291A8276502385764493313322003A80FA489636F05DB916FD631D1D6FF739501B40EF2EC50559
244F236228BA0817FAD64D93218C0850BCD00B4A5F7BCD1DF7EB1090BAA4CCE4EDB78374348B9100D47EBE803A005ABF10A0FC8C4D7C399C1B5A6E04
3197D9409D00B56B2001DEF66A592097145B36F41162AF83967B254A5E74C1DFEC0D290471C2CEF411400B39253D2007B2CC5FD69581B2F458E82380
26F95F6C127F1C16DB6D9BF2A04284B47136FEA24E00BBA7669976FAD41A339714FA0812F5E1D2867CCBB6159B16FE613BD2184913404DFE542BCB6B
B3C816EB484D3F4EF9EC19306BE8495AF48F204DFE6A451D7D6D6DEA4E8B31CA50ABD6517A9180124874A13F61D7DED9A2755458B2B704A0E1F44502
F6D16601D9620BB38F007A2BF012702E8FB5C426D547661F0164C3913C35AEB5A1116145EB23A01420E624ABC556C8D9E2907D86DD3723DAD96DC6F6
FCFF7676DE80BDCD589BD655DD3C09141C405B68950402E5856630D7EE838203E808CD4BDA41E7E57096D515EC9D719C94125B92C9CD856630C2EE73
4FAF01A0D7B561060601BEC8A2BD6070E1C4332B629F4406B2DC2D4AC4D4065370005DCBA2897973B60BB99AB76D20B56E69132E5FEA97883680C5DC
08D2687213406F06B2809828A7755430DCCB00F5E5EC56BEAB947F874C047BBF0D41BA9CA815A0B14C259696CDE09D857F8A4583C105D060CEFF8B82
D359099388B3A4667001D4FD162FC8FC7F0BFF10946D507000ADF22FFFB0F9367BCD7DB1B2A1E000BA2B604BF2F1DF2D755470922DF6CF4855C04BB2
C90482B2F7FFC1E002A87FC04C26C822A5EA01983E02A8930B4C249BEC2197F89D2C6036191FFF495634E82380AE59E12D5A3C100DD20252219F849A
EE928093BC489D64801AD42A6900E88615DB07591A5168582A01F4C9400A28BB882D48611DE90AA946806CB185A85A0DB59A441C452C2005D0787FCB
8ECE97D486A8D8FB119072A0E4754EB78A79C39F92B0BCB631B237071012B5260282F27F1A12151EBFAE6D6F05E842FEA640C0722B80B238010C2E80
12AEB6CF9BC9F696342A7F26A2C4BAD66609409D177B41C94217D8CC52AD00E23BA80C5401A832032079FC85A41D82D4B9690368B1DF042C3AC99424
F300A08F007AC63F8A98E367E11F8274C95E3BEB88EE96F4FE8F6D0E800A1377009502698D2C9AB9ED04C5769F0375A2659F18704999DB6EF6112B3B
5B69077D34CF9D789BAF7F9094BD7DB0348623AD81D4496E00E8DEC0B87691FC1048D67E0C047D04D0C27BA568007D54732428D170013502349FEB48
04C4257B0FADCB83CC86347DE440C9287FF29785C646D3DD0288A38F819A20D118065B5847E8B4DDDC3B5B6CDADEEA881259F217405FD7375B483B32
4F92BDFF8B761F025200DDB51220192087B91F94E19B52ED6D3385FCC804A0650CFF884458DA9059B52C9AAA912500DD1C9844E05AE4024847910A40
CBE9D48835C257887179AC8174146903E82D7D6A81845D822CFFDFF411401D7CD78654F64F10D8B4D5F69488929B3E02685F0ED903F2123187D4E622
016ACDD2F6A18F005AE45F23114F92375BC4459D0D7D04D0D815B10F64D13F334655B1D9C42F926FAE0FF4B59B24D44A10D70C1AA801A0F9FC7D3309
90F37DED5A342ED0B4BE5602E8FCD50282447BABC1CEBE9681A08F004AFCEF6C611C299BB1615FCB265C76DEFF9FB4DDF7FF41B2C062427B758F195C
7C7A1ABD6902E8B5B5A93B2D2A77C423EED80C2E82CE32100C2E806631275924E2ABC46DB9351BA666DC71FDF582BB000A4CDC15241A29A004A02B03
3112AE93DCAC7594CDDCC00104684220305502C896ED13A4B3A415074A0EF3E7DCD8CF4A69D13A75586A83441BBF0B9004A6A8BB69DE10643F056889
BB000DBE2DF5164DB380AC683A2CB503F42E7F48408AC69F4B5490ADF6B00C6080DA03AFA42FAC23A144A305C4F58E9F0818A5C1CA6EB5FBA0E0A083
17F85793999DA42D9B4B47B38014407399B42361E9293AE1C22265A309141C40D397E28298C9CF6D72C766DD1294F9B650700059642B3FBE5526BE1C
0015726D009A48BF4D5C09C648CCBA0528CEC637E8239CE8E95F8F64BEAD2D6EA6449AFE5106E8EA806F7B87388006D2CAE610DC1488DA302BF18E0D
7950F15DD2001DE95F03584CB7A64485883B40CF06943F13C00BA04C43C20104E8F9C0AB560830C31D204E1C47A68F00EAF07B0096D9C2B5A45647D9
8F13C2E002E825BFF2B719640BFE12A4E98DFC19D643570334200FE2CB846C0E00A028D3470848011478676B71C285A00902EA04683033372911FCB6
83DF70C77C672B41F6ABAB16204760A9E25FD76673DB5AD97C2B56A68F007A561711063212EC8DE1F3781FF5910325FBA909081093760A205D6ECD99
BC06065BF213C09C93B4640B820AA18D18A0F43C4824AA96CB3FCC2721287BD922F411404DADA94F22A67F64217B8062350199377B1C6700A5D3F2DD
BF666F0354F0925A017A2090D8444F92BEAD8154F927002DF9911714F5D1483B41D906FB08A05E810C29BA120589145401E8614624441FD14B2A8006
1810FA88EDC85FB46202B84924A014A05356F941E3D5950815AD1DA01FF8832DE6DBEEA6452B04A400DAE7562FC8122D0B75A4A04E801E0D847FB866
6B87458B10A19A14988D38110DF225954893761A00DA3FD02087059F9A485402E8B140D10E0B3E3591A811A0B901890A533F04F5B4FB601F01D4F37B
A917A4AF363435928D22084801B42FDD2CA96C8EB4162301C812526C753440AD342206E445E72FED58E6EF68B9CFEC23800EF55B23F63E520B900354
C8B463A4D33212F2AA36DE82881683C026912E215E42D012014122AEFFB7975113F439015500BA3190668D5764646F2460D1B201726AB4B3DBE4EDF9
FF6D90ECC8C0FA7F5D9666926559405070003DF13EFB5CF6825C01B503B46A052E480E2097A2172A5D5D890E80E809A831116A4F853010A7107B300B
48465C8DB85B1D8DB6FB6070212B6C7D603281A90DF6526A5A6CD9C41D22EE005D1EF049F85A5A730009E21B09CCE002E8EDEBFD200D9519284B9581
C105D0B4C0EF24E9BBA40C345A4031407D16A7EEB4586E1F7BCDEDFB6ECA830AEFB66B02A8933980F2D4F427A04CA271022A0314073280F91E092D5A
E1B7A45A017AD13F016CF1ED37E5F1F3B51191195C002D0BBC6F8B3F24688B9B09D204A725005D15086D8C172F89A08AF6FE0A4017724E52E2487803
58966FCBCA56E7A68D951D586FCB3C92D37F9907D90A600B4801740F07811D745A93287B9910321200DA6FB548144AB7068859439903C8BEB60CA07C
CBAE1C020FC0A65BD9B2B5689D6CD9F300CACFDB563EFA2777CC5FFFE46F4F15DE23C15F5FE80CA4EE155E6F4C90FAFF0D002D0F8436CAD2D7926283
843E02E811FE9CB064B7366CAA1DDB4F4019486D8046807AFBF3912C4DD6C23F2C9ABA5B31408F51434AD1AED0604B08D4E440C9CF03D31BDAB2AD68
9AB3C597940D0BA8DA1BE4E5662651968F047D04D096C090AD867B9201B8411F0134E6C7FEA25D2586BB8132550B7D04D01A06EDA4D3D203B0A80DEB
886AC4F41140CF0642F6DD2443CA24D2F9FF3680F678C05B34F36D0B12156600014A2EF54A64DEB6B6A3BA9752C33E02E8C2C070C4E06FA1659F6AF7
411F015462668B2611BE5DDB278B548D641E00F411415FF54A14FD11A9569C2EB33A5289A20BDD893FB18BC8537B55E7FF01B257AD5A400AA0FE2B62
6FD1604464BF48C8A251259B3E02A80FE747C41A61AE8DFD921C407C4DBB81F87EDAA3E9DB4A1D31B26549849448D3F663800673DA3E308764199B1C
20B32C69E823074AB6D2F29776A40DD28AA641BB3224DAC0D73FE4EBA8A1F496FB430B9F95A265B35AD04700F5E6702409294D62F9079F5A02503426
F549C41709A4F7BD20201D459600F4CE4DB82075A43F4861A00304540168AEBF8EB886D462B671511FC13E02E8767FD4C65AB40512423A9BEB656706
626D9C1FB1600B41830D087D04D09EFE1552050D4950258BD9C25F03E8665DD688C7FF108C087DFC69666723208596FD6E600E89511B7D6A78934106
8AB0D6E104FEF09B2C233A0C19521648601DE90F523600D4C7FFD2CEC2023982F8E34306DA99AD5CE7FF9FF691EA7FDDF6C82E9620D9027F3A912DBA
B0394956BAFA248D00ADA34B9AB7DCE23DE5E945450587081740CF300C946F06E960A4CA5CAAA0CCB745840BA0417E13D0DE4B6AB3EDAC749DFF2F03
7450C04CD6DC76822C886729A0006DF0FB6DF6224105D5E50042C10174D90A2F28EDF77C1E6439ED6A6F2F0168913F03D866DBCD720388BFAD1099C1
05D0D1817549F4FF2D2D8D12E95B1B766DBBB65DDBAE6DD7B66BDBB5EDDA766DBBB65DDBAE6DD7B6B3DB7F036C672CA800A40000
;;;;
run;

%utl_submit_R(%nrbquote
  (
    library(R.utils);
    wd<-getwd();
    setwd("&pth");
    gunzip("&dfr..sas7bdat.gz",remove=FALSE,overwrite=TRUE);
    setwd(wd);
  ));

/* OTHER DATASETS */
data fitness;
  do pulse=1 to 30;
     runpulse = int(50*uniform(-1))+50;
     rstpulse = int(50*uniform(-1))+50;
     maxpulse = max(runpulse, rstpulse);
     output;
  end;
run;

data ex;
input day t  h;
cards;
0 2 455
0 4 488
0 4 499
5 8 388
5 9 345
5 9 322
10 16 255
10 15 256
10 15 264
15 20 100
15 22 112
15 21 123
;
run;

*   *    *     ***   ****    ***    ***
** **   * *   *   *  *   *  *   *  *   *
* * *  *   *  *      *   *  *   *   *
*   *  *****  *      ****   *   *    *
*   *  *   *  *      * *    *   *     *
*   *  *   *  *   *  *  *   *   *  *   *
*   *  *   *   ***   *   *   ***    ***;

libname sd1 "c:\sd1";
libname b510 "c:\sd1" ;


%glo_status;

%put &=b1;
%put &=b2;

%macro utl_boxpdf2ppt(inp=&ftg_pdf,out=&ftg_ppt)/des="www.boxoft.con pdf to ppt";
  data _null_;
    cmd=catt("&ftg_exe",' "',"&inp", '"',' "',"&out",'"');
    put cmd;
    call system(cmd);
  run;
%mend utl_boxpdf2ppt;

%MACRO greenbar ;
   DEFINE _row / order COMPUTED NOPRINT ;
   COMPUTE _row;
      nobs+1;
      _row = nobs;
      IF (MOD( _row,2 )=0) THEN
         CALL DEFINE( _ROW_,'STYLE',"STYLE={BACKGROUND=graydd}" );
   ENDCOMP;
%MEND greenbar;


%Macro Tut_Sly
(
 stop=32,
 L1=' ',  L2=' ', L3=' ', L4=' ', L5=' ', L6=' ', L7=' ', L8=' ', L9=' ',
 L10=' ', L11=' ',
 L12=' ', L13=' ', L14=' ', L15=' ', L16=' ', L17=' ', L18=' ', L19=' ',
 L20=' ', L21=' ',
 L22=' ', L23=' ', L24=' ', L25=' ', L26=' ', L27=' ', L28=' ', L29=' ', L30=' ', L31=' ', L32=' '
 )/ des="SAS Slides";

/* creating slides for a presentation */
/* backtic ` is converted to a single quote  */

Data _OneLyn1st;

   Length title $255;

   Title  = translate(&L1,"'","`");Output;
   Title  = translate(&L2,"'","`");Output;
   Title  = translate(&L3,"'","`");Output;
   Title  = translate(&L4,"'","`");Output;
   Title  = translate(&L5,"'","`");Output;
   Title  = translate(&L6,"'","`");Output;
   Title  = translate(&L7,"'","`");Output;
   Title  = translate(&L8,"'","`");Output;
   Title  = translate(&L9,"'","`");Output;
   Title  = translate(&L10,"'","`");Output;
   Title  = translate(&L11,"'","`");Output;
   Title  = translate(&L12,"'","`");Output;
   Title  = translate(&L13,"'","`");Output;
   Title  = translate(&L14,"'","`");Output;
   Title  = translate(&L15,"'","`");Output;
   Title  = translate(&L16,"'","`");Output;
   Title  = translate(&L17,"'","`");Output;
   Title  = translate(&L18,"'","`");Output;
   Title  = translate(&L19,"'","`");Output;
   Title  = translate(&L20,"'","`");Output;
   Title  = translate(&L21,"'","`");Output;
   Title  = translate(&L22,"'","`");Output;
   Title  = translate(&L23,"'","`");Output;
   Title  = translate(&L24,"'","`");Output;
   Title  = translate(&L25,"'","`");Output;
   Title  = translate(&L26,"'","`");Output;
   Title  = translate(&L27,"'","`");Output;
   Title  = translate(&L28,"'","`");Output;
   Title  = translate(&L29,"'","`");Output;
   Title  = translate(&L30,"'","`");Output;
   Title  = translate(&L31,"'","`");Output;
   Title  = translate(&L32,"'","`");Output;
run;quit;

data _onelyn;
  set _onelyn1st(obs=%eval(&stop + 1));
  if not (left(title) =:  '^') then do;
     pre=upcase(scan(left(title),1,' '));
     idx=index(left(title),' ');
     title=substr(title,idx+1);
     select (strip(pre));
       when ('&_L') title=catx(' ',"&_l",title);
       when ('&T')  title=catx(' ',"&t",title);
       otherwise;
     end;
  end;
  put title;
run;

title;
footnote;
proc report data=_OneLyn nowd style=utl_pdflan100;
col title;
define title / display ' ';
run;
quit;

%Mend Tut_Sly;


%Macro Tut_Sly2
(
 stop=32,
 L1=' ',  L2=' ', L3=' ', L4=' ', L5=' ', L6=' ', L7=' ', L8=' ', L9=' ',
 L10=' ', L11=' ',
 L12=' ', L13=' ', L14=' ', L15=' ', L16=' ', L17=' ', L18=' ', L19=' ',
 L20=' ', L21=' ',
 L22=' ', L23=' ', L24=' ', L25=' ', L26=' ', L27=' ', L28=' ', L29=' ', L30=' ', L31=' ', L32=' '
 )/ des="SAS Slides all argument values need to be single quoted";

/* creating slides for a presentation */
/* up to 32 lines */
/* backtic ` is converted to a single quote  */
/* | is converted to a , */

Data _OneLyn1st;

   Length title $255;

    Title  = resolve(translate(&L1,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
    Title  = resolve(translate(&L2,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
    Title  = resolve(translate(&L3,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
    Title  = resolve(translate(&L4,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
    Title  = resolve(translate(&L5,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
    Title  = resolve(translate(&L6,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
    Title  = resolve(translate(&L7,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
    Title  = resolve(translate(&L8,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
    Title  = resolve(translate(&L9,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L10,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L11,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L12,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L13,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L14,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L15,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L16,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L17,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L18,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L19,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L20,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L21,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L22,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L23,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L24,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L25,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L26,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L27,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L28,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L29,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L30,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L31,"'","`"));Title  = resolve(translate(Title,",","|"));Output;
   Title  = resolve(translate(&L32,"'","`"));Title  = resolve(translate(Title,",","|"));Output;

run;quit;

data _onelyn;
  set _onelyn1st(obs=%eval(&stop + 1));
  if not (left(title) =:  '^') then do;
     pre=upcase(scan(left(title),1,' '));
     idx=index(left(title),' ');
     title=substr(title,idx+1);
  end;
  put title;
run;

* display the slide ;
title;
footnote;
proc report data=_OneLyn nowd style=utl_pdflan100;
col title;
define title / display ' ';
run;
quit;

%Mend Tut_Sly2;


%Let DatTym=%Sysfunc(Putn(%qSysfunc(Datetime()),datetime18.));

title;
footnote;

/* THIS CREATES EMPLOYEE.SAS7BDAT  */
%macro utl_runr(fid)/des="Macro to run R Batch";
   * edit for the location of your R executable - will work in Unix;
   filename rut pipe "C:\Progra~1\R\R-2.15.3\bin\R --quiet --no-save < &fid";
   data _null_;
     file print;
     infile rut;
     input;
     put _infile_;
   run;

   filename rut clear;
%mend utl_runr;


*****  *****  *****  *      *****
  *      *      *    *      *
  *      *      *    *      *
  *      *      *    *      ****
  *      *      *    *      *
  *      *      *    *      *
  *    *****    *    *****  *****;

/* arial_bullets = '¤ o º'  */

%macro set_005(dummy);

    title;
    footnote;

    %Tut_Sly
       (
        stop=9
        ,L1='^S={font_size=30pt just=c cellwidth=100pct} SAS SG Graphics Examples'
        ,L3='^S={font_size=24pt just=c cellwidth=100pct} Proc Report and SG Plots'
        ,L9='^S={font_size=24pt just=c cellwidth=100pct} CompuCraft'
       );

    %Tut_Sly
       (
        stop=15
        ,L1='^S={font_size=30pt just=c cellwidth=100pct}Contents'
        ,l5='^S={font_size=24pt just=l cellwidth=100pct} o Proc Report'
        ,l7='^S={font_size=24pt just=l cellwidth=100pct} o Boxplots'
        ,l9='^S={font_size=24pt just=l cellwidth=100pct} o Barcharts'
        ,l11='^S={font_size=24pt just=l cellwidth=100pct}    º Add additional variables for research only'
        ,l13='^S={font_size=24pt just=l cellwidth=100pct}    º Do not correct existing data'
        ,l15='^S={font_size=24pt just=l cellwidth=100pct} o False positive rate of 1%. Ok for Research.'
        );


%mend set_005;

%macro set_010;

   %Tut_Sly
       (
        stop=9
        ,L9='^S={font_size=30pt just=c cellwidth=100pct} Proc Report'
       );

    proc report data=employee(obs=20) missing nowd split='#'
             style(column)={just=l vjust=center}
             style(header)={just=c vjust=center}
     ;
     cols (
     "^{style [] Dataset used to give examples of sg procedures
     ^{newline}Proc Report
     }"
      gender
      bdate
      educ
      salary
      minority
      _row
     );

     define  gender   / display 'm-Male#f=Female'           style={just=c};
     define  bdate    / display 'Birth Date' format=date9.  style={just=r};
     define  educ     / display 'Educ#Years'                style={just=r};
     define  salary   / display 'Salary'    format=dollar8. style={just=r};
     define  minority / display 'Minority'                  style={just=r};
     %greenbar;
     run;quit;

%mend set_010;


%macro set_020/des="sg boxplots";

     %Tut_Sly
       (
        stop=9
        ,L9='^S={font_size=30pt just=c cellwidth=100pct} Box Plots'
       );

     %Tut_Sly
       (
        stop=7
        ,L3=' &t title "Boxplot";               '
        ,L4=' &t title2 "No Categories";        '
        ,L5=' &t proc sgplot data=employee;'
        ,L6=' &t   vbox salary;                 '
        ,L7=' &t run;quit;                      '
       );

     title "Boxplot";
     title2 "No Categories";
     proc sgplot data=employee;
       vbox salary;
     run;quit;

     %Tut_Sly
       (
        stop=7
        ,L3=' &t title "Boxplot";               '
        ,L4=' &t title2 "Category=Gender";      '
        ,L5=' &t proc sgplot data=employee;'
        ,L6=' &t   vbox salary/ category=gender;'
        ,L7=' &t run;quit;                      '
       );

     title "Boxplot";
     title2 "Category=Gender";
     proc sgplot data=employee;
       vbox salary/ category=gender;
     run;quit;

     %Tut_Sly
       (
        stop=7
        ,L3=' &t title "Boxplot with Panels";         '
        ,L4=' &t proc sgpanel data=employee;     '
        ,L5=' &t   panelby jobcat / rows=1 columns=3 ;'
        ,L6=' &t   vbox salary / category= gender;    '
        ,L7=' &t run;quit;                            '
       );

     title "Boxplot with Panels";
     proc sgpanel data=employee;
       panelby jobcat / rows=1 columns=3 ;
       vbox salary / category= gender;
     run;quit;

%mend set_020;


%macro set_030/des="Spaghetti Plots+";

     %Tut_Sly
       (
        stop=9
        ,L9='^S={font_size=30pt just=c cellwidth=100pct} Spaghetti Plots'
       );

     %Tut_Sly
       (
        stop=7
        ,L3=' &t title "Spaghetti Plots";                    '
        ,L4=' &t proc sgpanel data=emprol;                   '
        ,L5=' &t panelby minority;                           '
        ,L6=' &t series x=educ y=salary/break group=minority;'
        ,L7=' &t run;quit;                                   '
       );

     title "Spaghetti Plots";
     proc sgpanel data=emprol;
     panelby minority;
     series x=educ y=salary/break group=minority;
     run;quit;

     %Tut_Sly
       (
        stop=12
        ,L3=' &t proc template;                                          '
        ,L4=' &t    define statgraph scatter; begingraph;                '
        ,L5=' &t    entrytitle "weight vs height";                       '
        ,L6=' &t    layout overlay;                                      '
        ,L7=' &t    scatterplot y = weight x = height / datalabel = name '
        ,L8=' &t    datalabelattrs=(size=12); endlayout; endgraph;       '
        ,L9=' &t end;                                                    '
       ,L10=' &t run;                                                    '
       ,L11=' &t proc sgrender data = sashelp.class template = scatter;  '
       ,L12=' &t run;quit;                                               '
       );

     proc template;
        define statgraph scatter;
        begingraph / designwidth=10in designheight=7in ;
        entrytitle "weight vs height";
        layout overlay;
        scatterplot y = weight x = height / datalabel = name
        datalabelattrs=(size=12); endlayout; endgraph;
     end;
     run;
     proc sgrender data = sashelp.class template = scatter;
     run;

     %Tut_Sly
       (
        stop=9
        ,L3=' &t PROC TEMPLATE;                                                        '
        ,L4=' &t  DEFINE STATGRAPH Scatter; BEGINGRAPH;                                '
        ,L5=' &t  ENTRYTITLE "Scatter Plot with Fit Functions";                        '
        ,L6=' &t  LAYOUT OVERLAY; SCATTERPLOT Y = Weight X = Height;                   '
        ,L7=' &t  REGRESSIONPLOT Y = Weight X = Height / DEGREE = 3;                   '
        ,L8=' &t  ENDLAYOUT; ENDGRAPH; END; RUN;                                       '
        ,L9=' &t PROC SGRENDER DATA = Sashelp.Class TEMPLATE = Scatter; RUN;quit;      '
       );


     PROC TEMPLATE;
       DEFINE STATGRAPH Scatter;
       BEGINGRAPH / designwidth=10in designheight=7in ;
       ENTRYTITLE "Scatter Plot of the Class Data Set with Fit Functions";
       LAYOUT OVERLAY; SCATTERPLOT Y = Weight X = Height;
       REGRESSIONPLOT Y = Weight X = Height / DEGREE = 3;
       ENDLAYOUT; ENDGRAPH; END; RUN;
     PROC SGRENDER DATA = Sashelp.Class TEMPLATE = Scatter; RUN;quit;

     %Tut_Sly
       (
        stop=16
        ,L3=' &t PROC TEMPLATE; DEFINE STATGRAPH Panel; BEGINGRAPH;                      '
        ,L4=' &t ENTRYTITLE "Paneled Display ";                                          '
        ,L5=' &t LAYOUT LATTICE / ROWS = 2 COLUMNS = 2 ROWGUTTER = 10 COLUMNGUTTER = 10; '
        ,L6=' &t LAYOUT OVERLAY; SCATTERPLOT Y = Weight X = Height;                      '
        ,L7=' &t REGRESSIONPLOT Y = Weight X = Height; ENDLAYOUT;                        '
        ,L8=' &t LAYOUT OVERLAY / XAXISOPTS = (LABEL = "Weight");                        '
        ,L9=' &t HISTOGRAM Weight; ENDLAYOUT;                                            '
       ,L10=' &t LAYOUT OVERLAY / YAXISOPTS = (LABEL = "Height");                        '
       ,L11=' &t BOXPLOT Y = Height; ENDLAYOUT;                                          '
       ,L12=' &t LAYOUT OVERLAY; SCATTERPLOT Y = weight X = height /                     '
       ,L13=' &t GROUP = sex NAME = "Scat"; DISCRETELEGEND "Scat"                        '
       ,L14=' &t / TITLE = "Sex"; ENDLAYOUT;                                             '
       ,L15=' &t ENDLAYOUT; ENDGRAPH; END; RUN;                                          '
       ,L16=' &t PROC SGRENDER DATA = Sashelp.Class TEMPLATE = Panel; RUN;               '
      );

      PROC TEMPLATE; DEFINE STATGRAPH Panel; BEGINGRAPH / designwidth=10in designheight=7in ;
      ENTRYTITLE "Paneled Display ";
      LAYOUT LATTICE / ROWS = 2 COLUMNS = 2 ROWGUTTER = 10 COLUMNGUTTER = 10;
      LAYOUT OVERLAY; SCATTERPLOT Y = Weight X = Height;
      REGRESSIONPLOT Y = Weight X = Height; ENDLAYOUT;
      LAYOUT OVERLAY / XAXISOPTS = (LABEL = 'Weight');
      HISTOGRAM Weight; ENDLAYOUT;
      LAYOUT OVERLAY / YAXISOPTS = (LABEL = 'Height');
      BOXPLOT Y = Height; ENDLAYOUT;
      LAYOUT OVERLAY; SCATTERPLOT Y = weight X = height /
      GROUP = sex NAME = "Scat"; DISCRETELEGEND "Scat"
      / TITLE = 'Sex'; ENDLAYOUT;
      ENDLAYOUT; ENDGRAPH; END; RUN;
      PROC SGRENDER DATA = Sashelp.Class TEMPLATE = Panel; RUN;


     %Tut_Sly
       (
        stop=6
        ,L3=' &t PROC SGPLOT DATA = Sashelp.Class ;                '
        ,L4=' &t TITLE "Separate Fit by Sex" ;                      '
        ,L5=' &t REG Y = Weight X = Height / GROUP= Sex DEGREE= 3; '
        ,L6=' &t RUN;                                              '
       );

     PROC SGPLOT DATA = Sashelp.Class ;
     TITLE'Separate Fit by Sex' ;
     REG Y = Weight X = Height / GROUP= Sex DEGREE= 3;
     RUN;

     %Tut_Sly
       (
        stop=6
        ,L3=' &t PROC SGPLOT DATA = Sashelp.Class ;             '
        ,L4=' &t TITLE "Regression Plot with Limits" ;           '
        ,L5=' &t REG Y = Weight X = Height / DEGREE= 4 CLI CLM ;'
        ,L6=' &t RUN;                                           '
       );

     PROC SGPLOT DATA = Sashelp.Class ;
     TITLE "Regression Plot with Limits" ;
     REG Y = Weight X = Height / DEGREE= 4 CLI CLM ;
     RUN;

     %Tut_Sly
       (
        stop=6
        ,L3=' &t PROC SGPLOT DATA = Sashelp.Class NOAUTOLEGEND;'
        ,L4=' &t HISTOGRAM Height;                              '
        ,L5=' &t HISTOGRAM Height / SCALE= COUNT Y2AXIS;       '
        ,L6=' &t RUN;                                          '
       );

     PROC SGPLOT DATA = Sashelp.Class NOAUTOLEGEND;
     HISTOGRAM Height;
     HISTOGRAM Height / SCALE= COUNT Y2AXIS;
     RUN;

     %Tut_Sly
       (
        stop=6
        ,L3=' &t PROC SGPLOT DATA = Sashelp.Class ;               '
        ,L4=' &t TITLE "Separate Fit by Sex"  ;                    '
        ,L5=' &t REG Y = Weight X = Height / GROUP= Sex DEGREE= 3;'
        ,L6=' &t RUN;                                             '
       );

     PROC SGPLOT DATA = Sashelp.Class ;
     TITLE "Separate Fit by Sex"  ;
     REG Y = Weight X = Height / GROUP= Sex DEGREE= 3;
     RUN;

     %Tut_Sly
       (
        stop=9
        ,L3=' &t PROC TEMPLATE ;                                            '
        ,L4=' &t DEFINE STATGRAPH hist_fringe;                              '
        ,L5=' &t BEGINGRAPH ;                                               '
        ,L6=' &t ENTRYTITLE " Distribution of Weight ";                     '
        ,L7=' &t LAYOUT OVERLAY ;                                           '
        ,L8=' &t HISTOGRAM Weight;                                          '
        ,L9=' &t FRINGEPLOT WEIGHT;                                         '
       ,L10=' &t ENDLAYOUT ;                                                '
       ,L11=' &t ENDGRAPH;                                                  '
       ,L12=' &t END ;                                                      '
       ,L13=' &t RUN;                                                       '
       ,L14=' &t PROC SGRENDER DATA=Sashelp.Class TEMPLATE=hist_fringe ;run;'
       );

     PROC TEMPLATE ;
     DEFINE STATGRAPH hist_fringe;
     BEGINGRAPH / designwidth=10in designheight=7in ;  ;
     ENTRYTITLE " Distribution of Weight ";
     LAYOUT OVERLAY ;
     HISTOGRAM Weight;
     FRINGEPLOT WEIGHT;
     ENDLAYOUT ;
     ENDGRAPH;
     END ;
     RUN;
     PROC SGRENDER DATA = Sashelp.Class TEMPLATE = hist_fringe ;
     RUN;quit;


      %Tut_Sly
       (
        stop=25
        ,L3=' &_l PROC TEMPLATE;                                          '
        ,L4=' &_l DEFINE STATGRAPH dynamic;                               '
        ,L5=' &_l BEGINGRAPH;                                             '
        ,L6=' &_l MVAR scale;                                             '
        ,L7=' &_l NMVAR bins;                                             '
        ,L8=' &_l DYNAMIC var ;                                           '
        ,L9=' &_l LAYOUT OVERLAY ;                                        '
       ,L10=' &_l HISTOGRAM var / SCALE = scale NBINS = bins;             '
       ,L11=' &_l DENSITYPLOT var;                                       '
       ,L12=' &_l ENDLAYOUT;                                              '
       ,L13=' &_l ENDGRAPH;                                               '
       ,L14=' &_l END;                                                    '
       ,L15=' &_l RUN;                                                    '
       ,L16=' &_l %LET bins = 6;                                          '
       ,L17=' &_l %LET scale = count;                                     '
       ,L18=' &_l PROC SGRENDER DATA = sashelp.class TEMPLATE= dynamic;   '
       ,L19=' &_l DYNAMIC var = "Height";                                 '
       ,L20=' &_l RUN ;                                                   '
       ,L21=' &_l %LET bins = 6;                                          '
       ,L22=' &_l %LET scale = percent;                                   '
       ,L23=' &_l PROC SGRENDER DATA = sashelp.class TEMPLATE= dynamic;   '
       ,L24=' &_l DYNAMIC var = "Height";                                 '
       ,L25=' &_l RUN ;                                                   '
       );

       PROC TEMPLATE;
       DEFINE STATGRAPH dynamic;
       BEGINGRAPH / designwidth=10in designheight=7in ;  ;
       MVAR scale;
       NMVAR bins;
       DYNAMIC var ;
       LAYOUT OVERLAY ;
       HISTOGRAM var / SCALE = scale NBINS = bins;
       DENSITYPLOT var;
       ENDLAYOUT;
       ENDGRAPH;
       END;
       RUN;
       %LET bins = 6;
       %LET scale = count;
       PROC SGRENDER DATA = sashelp.class TEMPLATE= dynamic;
       DYNAMIC var = 'Height';
       RUN ;
       %LET bins = 6;
       %LET scale = percent;
       PROC SGRENDER DATA = sashelp.class TEMPLATE= dynamic;
       DYNAMIC var = 'Height';
       RUN ;quit;


      %Tut_Sly
       (
        stop=30
        ,L3=' &_l PROC TEMPLATE ;                                             '
        ,L4=' &_l DEFINE STATGRAPH conditional;                               '
        ,L5=' &_l DYNAMIC var curve;                                          '
        ,L6=' &_l BEGINGRAPH;                                                 '
        ,L7=' &_l ENTRYTITLE " Distribution of " var;                         '
        ,L8=' &_l LAYOUT OVERLAY ;                                            '
        ,L9=' &_l HISTOGRAM VAR ;                                             '
       ,L10=' &_l IF( UPCASE(curve) = "NONE" )                                '
       ,L11=' &_l HISTOGRAM var;                                              '
       ,L12=' &_l ENDIF;                                                      '
       ,L13=' &_l IF( UPCASE(curve) = "ALL" )                                 '
       ,L14=' &_l DENSITYPLOT VAR / KERNEL() NAME= "n" LEGENDLABEL= "Normal" ;'
       ,L15=' &_l ENDIF;                                                      '
       ,L16=' &_l IF (upcase(curve) = "ALL" )                                 '
       ,L17=' &_l DENSITYPLOT VAR / NORMAL() NAME = "p" LEGENDLABEL= "Kernel" '
       ,L18=' &_l LINEATTRS = ( PATTERN = DASH );                             '
       ,L19=' &_l ENDIF;                                                      '
       ,L20=' &_l DISCRETELEGEND "n" "k" "p";                                 '
       ,L21=' &_l ENDLAYOUT;                                                  '
       ,L22=' &_l ENDGRAPH;                                                   '
       ,L23=' &_l END;                                                        '
       ,L24=' &_l RUN;                                                        '
       ,L25=' &_l PROC SGRENDER DATA = Sashelp.Class TEMPLATE = conditional;  '
       ,L26=' &_l DYNAMIC var = "HEIGHT" curve ="None";                       '
       ,L27=' &_l run;                                                        '
       ,L28=' &_l PROC SGRENDER DATA = Sashelp.Class TEMPLATE= conditional;   '
       ,L29=' &_l DYNAMIC var = "Weight" curve ="All";                        '
       ,L30=' &_l run;                                                        '
       );


      PROC TEMPLATE ;
      DEFINE STATGRAPH conditional;
      DYNAMIC var curve;
      BEGINGRAPH / designwidth=10in designheight=7in ;  ;
      ENTRYTITLE " Distribution of " var;
      LAYOUT OVERLAY ;
      HISTOGRAM VAR ;
      IF( UPCASE(curve) = "NONE" )
      HISTOGRAM var ;
      ENDIF;
      IF( UPCASE(curve) = "ALL" )
      DENSITYPLOT VAR / KERNEL() NAME= "n" LEGENDLABEL= "Normal" ;
      ENDIF;
      IF (upcase(curve) = "ALL" )
      DENSITYPLOT VAR / NORMAL() NAME = "p" LEGENDLABEL= "Kernel"
      LINEATTRS = ( PATTERN = DASH );
      ENDIF;
      DISCRETELEGEND "n" "k" "p";
      ENDLAYOUT;
      ENDGRAPH;
      END;
      RUN;
      PROC SGRENDER DATA = Sashelp.Class TEMPLATE = conditional;
      DYNAMIC var = "HEIGHT" curve ="None"  ;
      run;
      PROC SGRENDER DATA = Sashelp.Class TEMPLATE= conditional;
      DYNAMIC var = "Weight" curve ="All";
      run;quit;

%mend set_030;

%macro set_040/des="Bar Charts";

     %Tut_Sly
       (
        stop=9
        ,L9='^S={font_size=30pt just=c cellwidth=100pct} Bar Charts'
       );

     %Tut_Sly
       (
        stop=6
        ,L3=' &t title "Vertical Bar Chart";    '
        ,L4=' &t proc sgplot data=employee;'
        ,L5=' &t   vbar jobcat / datalabel;     '
        ,L6=' &t run;                           '
       );

     title "Vertical Bar Chart";
     proc sgplot data=employee;
       vbar jobcat / datalabel;
     run;

     %Tut_Sly
       (
        stop=7
        ,L3=' &t title "Vertical Bar Chart";    '
        ,L4=' &t title2 "Grouped by Gender";    '
        ,L5=' &t proc sgplot data=employee;'
        ,L6=' &t   vbar jobcat /group=Gender datalabel;   '
        ,L7=' &t run;                           '
       );

     title "Vertical Bar Chart";
     title2 "Grouped by Gender";
     proc sgplot data=employee;
       vbar jobcat /group=Gender datalabel datalabelattrs=(size=15);
     run;

     %Tut_Sly
       (
        stop=7
        ,L3=' &t title "Student Age by Height and Weight";       '
        ,L4=' &t proc sgplot data=sashelp.class;                 '
        ,L5=' &t   bubble x=height y=weight size=age / group=sex;'
        ,L6=' &t   xaxis grid; yaxis grid;                       '
        ,L7=' &t run;                                            '
       );


     title 'Student Age by Height and Weight';
     proc sgplot data=sashelp.class;
       bubble x=height y=weight size=age / group=sex;
       xaxis grid; yaxis grid;
     run;


     %Tut_Sly
       (
        stop=7
        ,L3=' &t title "BarChart with Mean and Standard Deviation";'
        ,L4=' &t proc sgplot data=employee;                   '
        ,L5=' &t   vbar jobcat / response=salary limitstat = stddev'
        ,L6=' &t   limits = upper stat=mean;                       '
        ,L7=' &t run;                                              '
       );

     title "BarChart with Mean and Standard Deviation";
     proc sgplot data=employee;
       vbar jobcat / response=salary limitstat = stddev
       limits = upper stat=mean;
     run;

     %Tut_Sly
       (
        stop=9
        ,L3=' &t title "BarChart Paneled by Gender";                '
        ,L4=' &t proc sgpanel data=employee;                   '
        ,L5=' &t    panelby gender ;                                '
        ,L6=' &t    vbar jobcat / response=salary limitstat = stddev'
        ,L7=' &t       limits = upper stat=mean;                    '
        ,L9=' &t run;                                               '
       );

     title "BarChart Paneled by Gender";
     proc sgpanel data=employee;
        panelby gender ;
        vbar jobcat / response=salary limitstat = stddev
           limits = upper stat=mean;
     run;

%mend set_040;

%macro set_050/des="Histograms";

     %Tut_Sly
       (
        stop=9
        ,L9='^S={font_size=30pt just=c cellwidth=100pct} Histograms'
       );

     %Tut_Sly
       (
        stop=6
        ,L3=' &t title "Histogram";              '
        ,L4=' &t proc sgplot data=employee; '
        ,L5=' &t   histogram salary ;            '
        ,L6=' &t run;                            '
       );

     title "Histogram";
     proc sgplot data=employee;
       histogram salary ;
     run;

     %Tut_Sly
       (
        stop=9
        ,L3=' &t title "Histogram With Density Overlaid";   '
        ,L4=' &t proc sgplot data=employee;            '
        ,L5=' &t   histogram salary ;                       '
        ,L6=' &t   density salary;                          '
        ,L7=' &t   density salary / type=kernel;            '
        ,L9=' &t run;                                       '
       );

     title "Histogram With Density Overlaid";
     proc sgplot data=employee;
       histogram salary ;
       density salary;
       density salary / type=kernel     ;
     run;

     %Tut_Sly
       (
        stop=10
        ,L3=' &t title "Histogram with Panels";                       '
        ,L4=' &t title2 "Exclude Custodial";                          '
        ,L5=' &t proc sgpanel data=employee;                     '
        ,L6=' &t   where jobcat not=2;                                '
        ,L7=' &t   panelby   gender jobcat/  rows=2 columns = 2     ; '
        ,L9=' &t   histogram salary;                                  '
       ,L10=' &t run;                                                 '
       );

     title "Histogram with Panels";
     title2 "Exclude Custodial";
     proc sgpanel data=employee;
       where jobcat not=2;
       panelby   gender jobcat/  rows=2 columns = 2     ;
       histogram salary;
     run;

     /*Create new variables for Overlay*/
     data employee2;
       set employee;
       if gender = "m" then salary_m = salary;
       if gender = "f" then salary_f = salary;
     run;

     %Tut_Sly
       (
        stop=9
        ,L3=' &t title "Overlaid histograms";            '
        ,L4=' &t title2 "Same variable, but two groups ";'
        ,L5=' &t proc sgplot data=employee2;             '
        ,L6=' &t   histogram salary_m;                   '
        ,L7=' &t   histogram salary_f / transparency=.5; '
        ,L9=' &t run;                                    '
       );

     title "Overlaid histograms";
     title2 "Same variable, but two groups ";
     proc sgplot data=employee2;
       histogram salary_m;
       histogram salary_f / transparency=.5;
     run;

%mend set_050;

%macro set_060/des="Scatterplot";

     %Tut_Sly
       (
        stop=9
        ,L9='^S={font_size=30pt just=c cellwidth=100pct} Scatterplot'
       );

     %Tut_Sly
       (
        stop=6
        ,L3=' &t title "Scatterplot";                                '
        ,L4=' &t proc sgplot data=employee;                     '
        ,L5=' &t   scatter x=salbegin y=salary / group=gender ;      '
        ,L6=' &t run;                                                '
        );

     title "Scatterplot";
     proc sgplot data=employee;
       scatter x=salbegin y=salary / group=gender ;
     run;

     %Tut_Sly
       (
        stop=10
        ,L3=' &t title "Scatterplot with Regression Line";      '
        ,L4=' &t title2 "Clerical Only";                        '
        ,L5=' &t proc sgplot data=employee;                '
        ,L6=' &t   where jobcat=1;                              '
        ,L7=' &t   scatter x=prevexp y=salary / group=gender ;  '
        ,L9=' &t   reg x=prevexp y=salary / cli clm;            '
       ,L10=' &t run;                                           '
       );

     title "Scatterplot with Regression Line";
     title2 "Clerical Only";
     proc sgplot data=employee;
       where jobcat=1;
       scatter x=prevexp y=salary / group=gender ;
       reg x=prevexp y=salary / cli clm;
     run;

     %Tut_Sly
       (
        stop=9
        ,L3=' &t title "Scatterplot Panels. Males only";         '
        ,L4=' &t proc sgpanel data=employee;                '
        ,L5=' &t    panelby jobcat;                              '
        ,L6=' &t    scatter x=jobtime y=salary / group=gender;   '
        ,L7=' &t    loess x=jobtime y=salary ;                   '
        ,L9=' &t run;                                            '
       );

     title "Scatterplot Panels. Males only";
     proc sgpanel data=employee;
        panelby jobcat;
        scatter x=jobtime y=salary / group=gender;
        loess x=jobtime y=salary ;
     run;

     %Tut_Sly
       (
        stop=9
        ,L3=' &t title "Scatterplot Matrix";                              '
        ,L4=' &t title2 "Clerical Employees";                             '
        ,L5=' &t proc sgscatter data=employee;                       '
        ,L6=' &t   where jobcat=1;                                        '
        ,L7=' &t   matrix salbegin salary jobtime prevexp / group=gender; '
        ,L9=' &t run;                                                     '
       );

     title "Scatterplot Matrix";
     title2 "Clerical Employees";
     proc sgscatter data=employee;
       where jobcat=1;
       matrix salbegin salary jobtime prevexp / group=gender;
     run;

%mend set_060;

%macro set_070/des="Misc";

     %Tut_Sly
       (
        stop=9
        ,L9='^S={font_size=30pt just=c cellwidth=100pct} Misc'
       );

      title;

      /*Using Formats to Make the Display Easier to Read*/
      proc format;
         value jobcat 1="Clerical"
                      2="Custodial"
                      3="Manager";
         value $Gender "f"="Female"
                       "m"="Male";
      run;quit;

     %Tut_Sly
       (
        stop=6
        ,L3=' &t proc sgplot data=sashelp.class;   '
        ,L4=' &t   scatter x=height y=weight;      '
        ,L5=' &t   ellipse x=height y=weight;      '
        ,L6=' &t run;quit;                         '
       );

      proc sgplot data=sashelp.class;
        scatter x=height y=weight;
        ellipse x=height y=weight;
      run;quit;

     %Tut_Sly
       (
        stop=9
        ,L3=' &t proc sgplot data=sashelp.electric(           '
        ,L4=' &t      where=(customer="Residential"));        '
        ,L5=' &t   xaxis type=discrete;                       '
        ,L6=' &t   series x=year y=coal;                      '
        ,L7=' &t   series x=year y=naturalgas / y2axis;       '
        ,L9=' &t run;quit;                                    '
       );

      proc sgplot data=sashelp.electric(
           where=(customer="Residential"));
        xaxis type=discrete;
        series x=year y=coal;
        series x=year y=naturalgas / y2axis;
      run;quit;

     %Tut_Sly
       (
        stop=7
        ,L3=' &t proc sgplot data=sashelp.class;     '
        ,L4=' &t   histogram height;                 '
        ,L5=' &t   density height;                   '
        ,L6=' &t   density height / type=kernel;     '
        ,L7=' &t run;quit;                           '
       );

      proc sgplot data=sashelp.class;
        histogram height;
        density height;
        density height / type=kernel;
      run;quit;

     %Tut_Sly
       (
        stop=10
        ,L3=' &t proc sgplot data=sashelp.prdsale;    '
        ,L4=' &t   yaxis label="Sales" min=200000;    '
        ,L5=' &t   vbar country / response=predict;   '
        ,L6=' &t   vbar country / response=actual     '
        ,L7=' &t                   barwidth=0.5       '
        ,L9=' &t                   transparency=0.2;  '
        ,L10=' &t run;quit;                            '
       );

      proc sgplot data=sashelp.prdsale;
        yaxis label="Sales" min=200000;
        vbar country / response=predict;
        vbar country / response=actual
                        barwidth=0.5
                        transparency=0.2;
      run;quit;

     %Tut_Sly
       (
        stop=9
        ,L3=' &t proc sgplot data=sashelp.heart (where=(smoking_status ne " ")); '
        ,L4=' &t refline 80 / axis=x name="normal" lineattrs=(color=red)         '
        ,L5=' &t legendlabel="Normal diastolic pressure";                        '
        ,L6=' &t hbox diastolic / category=smoking_status;                       '
        ,L7=' &t keylegend "normal";                                             '
        ,L9=' &t run;quit;                                                       '
       );

      proc sgplot data=sashelp.heart (where=(smoking_status ne ' '));
      refline 80 / axis=x name="normal" lineattrs=(color=red)
      legendlabel="Normal diastolic pressure";
      hbox diastolic / category=smoking_status;
      keylegend "normal";
      run;quit;

      %Tut_Sly
       (
        stop=7
        ,L3=' &t proc sgplot data=sashelp.class;                                          '
        ,L4=' &t scatter x=weight y=height;                                               '
        ,L5=' &t loess x=weight y=height / clm nomarkers clmtransparency=0.3 name="loess";'
        ,L6=' &t keylegend "loess";                                                       '
        ,L7=' &t run;quit;                                                                '
       );

      proc sgplot data=sashelp.class;
      scatter x=weight y=height;
      loess x=weight y=height / clm nomarkers clmtransparency=0.3 name="loess";
      keylegend "loess";
      run;quit;
     %Tut_Sly
       (
        stop=5
        ,L3=' &t proc sgscatter data=sashelp.cars;                             '
        ,L4=' &t plot (mpg_city mpg_highway)*(weight horsepower) / group=type; '
        ,L5=' &t run;quit;                                                     '
       );

      proc sgscatter data=sashelp.cars;
      plot (mpg_city mpg_highway)*(weight horsepower) / group=type;
      run;quit;

     %Tut_Sly
       (
        stop=5
        ,L3=' &t proc sgscatter data=fitness;                             '
        ,L4=' &t matrix runpulse rstpulse maxpulse / ellipse=(alpha=0.5); '
        ,L5=' &t run;quit;                                                '
       );

      proc sgscatter data=fitness;
      matrix runpulse rstpulse maxpulse / ellipse=(alpha=0.5);
      run;quit;

     %Tut_Sly
       (
        stop=5
        ,L3=' &t proc sgscatter data=sashelp.cars;               '
        ,L4=' &t compare x=(mpg_city mpg_highway) y=horsepower;  '
        ,L5=' &t run;quit;                                       '
       );

      proc sgscatter data=sashelp.cars;
      compare x=(mpg_city mpg_highway) y=horsepower;
      run;quit;

     %Tut_Sly
       (
        stop=5
        ,L3=' &t proc sgscatter data=fitness;                                     '
        ,L4=' &t matrix runpulse rstpulse maxpulse / diagonal=(histogram normal); '
        ,L5=' &t run;quit;                                                        '
       );

      proc sgscatter data=fitness;
      matrix runpulse rstpulse maxpulse / diagonal=(histogram normal);
      run;quit;

     %Tut_Sly
       (
        stop=9
        ,L3=' &t proc sgplot data=ex;                                                          '
        ,L4=' &t    vbar day / response=t stat=mean limits=both limitstat=stderr barwidth=0.4 ;'
        ,L5=' &t    vline day / response=h stat=mean limits=both limitstat=stderr y2axis;      '
        ,L6=' &t    yaxis min=0 max=30 ;                                                       '
        ,L7=' &t    y2axis min=0 max=600 ;                                                     '
        ,L9=' &t run;quit;                                                                     '
       );

      proc sgplot data=ex;
         vbar day / response=t stat=mean limits=both limitstat=stderr barwidth=0.4 ;
         vline day / response=h stat=mean limits=both limitstat=stderr y2axis;
         yaxis min=0 max=30 ;
         y2axis min=0 max=600 ;
      run;quit;

      %Tut_Sly
       (
        stop=9
        ,L3=' &t title "Scatterplot Matrix";                              '
        ,L4=' &t title2 "Clerical Employees";                             '
        ,L5=' &t proc sgscatter data=employee;                       '
        ,L6=' &t   where jobcat=1;                                        '
        ,L7=' &t   matrix salbegin salary jobtime prevexp / group=gender; '
        ,L9=' &t run;                                                     '
       );

       title "Scatterplot Matrix";
       title2 "Clerical Employees";
       proc sgscatter data=employee;
         where jobcat=1;
         matrix salbegin salary jobtime prevexp / group=gender;
       run;

     %Tut_Sly
       (
        stop=18
        ,L3=' &t proc sgplot data=sashelp.stocks (where=(date >= "01jan2000"d '
        ,L4=' &t   and date <= "01jan2001"d                                   '
        ,L5=' &t   and stock = "IBM"));                                       '
        ,L6=' &t hbar date /                                                  '
        ,L7=' &t   response=volume legendlabel="Volume";                      '
        ,L8=' &t hline date /                                                 '
        ,L9=' &t   response=close x2axis                                      '
       ,L10=' &t   markers markerattrs=(size=12)                              '
       ,L11=' &t   lineattrs=(thickness=0) legendlabel="Close";               '
       ,L12=' &t hline date /                                                 '
       ,L13=' &t   response=open x2axis                                       '
       ,L14=' &t   markers markerattrs=(size=12)                              '
       ,L15=' &t   lineattrs=(thickness=0) legendlabel="Open";                '
       ,L16=' &t x2axis label="Open/Close value";                             '
       ,L17=' &t xaxis label="Trade volume";                                  '
       ,L18=' &t run;quit;                                                    '
      );

      proc sgplot data=sashelp.stocks (where=(date >= "01jan2000"d
        and date <= "01jan2001"d
        and stock = "IBM"));
      hbar date /
        response=volume legendlabel="Volume";
      hline date /
        response=close x2axis
        markers markerattrs=(size=12)
        lineattrs=(thickness=0) legendlabel="Close";
      hline date /
        response=open x2axis
        markers markerattrs=(size=12)
        lineattrs=(thickness=0) legendlabel="Open";
      x2axis label="Open/Close value";
      xaxis label="Trade volume";
      run;quit;

     %Tut_Sly
       (
        stop=6
        ,L3=' &t proc sgplot data=first_example; '
        ,L4=' &t scatter x=x y=y;                '
        ,L5=' &t reg x=x y=y;                    '
        ,L6=' &t run;quit;                       '
       );

      proc sgplot data=first_example;
      scatter x=x y=y;
      reg x=x y=y;
      run;quit;

      %Tut_Sly
       (
        stop=12
        ,L3=' &t title "Distribution of Fuel Consumption"; '
        ,L4=' &t proc sgplot data=sashelp.cars;            '
        ,L5=' &t histogram mpg_city;                       '
        ,L6=' &t density mpg_city;                         '
        ,L7=' &t density mpg_city / type=kernel;           '
        ,L8=' &t keylegend / location = inside             '
        ,L9=' &t position=TopRight                         '
        ,L10=' &t across=1;                                 '
        ,L11=' &t yaxis grid;                               '
        ,L12=' &t run;quit;                                 '
       );

      title "Distribution of Fuel Consumption";
      proc sgplot data=sashelp.cars;
      histogram mpg_city;
      density mpg_city;
      density mpg_city / type=kernel;
      keylegend / location = inside
      position=TopRight
      across=1;
      yaxis grid;
      run;quit;


      %Tut_Sly
       (
        stop=16
        ,L3=' &t PROC TEMPLATE;                                      '
        ,L4=' &t DEFINE STATGRAPH simplepie;                         '
        ,L5=' &t BEGINGRAPH;                                         '
        ,L6=' &t ENTRYTITLE "SGRENDER Pie Chart" ;                   '
        ,L7=' &t LAYOUT REGION;                                      '
        ,L8=' &t PIECHART CATEGORY=ORIGIN /                          '
        ,L9=' &t DATALABELLOCATION=INSIDE datalabelattrs=(size=15);  '
        ,L10=' &t ENDLAYOUT;                                           '
        ,L11=' &t ENDGRAPH;                                            '
        ,L12=' &t END;                                                 '
        ,L13=' &t RUN;                                                 '
        ,L14=' &t PROC SGRENDER DATA=sashelp.cars                      '
        ,L15=' &t TEMPLATE=simplepie;                                  '
        ,L16=' &t RUN;                                                 '
       );

       PROC TEMPLATE;
       DEFINE STATGRAPH simplepie;
       BEGINGRAPH;
       ENTRYTITLE 'SGRENDER Pie Chart' ;
       LAYOUT REGION;
       PIECHART CATEGORY=ORIGIN /
       DATALABELLOCATION=INSIDE datalabelattrs=(size=15);
       ENDLAYOUT;
       ENDGRAPH;
       END;
       RUN;
       PROC SGRENDER DATA=sashelp.cars
       TEMPLATE=simplepie;

      %Tut_Sly
       (
        stop=11
        ,L3=' &t title "Yearly Sales Figures by Country and Product"; '
        ,L4=' &t proc sgpanel data=sashelp.prdsale;                   '
        ,L5=' &t where product in ("BED","CHAIR","DESK");             '
        ,L6=' &t panelby country product/                             '
        ,L7=' &t layout=lattice;                                      '
        ,L8=' &t hbox actual/                                         '
        ,L9=' &t category=year;                                       '
        ,L10=' &t rowaxis  display=(nolabel);                          '
        ,L11=' &t run;quit;                                            '
       );

      title 'Yearly Sales Figures by Country and Product';
      proc sgpanel data=sashelp.prdsale;
      where product in ('BED','CHAIR','DESK');
      panelby country product/
      layout=lattice;
      hbox actual/
      category=year;
      rowaxis  display=(nolabel);
      run;quit;

     %Tut_Sly
       (
        stop=8
        ,L3=' &t proc sgscatter data=sashelp.heart;        '
        ,L4=' &t matrix systolic diastolic                 '
        ,L5=' &t cholesterol /                             '
        ,L6=' &t ellipse=(alpha=0.05 type=predicted)       '
        ,L7=' &t diagonal=(histogram normal);              '
        ,L8=' &t run;quit;                                 '
       );

      proc sgscatter data=sashelp.heart;
      matrix systolic diastolic
      cholesterol /
      ellipse=(alpha=0.05 type=predicted)
      diagonal=(histogram normal);
      run;quit;

     %Tut_Sly
       (
        stop=18
        ,L3=' &t proc template;                                                              '
        ,L4=' &t define statgraph dynamics;                                                  '
        ,L5=' &t begingraph;                                                                 '
        ,L6=' &t mvar SYSDATE9 SCALE;                                                        '
        ,L7=' &t nmvar BINS;                                                                 '
        ,L8=' &t dynamic VAR VARLABEL;                                                       '
        ,L9=' &t entrytitle "Histogram of " VAR;                                             '
        ,L10=' &t entrytitle "with Normal Distribution";                                      '
        ,L11=' &t layout overlay / xaxisopts=(label=VARLABEL);                                '
        ,L12=' &t histogram VAR / scale=SCALE nbins=BINS;                                     '
        ,L13=' &t densityplot VAR / normal();                                                 '
        ,L14=' &t endlayout;                                                                  '
        ,L15=' &t entryfootnote halign=right "Created: " SYSDATE9 / textattrs=GraphValueText; '
        ,L16=' &t endgraph;                                                                   '
        ,L17=' &t end;                                                                        '
        ,L18=' &t run;quit;                                                                   '
       );

      /* DYNAMIC BIN SETTINGS */
      proc template;
      define statgraph dynamics;
      begingraph;
      mvar SYSDATE9 SCALE;
      nmvar BINS;
      dynamic VAR VARLABEL;
      entrytitle "Histogram of " VAR;
      entrytitle "with Normal Distribution";
      layout overlay / xaxisopts=(label=VARLABEL);
      histogram VAR / scale=SCALE nbins=BINS;
      densityplot VAR / normal();
      endlayout;
      entryfootnote halign=right "Created: " SYSDATE9 / textattrs=GraphValueText;
      endgraph;
      end;
      run;quit;

      %Tut_Sly
       (
        stop=7
        ,L3=' &t let bins=7;                                         '
        ,L4=' &t let scale=count;                                    '
        ,L5=' &t proc sgrender data=sashelp.class template=dynamics;  '
        ,L6=' &t dynamic var="Height" varlabel="Height in Inches";    '
        ,L7=' &t run;quit;                                            '
       );

      %let bins=7;
      %let scale=count;
      proc sgrender data=sashelp.class template=dynamics;
      dynamic var="Height" varlabel="Height in Inches";
      run;quit;

     %Tut_Sly
       (
        stop=7
        ,L3=' &t let bins=5;                                          '
        ,L4=' &t let scale=percent;                                   '
        ,L5=' &t proc sgrender data=sashelp.class template=dynamics;   '
        ,L6=' &t dynamic var="Weight" varlabel="Weight in Pounds";     '
        ,L7=' &t run;quit;                                             '
       );

      %let bins=5;
      %let scale=percent;
      proc sgrender data=sashelp.class template=dynamics;
      dynamic var="Weight" varlabel="Weight in Pounds";
      run;quit;

      %Tut_Sly
       (
        stop=15
        ,L3=' &t proc template;                                       '
        ,L4=' &t  define style myfont;                                '
        ,L5=' &t  parent=styles.default;                              '
        ,L6=' &t   style GraphFonts /                                 '
        ,L7=' &t         "GraphDataFont" = ("Helvetica",6pt)          '
        ,L8=' &t         "GraphUnicodeFont" = ("Helvetica",6pt)       '
        ,L9=' &t         "GraphValueFont" = ("Helvetica",16pt)        '
       ,L10=' &t         "GraphLabelFont" = ("Helvetica",8pt,bold)    '
       ,L11=' &t         "GraphFootnoteFont" = ("Helvetica",6pt,bold) '
       ,L12=' &t         "GraphTitleFont" = ("Helvetica",6pt,bold)    '
       ,L13=' &t         "GraphAnnoFont" = ("Helvetica",6pt);         '
       ,L14=' &t end;                                                 '
       ,L15=' &t run;quit;                                            '
       );

      proc template;
       define style myfont;
       parent=styles.default;
        style GraphFonts /
              'GraphDataFont' = ("Helvetica",6pt)
              'GraphUnicodeFont' = ("Helvetica",6pt)
              'GraphValueFont' = ("Helvetica",16pt)
              'GraphLabelFont' = ("Helvetica",8pt,bold)
              'GraphFootnoteFont' = ("Helvetica",6pt,bold)
              'GraphTitleFont' = ("Helvetica",6pt,bold)
              'GraphAnnoFont' = ("Helvetica",6pt);
      end;
      run;quit;

     %Tut_Sly
       (
        stop=5
        ,L3=' &t proc sgplot data=sashelp.class;    '
        ,L4=' &t scatter x=weight y=height;         '
        ,L5=' &t run;quit;                          '
       );

      proc sgplot data=sashelp.class;
      scatter x=weight y=height;
      run;quit;

%mend set_070;

%macro set_080/des="Advanced";

     %Tut_Sly
       (
        stop=9
        ,L9='^S={font_size=30pt just=c cellwidth=100pct} Advanced 1'
       );

      %Tut_Sly
       (
        stop=9
        ,L3=' &t proc sgplot data=sashelp.class;              '
        ,L4=' &t  title "Without Legend";                     '
        ,L5=' &t  ellipse x=weight y=height / alpha=0.05;     '
        ,L6=' &t  ellipse x=weight y=height / alpha=0.25;     '
        ,L7=' &t  ellipse x=weight y=height / alpha=0.5;      '
        ,L8=' &t scatter x=weight y=height / group=sex;       '
        ,L9=' &t run;quit;                                    '
       );

      proc sgplot data=sashelp.class;
       title "Without Legend";
       ellipse x=weight y=height / alpha=0.05;
       ellipse x=weight y=height / alpha=0.25;
       ellipse x=weight y=height / alpha=0.5;
      scatter x=weight y=height / group=sex;
      run;quit;

      %Tut_Sly
       (
        stop=11
        ,L3=' &t proc sgplot data=sashelp.class;                                '
        ,L4=' &t title "With Legend";                                           '
        ,L5=' &t ellipse x=weight y=height / alpha=0.05 name="e1";              '
        ,L6=' &t ellipse x=weight y=height / alpha=0.25 name="e2";              '
        ,L7=' &t ellipse x=weight y=height / alpha=0.5 name="e3";               '
        ,L8=' &t scatter x=weight y=height / group=sex name="s1";               '
        ,L9=' &t keylegend "e1" "e2" "e3";                                      '
       ,L10=' &t keylegend "s1" / location=inside position=topleft title="Sex"; '
       ,L11=' &t run;                                                           '
       );

      proc sgplot data=sashelp.class;
      title "With Legend";
      ellipse x=weight y=height / alpha=0.05 name="e1";
      ellipse x=weight y=height / alpha=0.25 name="e2";
      ellipse x=weight y=height / alpha=0.5 name="e3";
      scatter x=weight y=height / group=sex name="s1";
      keylegend "e1" "e2" "e3";
      keylegend "s1" / location=inside position=topleft title="Sex";
      run;

      %Tut_Sly
       (
        stop=6
        ,L3=' &t proc sgplot data=sashelp.class;                  '
        ,L4=' &t  xaxis values=(65,70,82,101,110,150) valueshint; '
        ,L5=' &t  scatter x=weight y=height;                      '
        ,L6=' &t run;                                             '
       );

      proc sgplot data=sashelp.class;
       xaxis values=(65,70,82,101,110,150) valueshint;
       scatter x=weight y=height;
      run;


      %Tut_Sly
       (
        stop=6
        ,L3=' &t proc sgplot data=sashelp.stocks;        '
        ,L4=' &t yaxis grid;                             '
        ,L5=' &t series x=date y=close / group=stock;    '
        ,L6=' &t run;quit;                               '
       );

      proc sgplot data=sashelp.stocks;
      yaxis grid;
      series x=date y=close / group=stock;
      run;quit;

      %Tut_Sly
       (
        stop=7
        ,L3=' &t proc sgpanel data=sashelp.stocks;     '
        ,L4=' &t panelby stock / rows=1;               '
        ,L5=' &t rowaxis grid;                         '
        ,L6=' &t series x=date y=close / group=stock;  '
        ,L7=' &t run;quit;                             '
       );

      proc sgpanel data=sashelp.stocks;
      panelby stock / rows=1;
      rowaxis grid;
      series x=date y=close / group=stock;
      run;quit;

%mend set_080;


%macro set_090/des="Advanced";

     %Tut_Sly
       (
        stop=9
        ,L9='^S={font_size=30pt just=c cellwidth=100pct} Advanced 2'
       );

      %Tut_Sly
       (
        stop=5
        ,L3='&t  proc sgplot data=boxplots;          '
        ,L4='&t  vbox results / category=treatment;  '
        ,L5='&t  run;quit;                           '
       );

      proc sgplot data=boxplots;
      vbox results / category=treatment;
      run;quit;

      %Tut_Sly
       (
        stop=5
        ,L3=' &t proc sgplot data=boxplots;              '
        ,L4=' &t hbar age / response=results stat=mean;  '
        ,L5=' &t run;quit;                               '
       );

      proc sgplot data=boxplots;
      hbar age / response=results stat=mean;
      run;quit;

      %Tut_Sly
       (
        stop=7
        ,L3=' &t proc sgplot data=boxplots;                        '
        ,L4=' &t vbar age / response=results stat=sum datalabel;   '
        ,L5=' &t vline age / response=results stat=mean            '
        ,L6=' &t limitstat=clm markers;                            '
        ,L7=' &t run;quit;                                         '
       );

      proc sgplot data=boxplots;
      vbar age / response=results stat=sum datalabel;
      vline age / response=results stat=mean
      limitstat=clm markers;
      run;quit;

      %Tut_Sly
       (
        stop=7
        ,L3=' &t proc sgplot data=boxplots;               '
        ,L4=' &t vline age / response=results stat=mean   '
        ,L5=' &t limitstat=clm markers;                   '
        ,L6=' &t run;quit;                                '
        ,L7=' &t   '
       );

      proc sgplot data=boxplots;
      vline age / response=results stat=mean
      limitstat=clm markers;
      run;quit;

      %Tut_Sly
       (
        stop=9
        ,L3=' &t title1 "Blood Pressure Trends";                               '
        ,L4=' &t title2 h=8pt "for ages 50-59";                                '
        ,L5=' &t proc sgscatter data=sashelp.heart;                            '
        ,L6=' &t where AgeCHDdiag>=50 and AgeCHDdiag<60;                       '
        ,L7=' &t plot (systolic diastolic)*weight / group=sex loess=(nogroup)  '
        ,L8=' &t uniscale=Y markerattrs=(size=3);                              '
        ,L9=' &t run;                                                          '
       );


      title1 "Blood Pressure Trends";
      title2 h=8pt "for ages 50-59";
      proc sgscatter data=sashelp.heart;
      where AgeCHDdiag>=50 and AgeCHDdiag<60;
      plot (systolic diastolic)*weight / group=sex loess=(nogroup)
      uniscale=Y markerattrs=(size=3);
      run;

      %Tut_Sly
       (
        stop=7
        ,L3=' &t title1 "Comparison of Vehicle Attributes";      '
        ,L4=' &t proc sgscatter data=sashelp.cars;               '
        ,L5=' &t compare y=horsepower x=(mpg_city mpg_highway)   '
        ,L6=' &t / markerattrs=(size=3) loess=(clm) spacing=10;  '
        ,L7=' &t run;                                            '
       );

      title1 "Comparison of Vehicle Attributes";
      proc sgscatter data=sashelp.cars;
      compare y=horsepower x=(mpg_city mpg_highway)
      / markerattrs=(size=3) loess=(clm) spacing=10;
      run;


      %Tut_Sly
       (
        stop=8
        ,L3=' &t title1 "Sepal and Petal Sizes in Iris Species";      '
        ,L4=' &t title2 "with a 50% prediction ellipse";              '
        ,L5=' &t proc sgscatter data=sashelp.iris;                    '
        ,L6=' &t matrix sepalwidth sepallength petalwidth petallength '
        ,L7=' &t / group=species ellipse=(alpha=.5);                  '
        ,L8=' &t run;                                                 '
       );

      title1 "Sepal and Petal Sizes in Iris Species";
      title2 "with a 50% prediction ellipse";
      proc sgscatter data=sashelp.iris;
      matrix sepalwidth sepallength petalwidth petallength
      / group=species ellipse=(alpha=.5);
      run;


      %Tut_Sly
       (
        stop=8
        ,L3=' &t title1 "Sepal and Petal Sizes in Iris Species";  '
        ,L4=' &t proc sgscatter data=sashelp.iris;                '
        ,L5=' &t matrix sepalwidth sepallength petalwidth         '
        ,L6=' &t petallength / group=species                      '
        ,L7=' &t diagonal=(histogram kernel);                     '
        ,L8=' &t run;                                             '
       );

      title1 "Sepal and Petal Sizes in Iris Species";
      proc sgscatter data=sashelp.iris;
      matrix sepalwidth sepallength petalwidth
      petallength / group=species
      diagonal=(histogram kernel);
      run;

      %Tut_Sly
       (
        stop=11
        ,L3=' &t proc sgpanel data=percent_data '
        ,L4=' &t noautolegend;                  '
        ,L5=' &t where percentage ne .;         '
        ,L6=' &t panelby sex;                   '
        ,L7=' &t rowaxis grid;                  '
        ,L8=' &t vbar age / group=age datalabel '
        ,L9=' &t response=percentage            '
        ,L10=' &t nostatlabel;                   '
        ,L11=' &t run;                           '
       );

      proc sgpanel data=sashelp.class
      noautolegend;
      panelby sex;
      rowaxis grid;
      vbar age / group=age datalabel  datalabelattrs=(size=10)
      response=weight
      nostatlabel;
      run;

      %Tut_Sly
       (
        stop=8
        ,L3=' &t proc sgplot data=sashelp.class;  '
        ,L4=' &t yaxis grid;                      '
        ,L5=' &t refline 110 / label;             '
        ,L6=' &t vline age / response=weight      '
        ,L7=' &t stat=mean;                       '
        ,L8=' &t run;                             '
       );

      proc sgplot data=sashelp.class;
      yaxis grid;
      refline 110 / label;
      vline age / response=weight
      stat=mean;
      run;

      %Tut_Sly
       (
        stop=7
        ,L3=' &t proc sgplot data=sashelp.cars;         '
        ,L4=' &t scatter x=mpg_city y=msrp /            '
        ,L5=' &t group=type datalabel=model;            '
        ,L6=' &t loess x=mpg_city y=msrp / nomarkers;   '
        ,L7=' &t run;                                   '
       );

      proc sgplot data=sashelp.cars(obs=200);
      scatter x=mpg_city y=msrp /
      group=type datalabel=cylinders;
      loess x=mpg_city y=msrp / nomarkers;
      run;

%mend set_090;


%macro set_100;

     %Tut_Sly
       (
        stop=9
        ,L9='^S={font_size=30pt just=c cellwidth=100pct} Advanced 3'
       );

      %Tut_Sly
       (
        stop=5
        ,L3='&t proc sgplot data=boxplots;          '
        ,L4='&t vbox results / category=treatment;  '
        ,L5='&t run;quit;                           '
       );

      proc sgplot data=boxplots;
      vbox results / category=treatment;
      run;quit;

      %Tut_Sly
       (
        stop=12
        ,L3='&t title1 "CL Bundle Compliance & CL Infection Rate";             '
        ,L4='&t proc sgplot data=compliance;                                   '
        ,L5='&t format bsi 3. compliance 5.2;                                  '
        ,L6='&t series y=Compliance x=month / markers                          '
        ,L7='&t curvelabel="      Compliance" curvelabelloc=inside datalabel ; '
        ,L8='&t series y=BSI x=month / y2axis markers                          '
        ,L9='&t curvelabel="      BSI"  curvelabelloc=inside datalabel;        '
       ,L10='&t yaxis label=" Compliance" values=(0 to 1.2 by .2) grid;        '
       ,L11='&t y2axis label="bsi per 1000 cl days" values=(0 to 25 by 5);     '
       ,L12='&t run;                                                           '
       );

      title1 "CL Bundle Compliance & CL Infection Rate";
      proc sgplot data=compliance;
      format bsi 3. compliance 5.2;
      series y=Compliance x=month / markers
      curvelabel="         Compliance" curvelabelloc=inside datalabel datalabelattrs=(size=10);
      series y=BSI x=month / y2axis markers
      curvelabel="      BSI"  curvelabelloc=inside datalabel datalabelattrs=(size=10);;
      yaxis label=" Compliance" values=(0 to 1.2 by .2) grid;
      y2axis label="bsi per 1000 cl days" values=(0 to 25 by 5);
      run;

      %Tut_Sly
       (
        stop=10
        ,L3='&t proc sgplot data=sashelp.class;            '
        ,L4='&t scatter x=weight y=height;                 '
        ,L5='&t inset "This is some important information" '
        ,L6='&t "in the bottom-right corner" /             '
        ,L7='&t position=BottomRight;                      '
        ,L8='&t inset ("A"="37" "B"="209" "C"="Value") /   '
        ,L9='&t position=TopLeft border;                   '
       ,L10='&t run;                                        '
       );

      proc sgplot data=sashelp.class;
      scatter x=weight y=height;
      inset "This is some important information"
      "in the bottom-right corner" /
      position=BottomRight;
      inset ("A"="37" "B"="209" "C"="Value") /
      position=TopLeft border;
      run;

      %Tut_Sly
       (
        stop=10
        ,L3='&t *ods escapechar="*";                                     '
        ,L4='&t proc sgplot data=sashelp.class;                         '
        ,L5='&t reg x=weight y=height / clm cli;                        '
        ,L6='&t inset ( "Y*{unicode bar}"="62.34" "R*{sup `2`}"="0.94"  '
        ,L7='&t "*{unicode alpha}"=".05" ) / position=TopLeft           '
        ,L8='&t border;                                                 '
        ,L9='&t run;                                                    '
       ,L10='&t   '
       );

      proc sgplot data=sashelp.class;
      reg x=weight y=height / clm cli;
      inset ( " Y^{unicode bar}"="62.34" "R^{sup '2'}"="0.94"
      "^{unicode alpha}"=".05" ) / position=TopLeft
      border;
      run;

      %Tut_Sly
       (
        stop=13
        ,L3=' &t ods output lsmeans= lsmeans;                 '
        ,L4=' &t proc mixed data = addtrt;                    '
        ,L5=' &t class treatment age;                         '
        ,L6=' &t model results = treatment age;               '
        ,L7=' &t lsmeans treatment / cl;                      '
        ,L8=' &t run;                                         '
        ,L9=' &t proc sgplot data = lsmeans;                  '
       ,L10=' &t scatter x = treatment y = estimate           '
       ,L11=' &t  / YERRORLOWER= lower YERRORUPPER= upper;    '
       ,L12=' &t series x = treatment y = estimate;           '
       ,L13=' &t run;                                         '
       );

      ods output lsmeans= lsmeans;
      proc mixed data = addtrt;
      class treatment age;
      model results = treatment age;
      lsmeans treatment / cl;
      run;
      proc sgplot data = lsmeans;
      scatter x = treatment y = estimate
       / YERRORLOWER= lower YERRORUPPER= upper;
      series x = treatment y = estimate;
      run;
      ods output exclude all;

      %Tut_Sly
       (
        stop=8
        ,L3=' &t proc sgplot data = addtrt;                      '
        ,L4=' &t scatter x = a y = results / group= treatment;   '
        ,L5=' &t reg x = a y = Results / markerattrs= (size= 10);'
        ,L6=' &t inset"Protocol: YYY0001112" "Date: 26.08.09"    '
        ,L7=' &t / position= bottomright BORDER;                  '
        ,L8=' &t run;                                            '
       );

      proc sgplot data = addtrt;
      scatter x = a y = results / group= treatment;
      reg x = a y = Results / markerattrs= (size= 10);
      inset "Protocol: YYY0001112" "Date: 26.08.09"
      / position= bottomright BORDER;
      run;


      %Tut_Sly
       (
        stop=13
        ,L3=' &t proc sgplot data = addtrt;                                          '
        ,L4=' &t reg x = trt_A_bodyweight y = trt_A_results                          '
        ,L5=' &t     / LEGENDLABEL= "YYY111" name = "lineA" MARKERATTRS=             '
        ,L6=' &t    (symbol= circlefilled color= green) LINEATTRS= (color= green) ;  '
        ,L7=' &t reg x = trt_B_bodyweight y = trt_B_results                          '
        ,L8=' &t    / LEGENDLABEL= "YYY222" name = "lineB"                           '
        ,L9=' &t    MARKERATTRS= (symbol= star color= red) LINEATTRS = (color= red); '
       ,L10=' &t keylegend "lineA" "lineB" / title= "Treatment Groups";              '
       ,L11=' &t inset "Protocol: YYY0001112" "Date: 26.08.09"                        '
       ,L12=' &t / position= bottomright BORDER;                                     '
       ,L13=' &t run;                                                                '
       );

      proc sgplot data = addtrt;
      reg x = trt_A_bodyweight y = trt_A_results
          / LEGENDLABEL= "YYY111" name = "lineA" MARKERATTRS=
         (symbol= circlefilled color= green) LINEATTRS= (color= green) ;
      reg x = trt_B_bodyweight y = trt_B_results
         / LEGENDLABEL= "YYY222" name = "lineB"
         MARKERATTRS= (symbol= star color= red) LINEATTRS = (color= red);
      keylegend "lineA" "lineB" / title= "Treatment Groups";
      inset"Protocol: YYY0001112" "Date: 26.08.09"
      / position= bottomright BORDER;
      run;

%mend set_100;

  *      *     ***
 **     **    *   *
  *      *    *   *
  *      *    *   *
  *      *    *   *
  *      *    *   *
*****  *****   ***;


%macro set_110;

     %Tut_Sly
       (
        stop=9
        ,L9='^S={font_size=30pt just=c cellwidth=100pct} Advanced 4'
       );

      %Tut_Sly
       (
        stop=15
        ,L3=' &_l  * Options used when SAS is accessing a JVM for JNI processing               '
        ,L4=' &_l -JREOPTIONS=(                                                                '
        ,L5=' &_l -Dsas.jre.libjvm=C:\PROGRA~1\Java\JRE15~1.0_1\bin\client\jvm.dll             '
        ,L6=' &_l -Djava.security.policy=!SASROOT\core\sasmisc\sas.policy                      '
        ,L7=' &_l -Dsas.ext.config=!SASROOT\core\sasmisc\sas.java.ext.config                   '
        ,L8=' &_l -Dsas.app.class.path=C:\PROGRA~1\SAS\SASVER~1\9.2\eclipse\plugins\tkjava.jar '
        ,L9=' &_l -DPFS_TEMPLATE=!SASROOT\core\sasmisc\qrpfstpt.xml                            '
       ,L10=' &_l -Djava.class.path=C:\PROGRA~1\SAS\SASVER~1\9.2\eclipse\plugins\SASLAU~1.JAR  '
       ,L11=' &_l -Djava.system.class.loader=com.sas.app.AppClassLoader                        '
       ,L12=' &_l -Xmx128m                                                                     '
       ,L13=' &_l -Xms128m                                                                     '
       ,L14=' &_l -Djava.security.auth.login.config=!SASROOT\core\sasmisc\sas.login.config     '
       ,L15=' &_l -Dtkj.app.launch.config=!SASROOT\picklist                                    '
       );

      %Tut_Sly
       (
        stop=30
        ,L3=' &_l proc template;                                                '
        ,L4=' &_l define style styles.presentation;                             '
        ,L5=' &_l parent = styles.listing;                                      '
        ,L6=' &_l end;                                                          '
        ,L7=' &_l run;                                                          '
        ,L8=' &_l proc template;                                                '
        ,L9=' &_l define style styles.presentation;                             '
       ,L10=' &_l parent = styles.listing;                                      '
       ,L11=' &_l style GraphFonts "Fonts used in graph styles" /               '
       ,L12=' &_l `GraphDataFont` = ("<sans-serif>, <MTsans-serif>",7pt)        '
       ,L13=' &_l `GraphUnicodeFont` = ("<MTsans-serif-unicode>",9pt)           '
       ,L14=' &_l `GraphValueFont` = ("<sans-serif>, <MTsans-serif>",9pt)       '
       ,L15=' &_l `GraphLabelFont` = ("<sans-serif>, <MTsans-serif>",10pt)      '
       ,L16=' &_l `GraphFootnoteFont` = ("<sans-serif>, <MTsans-serif>",10pt)   '
       ,L17=' &_l `GraphTitleFont` = ("<sans-serif>, <MTsans-serif>",11pt,bold) '
       ,L18=' &_l `GraphAnnoFont` = ("<sans-serif>, <MTsans-serif>",10pt);      '
       ,L19=' &_l class GraphDataDefault /                                      '
       ,L20=' &_l endcolor = GraphColors(`gramp3cend`)                          '
       ,L21=' &_l neutralcolor = GraphColors(`gramp3cneutral`)                  '
       ,L22=' &_l startcolor = GraphColors(`gramp3cstart`)                      '
       ,L23=' &_l markersize = 7px                                              '
       ,L24=' &_l markersymbol = "circle"                                       '
       ,L25=' &_l linethickness = 1px                                           '
       ,L26=' &_l linestyle = 1                                                 '
       ,L27=' &_l contrastcolor = GraphColors(`gcdata`)                         '
       ,L28=' &_l color = GraphColors(`gdata`);                                 '
       ,L29=' &_l end;                                                          '
       ,L30=' &_l run;                                                          '
       );

      proc template;
      define style styles.presentation;
      parent = styles.listing;
      end;
      run;
      proc template;
      define style styles.presentation;
      parent = styles.listing;
      style GraphFonts "Fonts used in graph styles" /
      'GraphDataFont' = ("<sans-serif>, <MTsans-serif>",7pt)
      'GraphUnicodeFont' = ("<MTsans-serif-unicode>",9pt)
      'GraphValueFont' = ("<sans-serif>, <MTsans-serif>",9pt)
      'GraphLabelFont' = ("<sans-serif>, <MTsans-serif>",10pt)
      'GraphFootnoteFont' = ("<sans-serif>, <MTsans-serif>",10pt)
      'GraphTitleFont' = ("<sans-serif>, <MTsans-serif>",11pt,bold)
      'GraphAnnoFont' = ("<sans-serif>, <MTsans-serif>",10pt);
      class GraphDataDefault /
      endcolor = GraphColors('gramp3cend')
      neutralcolor = GraphColors('gramp3cneutral')
      startcolor = GraphColors('gramp3cstart')
      markersize = 7px
      markersymbol = "circle"
      linethickness = 1px
      linestyle = 1
      contrastcolor = GraphColors('gcdata')
      color = GraphColors('gdata');
      end;
      run;

      %Tut_Sly
       (
        stop=30
        ,L3=' &_l PROC SGPLOT < option(s)>;                                                       '
        ,L4=' &_l BAND X= variable | Y= variable                                                  '
        ,L5=' &_l UPPER= numeric-value | numeric-variable LOWER= numeric-value | numeric-variable '
        ,L6=' &_l </option(s)>;                                                                   '
        ,L7=' &_l DENSITY response-variable </option(s)>;                                         '
        ,L8=' &_l DOT category-variable </option(s)>;                                             '
        ,L9=' &_l ELLIPSE X= numeric-variable Y= numeric-variable </option(s)>;                   '
       ,L10=' &_l HBARcategory-variable < /option(s) >                                            '
       ,L11=' &_l HBOXresponse-variable </option(s)>;                                             '
       ,L12=' &_l HISTOGRAM response-variable < /option(s)>                                       '
       ,L13=' &_l HLINE category-variable < /option(s)>                                           '
       ,L14=' &_l INSET"text-string-1" <... "text-string-n"> | (label-list);                      '
       ,L15=' &_l KEYLEGEND<"name-1" ... "name-n"> </option(s)>;                                  '
       ,L16=' &_l LOESS X= numeric-variable Y= numeric-variable </option(s)>;                     '
       ,L17=' &_l NEEDLE X= variable Y= numeric-variable </option(s)>;                            '
       ,L18=' &_l PBSPLINE X= numeric-variable Y= numeric-variable </option(s)>;                  '
       ,L19=' &_l REFLINEvalue(s) </option(s)>;                                                   '
       ,L20=' &_l REGX= numeric-variable Y= numeric-variable </option(s)>;                        '
       ,L21=' &_l SCATTERX= variable Y= variable </option(s)>;                                    '
       ,L22=' &_l SERIESX= variable Y= variable </option(s)>;                                     '
       ,L23=' &_l STEP X= variable Y= variable </option(s)>;                                      '
       ,L24=' &_l VBARcategory-variable < /option(s)>                                             '
       ,L25=' &_l VBOXresponse-variable </option(s)>;                                             '
       ,L26=' &_l VLINEcategory-variable < /option(s)>                                            '
       ,L27=' &_l XAXIS<option(s)>;                                                               '
       ,L28=' &_l X2AXIS <option(s)>;                                                             '
       ,L29=' &_l YAXIS<option(s)>;                                                               '
       ,L30=' &_l Y2AXIS <option(s)>;                                                             '
       );

   /*
      PROC SGPLOT < option(s)>;
      BAND X= variable | Y= variable
      UPPER= numeric-value | numeric-variable LOWER= numeric-value | numeric-variable
      </option(s)>;
      DENSITY response-variable </option(s)>;
      DOT category-variable </option(s)>;
      ELLIPSE X= numeric-variable Y= numeric-variable </option(s)>;
      HBARcategory-variable < /option(s) >
      HBOXresponse-variable </option(s)>;
      HISTOGRAM response-variable < /option(s)>
      HLINE category-variable < /option(s)>
      INSET"text-string-1" <... "text-string-n"> | (label-list);
      KEYLEGEND<"name-1" ... "name-n"> </option(s)>;
      LOESS X= numeric-variable Y= numeric-variable </option(s)>;
      NEEDLE X= variable Y= numeric-variable </option(s)>;
      PBSPLINE X= numeric-variable Y= numeric-variable </option(s)>;
      REFLINEvalue(s) </option(s)>;
      REGX= numeric-variable Y= numeric-variable </option(s)>;
      SCATTERX= variable Y= variable </option(s)>;
      SERIESX= variable Y= variable </option(s)>;
      STEP X= variable Y= variable </option(s)>;
      VBARcategory-variable < /option(s)>
      VBOXresponse-variable </option(s)>;
      VLINEcategory-variable < /option(s)>
      XAXIS<option(s)>;
      X2AXIS <option(s)>;
      YAXIS<option(s)>;
      Y2AXIS <option(s)>;
   */


      %Tut_Sly
       (
        stop=15
        ,L3=' &_l  * Options used when SAS is accessing a JVM for JNI processing               '
        ,L4=' &_l -JREOPTIONS=(                                                                '
        ,L5=' &_l -Dsas.jre.libjvm=C:\PROGRA~1\Java\JRE15~1.0_1\bin\client\jvm.dll             '
        ,L6=' &_l -Djava.security.policy=!SASROOT\core\sasmisc\sas.policy                      '
        ,L7=' &_l -Dsas.ext.config=!SASROOT\core\sasmisc\sas.java.ext.config                   '
        ,L8=' &_l -Dsas.app.class.path=C:\PROGRA~1\SAS\SASVER~1\9.2\eclipse\plugins\tkjava.jar '
        ,L9=' &_l -DPFS_TEMPLATE=!SASROOT\core\sasmisc\qrpfstpt.xml                            '
       ,L10=' &_l -Djava.class.path=C:\PROGRA~1\SAS\SASVER~1\9.2\eclipse\plugins\SASLAU~1.JAR  '
       ,L11=' &_l -Djava.system.class.loader=com.sas.app.AppClassLoader                        '
       ,L12=' &_l -Xmx128m                                                                     '
       ,L13=' &_l -Xms128m                                                                     '
       ,L14=' &_l -Djava.security.auth.login.config=!SASROOT\core\sasmisc\sas.login.config     '
       ,L15=' &_l -Dtkj.app.launch.config=!SASROOT\picklist                                    '
       );

      %Tut_Sly
       (
        stop=20
        ,L3=' &_l XAXIS (or YAXIS etc) option(s);                '
        ,L4=' &_l o options:                                      '
        ,L5=' &_l o DISCRETEORDER= DATA | FORMATTED | UNFORMATTED'
        ,L6=' &_l o DISPLAY= ALL | NONE | (options)              '
        ,L7=' &_l o FITPOLICY= policy-value                      '
        ,L8=' &_l o GRID                                         '
        ,L9=' &_l o INTEGER                                      '
       ,L10=' &_l o LABEL= "text-string "                        '
       ,L11=' &_l o LOGBASE= 2 | 10 | e                          '
       ,L12=' &_l o LOGSTYLE= LINEAR | LOGEXPAND | LOGEXPONENT   '
       ,L13=' &_l o MIN= numeric-value                           '
       ,L14=' &_l o MINOR                                        '
       ,L15=' &_l o MAX= numeric-value                           '
       ,L16=' &_l o NOTIMESPLIT                                  '
       ,L17=' &_l o REFTICKS                                     '
       ,L18=' &_l o TYPE= DISCRETE | LINEAR | LOG | TIME         '
       ,L19=' &_l o VALUES= ( value-1 < ... value-n > )          '
       ,L20=' &_l o VALUESHINT                                   '
       );
   /*
      XAXIS (or YAXIS etc) option(s);
      ooptions:
      oDISCRETEORDER= DATA | FORMATTED | UNFORMATTED
      oDISPLAY= ALL | NONE | (options)
      oFITPOLICY= policy-value
      oGRID
      oINTEGER
      oLABEL= "text-string "
      oLOGBASE= 2 | 10 | e
      oLOGSTYLE= LINEAR | LOGEXPAND | LOGEXPONENT
      oMIN= numeric-value
      oMINOR
      oMAX= numeric-value
      oNOTIMESPLIT
      oREFTICKS
      oTYPE= DISCRETE | LINEAR | LOG | TIME
      oVALUES= ( value-1 < ... value-n > )
      oVALUESHINT
  */

      %Tut_Sly
       (
        stop=21
        ,L3=' &_l SERIES statement syntax                              '
        ,L4=' &_l o SERIES X= variable Y= variable < / option(s)>;      '
        ,L5=' &_l o SERIES options:                                    '
        ,L6=' &_l o BREAK                                              '
        ,L7=' &_l o CURVELABEL <= text-string>                         '
        ,L8=' &_l o CURVELABELLOC= INSIDE | OUTSIDE                    '
        ,L9=' &_l o CURVELABELPOS= MIN | MAX | START | END             '
       ,L10=' &_l o DATALABEL <= variable>                             '
       ,L11=' &_l o LINEATTRS= style-element <(options)> | (options)   '
       ,L12=' &_l o MARKERATTRS= style-element <(options)> | (options) '
       ,L13=' &_l o MARKERS                                            '
       ,L14=' &_l o URL= character-variable                            '
       ,L15=' &_l o Plot options:                                      '
       ,L16=' &_l o GROUP= variable                                    '
       ,L17=' &_l o LEGENDLABEL= "text-string"                         '
       ,L18=' &_l o NAME= "text-string"                                '
       ,L19=' &_l o TRANSPARENCY= numeric-value                        '
       ,L20=' &_l o X2AXIS                                             '
       ,L21=' &_l o Y2AXIS                                             '
       );

   /*
      SERIES statement syntax
      oSERIES X= variable Y= variable < / option(s)>;
      oSERIES options:
      oBREAK
      oCURVELABEL <= text-string>
      oCURVELABELLOC= INSIDE | OUTSIDE
      oCURVELABELPOS= MIN | MAX | START | END
      oDATALABEL <= variable>
      oLINEATTRS= style-element <(options)> | (options)
      oMARKERATTRS= style-element <(options)> | (options)
      oMARKERS
      oURL= character-variable
      oPlot options:
      oGROUP= variable
      oLEGENDLABEL= "text-string"
      oNAME= "text-string"
      oTRANSPARENCY= numeric-value
      oX2AXIS
      oY2AXIS
   */

      %Tut_Sly
       (
        stop=38
        ,L3=' &_l PROC SGPANEL < option(s)>;                                                        '
        ,L4=' &_l PANELBYvariable(s)</option(s)>;                                                   '
        ,L5=' &_l BAND X= variable | Y= variable                                                    '
        ,L6=' &_l UPPER= numeric-value | numeric-variable LOWER= numeric-value | numeric-variable   '
        ,L7=' &_l </option(s)>;                                                                     '
        ,L8=' &_l COLAXIS<option(s)>;                                                               '
        ,L9=' &_l DENSITY response-variable </option(s)>;                                           '
       ,L10=' &_l DOT category-variable </option(s)>;                                               '
       ,L11=' &_l HBAR category-variable </option(s)>                                               '
       ,L12=' &_l HBOX response-variable </option(s)>;                                              '
       ,L13=' &_l HISTOGRAM response-variable </option(s)>                                          '
       ,L14=' &_l HLINE category-variable </option(s)>                                              '
       ,L15=' &_l KEYLEGEND <"name(s)"> </option(s)>;                                               '
       ,L16=' &_l HLINE variable </option(s)>;                                                      '
       ,L17=' &_l LOESS X= numeric-variable Y= numeric-variable </option(s)>;                       '
       ,L18=' &_l NEEDLE X= variable Y= numeric-variable </option(s)>;                              '
       ,L19=' &_l PBSPLINE X= numeric-variable Y= numeric-variable </option(s)>;                    '
       ,L20=' &_l REFLINE value(s) </option(s)>;                                                    '
       ,L21=' &_l REG X= numeric-variable Y= numeric-variable </option(s)>;                         '
       ,L22=' &_l ROWAXIS<option(s)>;                                                               '
       ,L23=' &_l SCATTER X= variable Y= variable </option(s)>;                                     '
       ,L24=' &_l SERIES X= variable Y= variable </option(s)>;                                      '
       ,L25=' &_l STEP X= variable Y= variable </option(s)>;                                        '
       ,L26=' &_l VBAR category-variable </option(s)>                                               '
       ,L27=' &_l VBOX response-variable </option(s)>;                                              '
       ,L28=' &_l VLINE category-variable </option(s)>                                              '
       );

    /*
      PROC SGPANEL < option(s)>;
      PANELBYvariable(s)</option(s)>;
      BAND X= variable | Y= variable
      UPPER= numeric-value | numeric-variable LOWER= numeric-value | numeric-variable
      </option(s)>;
      COLAXIS<option(s)>;
      DENSITY response-variable </option(s)>;
      DOT category-variable </option(s)>;
      HBAR category-variable </option(s)>
      HBOX response-variable </option(s)>;
      HISTOGRAM response-variable </option(s)>
      HLINE category-variable </option(s)>
      KEYLEGEND <"name(s)"> </option(s)>;
      HLINE variable </option(s)>;
      LOESS X= numeric-variable Y= numeric-variable </option(s)>;
      NEEDLE X= variable Y= numeric-variable </option(s)>;
      PBSPLINE X= numeric-variable Y= numeric-variable </option(s)>;
      REFLINE value(s) </option(s)>;
      REG X= numeric-variable Y= numeric-variable </option(s)>;
      ROWAXIS<option(s)>;
      SCATTER X= variable Y= variable </option(s)>;
      SERIES X= variable Y= variable </option(s)>;
      STEP X= variable Y= variable </option(s)>;
      VBAR category-variable </option(s)>
      VBOX response-variable </option(s)>;
      VLINE category-variable </option(s)>
    */

      %Tut_Sly
       (
        stop=19
        ,L3=' &_l PLOT statement syntax                                '
        ,L4=' &_l o PLOT plot-request(s) </ options>;                  '
        ,L5=' &_l o COLUMNS= n                                         '
        ,L6=' &_l o DATALABEL <= variable>                             '
        ,L7=' &_l o ELLIPSE <= (options)>                              '
        ,L8=' &_l o GRID                                               '
        ,L9=' &_l o GROUP= variable                                    '
       ,L10=' &_l o LEGEND = (options)                                 '
       ,L11=' &_l o LOESS <= (options)>                                '
       ,L12=' &_l o MARKERATTRS= style-element <(options)> | (options) '
       ,L13=' &_l o NOLEGEND                                           '
       ,L14=' &_l o PBSPLINE <= (options)>                             '
       ,L15=' &_l o REFTICKS                                           '
       ,L16=' &_l o REG <= (options)>                                  '
       ,L17=' &_l o ROWS= n                                            '
       ,L18=' &_l o SPACING= n                                         '
       ,L19=' &_l o UNISCALE= X | Y | ALL                              '
       );

 /*
      PLOT statement syntax
      oPLOT plot-request(s) </ options>;
      oCOLUMNS= n
      oDATALABEL <= variable>
      oELLIPSE <= (options)>
      oGRID
      oGROUP= variable
      oLEGEND = (options)
      oLOESS <= (options)>
      oMARKERATTRS= style-element <(options)> | (options)
      oNOLEGEND
      oPBSPLINE <= (options)>
      oREFTICKS
      oREG <= (options)>
      oROWS= n
      oSPACING= n
      oUNISCALE= X | Y | ALL
  */

      %Tut_Sly
       (
        stop=17
        ,L3=' &_l COMPARE statement syntax                                          '
        ,L4=' &_l o COMPARE X= variable | (variable-1 ... variable-n) Y= variable    '
        ,L5=' &_l     | (variable-1 ... variable-n) </options>;                       '
        ,L6=' &_l o DATALABEL <= variable>                                          '
        ,L7=' &_l o ELLIPSE <= (options)>                                           '
        ,L8=' &_l o GRID                                                            '
        ,L9=' &_l o GROUP= variable                                                 '
       ,L10=' &_l o LEGEND = (options)                                              '
       ,L11=' &_l o LOESS <= (options)>                                             '
       ,L12=' &_l o MARKERATTRS= style-element <(options)> | (options)              '
       ,L13=' &_l o NOLEGEND                                                        '
       ,L14=' &_l o PBSPLINE <= (options)>                                          '
       ,L15=' &_l o REFTICKS                                                        '
       ,L16=' &_l o REG <= (options)>                                               '
       ,L17=' &_l o SPACING= n                                                      '
       );
  /*
      COMPARE statement syntax
      oCOMPARE X= variable | (variable-1 ... variable-n) Y= variable
       | (variable-1 ... variable-n) </options>;
      oDATALABEL <= variable>
      oELLIPSE <= (options)>
      oGRID
      oGROUP= variable
      oLEGEND = (options)
      oLOESS <= (options)>
      oMARKERATTRS= style-element <(options)> | (options)
      oNOLEGEND
      oPBSPLINE <= (options)>
      oREFTICKS
      oREG <= (options)>
      oSPACING= n
  */


      %Tut_Sly
       (
        stop=12
        ,L3=' &_l MATRIX statement syntax                             '
        ,L4=' &_l o MATRIX variable-1 < ... variable-n> </ options>;   '
        ,L5=' &_l o DATALABEL= variable                               '
        ,L6=' &_l o DIAGONAL= (graph-list)                            '
        ,L7=' &_l o ELLIPSE <= (options)>                             '
        ,L8=' &_l o GROUP= variable                                   '
        ,L9=' &_l o LEGEND = (options)                                '
       ,L10=' &_l o MARKERATTRS= style-element <(options)> | (options)'
       ,L11=' &_l o NOLEGEND                                          '
       ,L12=' &_l o START= BOTTOMLEFT | TOPLEFT                       '
       );
 /*
      MATRIX statement syntax
      oMATRIX variable-1 < ... variable-n> </ options>;
      oDATALABEL= variable
      oDIAGONAL= (graph-list)
      oELLIPSE <= (options)>
      oGROUP= variable
      oLEGEND = (options)
      oMARKERATTRS= style-element <(options)> | (options)
      oNOLEGEND
      oSTART= BOTTOMLEFT | TOPLEFT
*/

      %Tut_Sly
       (
        stop=8
        ,L3=' &_l BEGINGRAPH statement syntax  '
        ,L4=' &_l o  BEGINGRAPH </ option(s)> ;'
        ,L5=' &_l o <GTL-global-statements >   '
        ,L6=' &_l o GTL-layout-block           '
        ,L7=' &_l o <GTL-global-statements >   '
        ,L8=' &_l o ENDGRAPH ;                 '
      );
/*
      86BEGINGRAPH statement syntax
      oBEGINGRAPH </ option(s)> ;
      o<GTL-global-statements >
      oGTL-layout-block
      o<GTL-global-statements >
      oENDGRAPH ;
*/
      %Tut_Sly
       (
        stop=11
        ,L3=' &_l LAYOUT statements                 '
        ,L4=' &_l o LAYOUT DATALATTICE Statement     '
        ,L5=' &_l o LAYOUT DATAPANEL Statement      '
        ,L6=' &_l o LAYOUT GRIDDEDStatement         '
        ,L7=' &_l o LAYOUT LATTICEStatement         '
        ,L8=' &_l o LAYOUT OVERLAYStatement         '
        ,L9=' &_l o LAYOUT OVERLAYEQUATED Statement '
       ,L10=' &_l o LAYOUT OVERLAY3D Statement      '
       ,L11=' &_l o LAYOUT PROTOTYPE Statement      '
       );


 /*
      LAYOUT statements
      oLAYOUT DATALATTICE Statement
      oLAYOUT DATAPANEL Statement
      oLAYOUT GRIDDEDStatement
      oLAYOUT LATTICEStatement
      oLAYOUT OVERLAYStatement
      oLAYOUT OVERLAYEQUATED Statement
      oLAYOUT OVERLAY3D Statement
      oLAYOUT PROTOTYPE Statement
*/

      %Tut_Sly
       (
        stop=14
        ,L3=' &_l REFLINE statement syntax                         '
        ,L4=' &_l o REFLINE value-1 <... value-n> </ option(s)>;    '
        ,L5=' &_l o REFLINE options:                                '
        ,L6=' &_l o AXIS= X | X2 | Y | Y2                           '
        ,L7=' &_l o LABEL <= ("text-string-1" ... "text-string-n")> '
        ,L8=' &_l o LABELLOC= INSIDE | OUTSIDE                      '
        ,L9=' &_l o LABELPOS= MIN | MAX                             '
       ,L10=' &_l o LINEATTRS= style-element <(options)> | (options)'
       ,L11=' &_l o Plot options:                                   '
       ,L12=' &_l o LEGENDLABEL= "text-string"                      '
       ,L13=' &_l o NAME= "text-string"                             '
       ,L14=' &_l o TRANSPARENCY= numeric-value                     '
       );

/*
      REFLINE statement syntax
      oREFLINE value-1 <... value-n> </ option(s)>;
      oREFLINE options:
      oAXIS= X | X2 | Y | Y2
      oLABEL <= ("text-string-1" ... "text-string-n")>
      oLABELLOC= INSIDE | OUTSIDE
      oLABELPOS= MIN | MAX
      oLINEATTRS= style-element <(options)> | (options)
      oPlot options:
      oLEGENDLABEL= "text-string"
      oNAME= "text-string"
      oTRANSPARENCY= numeric-value
*/

      %Tut_Sly
       (
        stop=12
        ,L3=' &_l Layout LATTICE                                      '
        ,L4=' &_l o The lattice layout is a multicell layout that      '
        ,L5=' &_l     combines features of gridded and overlay layouts    '
        ,L6=' &_l     and offers reserved areas for additional formatting:'
        ,L7=' &_l - sidebars (top, bottom, left, and right)          '
        ,L8=' &_l     that span all rows and columns                      '
        ,L9=' &_l - individual row and column headings                 '
       ,L10=' &_l - individual cell headings                            '
       ,L11=' &_l - axis scaling on a per cell, per row, per column,    '
       ,L12=' &_l     all rows, or all columns basis                       '
       );
 /*
      Layout LATTICE
      oThe lattice layout is a multicell layout that
      combines features of gridded and overlay layouts
      and offers reserved areas for additional formatting:
      -4 sidebars (top, bottom, left, and right)
      that span all rows and columns
      -individual row and column headings
      -individual cell headings
      -axis scaling on a per cell, per row, per column,
      all rows, or all columns basis
*/
      %Tut_Sly
       (
        stop=20
        ,L3=' &_l HBOX, VBOX statement syntax                        '
        ,L4=' &_l o HBOX (or VBOX)response-variable </ option(s)>;    '
        ,L5=' &_l o Box options:                                     '
        ,L6=' &_l o BOXWIDTH= numeric-value                          '
        ,L7=' &_l o CATEGORY= category-variable                      '
        ,L8=' &_l o DATALABEL <= variable>                           '
        ,L9=' &_l o EXTREME                                          '
       ,L10=' &_l o FREQ= numeric-variable                           '
       ,L11=' &_l o LABELFAR                                         '
       ,L12=' &_l o MISSING                                          '
       ,L13=' &_l o PERCENTILE= numeric-value                        '
       ,L14=' &_l o SPREAD                                           '
       ,L15=' &_l o Plot options:                                    '
       ,L16=' &_l o LEGENDLABEL= "text-string"                       '
       ,L17=' &_l o NAME= "text-string"                              '
       ,L18=' &_l o TRANSPARENCY= numeric-value                      '
       ,L19=' &_l o X2AXIS                                           '
       ,L20=' &_l o Y2AXIS                                           '
     );
/*
      HBOX, VBOX statement syntax
      oHBOX (or VBOX)response-variable </ option(s)>;
      oBox options:
      oBOXWIDTH= numeric-value
      oCATEGORY= category-variable
      oDATALABEL <= variable>
      oEXTREME
      oFREQ= numeric-variable
      oLABELFAR
      oMISSING
      oPERCENTILE= numeric-value
      oSPREAD
      oPlot options:
      oLEGENDLABEL= "text-string"
      oNAME= "text-string"
      oTRANSPARENCY= numeric-value
      oX2AXIS
      oY2AXIS
*/


      %Tut_Sly
       (
        stop=10
        ,L3=' &_l KEYLEGEND statement syntax                          '
        ,L4=' &_l oKEYLEGEND <"name-1" ... "name-n"> </ option(s)>;   '
        ,L5=' &_l oACROSS= n                                          '
        ,L6=' &_l oBORDER | NOBORDER                                  '
        ,L7=' &_l oDOWN= n                                            '
        ,L8=' &_l oLOCATION= OUTSIDE | INSIDE                         '
        ,L9=' &_l oPOSITION= position-value                           '
       ,L10=' &_l oTITLE= "text-string                                '
       );
 /*
      KEYLEGEND statement syntax
      oKEYLEGEND <"name-1" ... "name-n"> </ option(s)>;
      oACROSS= n
      oBORDER | NOBORDER
      oDOWN= n
      oLOCATION= OUTSIDE | INSIDE
      oPOSITION= position-value
      oTITLE= "text-string
*/

      %Tut_Sly
       (
        stop=12
        ,L3=' &_l INSET statement syntax                                        '
        ,L4=' &_l o INSET "text-string-1" <... "text-string-n"></ option(s)>;    '
        ,L5=' &_l o INSET (label-list) ;                           '
        ,L6=' &_l o BORDER | NOBORDER                                           '
        ,L7=' &_l o LABELALIGN= LEFT | CENTER | RIGHT                           '
        ,L8=' &_l o POSITION= position-value                                    '
        ,L9=' &_l o TEXTATTRS= style-element                                    '
       ,L10=' &_l o TITLE= "text-string"                                         '
       ,L11=' &_l o TITLEATTRS= style-element                                    '
       ,L12=' &_l o VALUEALIGN= LEFT | CENTER | RIGHT                            '
       );
/*
      INSET statement syntax
      oINSET "text-string-1" <... "text-string-n"></ option(s)>;
      oINSET (label-list) </ option(s)>;
      oBORDER | NOBORDER
      oLABELALIGN= LEFT | CENTER | RIGHT
      oPOSITION= position-value
      oTEXTATTRS= style-element
      oTITLE= "text-string"
      oTITLEATTRS= style-element
      oVALUEALIGN= LEFT | CENTER | RIGHT
*/

      %Tut_Sly
       (
        stop=20
        ,L3=' &_l HBOX, VBOX statement syntax                        '
        ,L4=' &_l o HBOX (or VBOX)response-variable;                  '
        ,L5=' &_l o Box options:                                     '
        ,L6=' &_l o BOXWIDTH= numeric-value                          '
        ,L7=' &_l o CATEGORY= category-variable                      '
        ,L8=' &_l o DATALABEL <= variable>                           '
        ,L9=' &_l o EXTREME                                          '
       ,L10=' &_l o FREQ= numeric-variable                           '
       ,L11=' &_l o LABELFAR                                         '
       ,L12=' &_l o MISSING                                          '
       ,L13=' &_l o PERCENTILE= numeric-value                        '
       ,L14=' &_l o SPREAD                                           '
       ,L15=' &_l o Plot options:                                    '
       ,L16=' &_l o LEGENDLABEL= "text-string"                       '
       ,L17=' &_l o NAME= "text-string"                              '
       ,L18=' &_l o TRANSPARENCY= numeric-value                      '
       ,L19=' &_l o X2AXIS                                           '
       ,L20=' &_l o Y2AXIS                                           '
      );


/*
      HBOX, VBOX statement syntax
      oHBOX (or VBOX)response-variable </ option(s)>;
      oBox options:
      oBOXWIDTH= numeric-value
      oCATEGORY= category-variable
      oDATALABEL <= variable>
      oEXTREME
      oFREQ= numeric-variable
      oLABELFAR
      oMISSING
      oPERCENTILE= numeric-value
      oSPREAD
      oPlot options:
      oLEGENDLABEL= "text-string"
      oNAME= "text-string"
      oTRANSPARENCY= numeric-value
      oX2AXIS
      oY2AXIS
*/
      %Tut_Sly
       (
        stop=22
        ,L3=' &_l SCATTER statement syntax                                         '
        ,L4=' &_l o SCATTER X= numeric-variable Y= numeric-variable               ; '
        ,L5=' &_l o SCATTER options:                                               '
        ,L6=' &_l o DATALABEL <= variable>                                         '
        ,L7=' &_l o FREQ= numeric-variable                                         '
        ,L8=' &_l o MARKERATTRS= style-element <(options)> | (options)             '
        ,L9=' &_l o MARKERCHAR= variable                                           '
       ,L10=' &_l o MARKERCHARATTRS= style-element <(options)> | (options)         '
       ,L11=' &_l o URL= character-variable                                        '
       ,L12=' &_l o XERRORLOWER= numeric-variable                                  '
       ,L13=' &_l o XERRORUPPER= numeric-variable                                  '
       ,L14=' &_l o YERRORLOWER= numeric-variable                                  '
       ,L15=' &_l o YERRORUPPER= numeric-variable                                  '
       ,L16=' &_l o Plot options:                                                  '
       ,L17=' &_l o GROUP= variable                                                '
       ,L18=' &_l o LEGENDLABEL= "text-string"                                     '
       ,L19=' &_l o NAME= "text-string"                                            '
       ,L20=' &_l o TRANSPARENCY= numeric-value                                    '
       ,L21=' &_l o X2AXIS                                                         '
       ,L22=' &_l o Y2AXIS                                                         '
      );

/*
      SCATTER statement syntax
      oSCATTER X= numeric-variable Y= numeric-variable < / option(s)>;
      oSCATTER options:
      oDATALABEL <= variable>
      oFREQ= numeric-variable
      oMARKERATTRS= style-element <(options)> | (options)
      oMARKERCHAR= variable
      oMARKERCHARATTRS= style-element <(options)> | (options)
      oURL= character-variable
      oXERRORLOWER= numeric-variable
      oXERRORUPPER= numeric-variable
      oYERRORLOWER= numeric-variable
      oYERRORUPPER= numeric-variable
      oPlot options:
      oGROUP= variable
      oLEGENDLABEL= "text-string"
      oNAME= "text-string"
      oTRANSPARENCY= numeric-value
      oX2AXIS
      oY2AXIS
*/
      %Tut_Sly
       (
        stop=21
        ,L3=' &_l XAXIS, YAXIS, XAXIS2, YAXIS2 statement syntax          '
        ,L4=' &_l o XAXIS (or YAXIS etc) option(s);                       '
        ,L5=' &_l o options:                                             '
        ,L6=' &_l o DISCRETEORDER= DATA | FORMATTED | UNFORMATTED        '
        ,L7=' &_l o DISPLAY= ALL | NONE | (options)                      '
        ,L8=' &_l o FITPOLICY= policy-value                              '
        ,L9=' &_l o GRID                                                 '
       ,L10=' &_l o INTEGER                                              '
       ,L11=' &_l o LABEL= "text-string "                                '
       ,L12=' &_l o LOGBASE= 2 | 10 | e                                  '
       ,L13=' &_l o LOGSTYLE= LINEAR | LOGEXPAND | LOGEXPONENT           '
       ,L14=' &_l o MIN= numeric-value                                   '
       ,L15=' &_l o MINOR                                                '
       ,L16=' &_l o MAX= numeric-value                                   '
       ,L17=' &_l o NOTIMESPLIT                                          '
       ,L18=' &_l o REFTICKS                                             '
       ,L19=' &_l o TYPE= DISCRETE | LINEAR | LOG | TIME                 '
       ,L20=' &_l o VALUES= ( value-1 < ... value-n > )                  '
       ,L21=' &_l o VALUESHINT                                           '
      );

 /*
      XAXIS, YAXIS, XAXIS2, YAXIS2 statement syntax
      oXAXIS (or YAXIS etc) option(s);
      ooptions:
      oDISCRETEORDER= DATA | FORMATTED | UNFORMATTED
      oDISPLAY= ALL | NONE | (options)
      oFITPOLICY= policy-value
      oGRID
      oINTEGER
      oLABEL= "text-string "
      oLOGBASE= 2 | 10 | e
      oLOGSTYLE= LINEAR | LOGEXPAND | LOGEXPONENT
      oMIN= numeric-value
      oMINOR
      oMAX= numeric-value
      oNOTIMESPLIT
      oREFTICKS
      oTYPE= DISCRETE | LINEAR | LOG | TIME
      oVALUES= ( value-1 < ... value-n > )
      oVALUESHINT
*/

      %Tut_Sly
       (
        stop=31
        ,L3=' &_l REG statement syntax                                        '
        ,L4=' &_l o REG X= numeric-variable Y= numeric-variable </ option(s)>; '
        ,L5=' &_l o REG options:                                              '
        ,L6=' &_l o ALPHA= numeric-value                                      '
        ,L7=' &_l o CLI <= "text-string">                                     '
        ,L8=' &_l o CLIATTRS= style-element                                   '
        ,L9=' &_l o CLM <= "text-string">                                     '
       ,L10=' &_l o CLMATTRS= style-element                                   '
       ,L11=' &_l o CLMTRANSPARENCY= value                                    '
       ,L12=' &_l o CURVELABEL <= "text-string">                              '
       ,L13=' &_l o CURVELABELLOC= OUTSIDE | INSIDE                           '
       ,L14=' &_l o CURVELABELPOS= MIN | MAX | START | END                    '
       ,L15=' &_l o DATALABEL <= variable>                                    '
       ,L16=' &_l o DEGREE= n                                                 '
       ,L17=' &_l o FREQ= numeric-variable                                    '
       ,L18=' &_l o LINEATTRS= style-element <(options)> | (options)          '
       ,L19=' &_l o MARKERATTRS= style-element <(options)> | (options)        '
       ,L20=' &_l o MAXPOINTS= n                                              '
       ,L21=' &_l o NOLEGCLI                                                  '
       ,L22=' &_l o NOLEGCLM                                                  '
       ,L23=' &_l o NOLEGFIT                                                  '
       ,L24=' &_l o NOMARKERS                                                 '
       ,L25=' &_l o WEIGHT= numeric-variable                                  '
       ,L26=' &_l o Plot options:                                             '
       ,L27=' &_l o GROUP= variable                                           '
       ,L28=' &_l o LEGENDLABEL= "text-string"                                '
       ,L29=' &_l o NAME= "text-string"                                       '
       ,L30=' &_l o X2AXIS                                                    '
       ,L31=' &_l o Y2AXIS                                                    '
      );
/*
      REG statement syntax
      oREG X= numeric-variable Y= numeric-variable </ option(s)>;
      oREG options:
      oALPHA= numeric-value
      oCLI <= "text-string">
      oCLIATTRS= style-element
      oCLM <= "text-string">
      oCLMATTRS= style-element
      oCLMTRANSPARENCY= value
      oCURVELABEL <= "text-string">
      oCURVELABELLOC= OUTSIDE | INSIDE
      oCURVELABELPOS= MIN | MAX | START | END
      oDATALABEL <= variable>
      oDEGREE= n
      oFREQ= numeric-variable
      oLINEATTRS= style-element <(options)> | (options)
      oMARKERATTRS= style-element <(options)> | (options)
      oMAXPOINTS= n
      oNOLEGCLI
      oNOLEGCLM
      oNOLEGFIT
      oNOMARKERS
      oWEIGHT= numeric-variable
      oPlot options:
      oGROUP= variable
      oLEGENDLABEL= "text-string"
      oNAME= "text-string"
      oX2AXIS
      oY2AXIS
*/

%mend set_110;

%macro set_120;
      %Tut_Sly
       (
        stop=14
        ,L3=' &t title "The Danger of High Price-Earnings Ratios";        '
        ,L4=' &t footnote j=l "Source: Robert J. Shiller";                '
        ,L5=' &t proc sgplot data=pe_data noautolegend;                   '
        ,L6=' &t yaxis offsetmin=0;                                       '
        ,L7=' &t refline 10 20 30 40 / lineattrs=GraphGridLines;          '
        ,L8=' &t band x=year upper=lPE lower=0 / fillattrs=(color=vilg);  '
        ,L9=' &t band x=year lower=&thresholdPE upper=uPE /               '
       ,L10=' &t  fillattrs=(color=red);                                  '
       ,L11=' &t refline &thresholdPE / label="PE=&thresholdPE";          '
       ,L12=' &t series x=year y=pe10 / lineattrs=GraphData1              '
       ,L13=' &t  (thickness=3 color=cx13478c) datalabel=label;           '
       ,L14=' &t run;                                                     '
      );

      title "The Danger of High Price-Earnings Ratios";
      footnote j=l "Source: Robert J. Shiller";
      proc sgplot data=pe_data noautolegend;
      yaxis offsetmin=0;
      refline 10 20 30 40 / lineattrs=GraphGridLines;
      band x=year upper=lPE lower=0 / fillattrs=(color=vilg);
      band x=year lower=&thresholdPE upper=uPE /
       fillattrs=(color=red);
      refline &thresholdPE / label="PE=&thresholdPE";
      series x=year y=pe10 / lineattrs=GraphData1
       (thickness=3 color=cx13478c) datalabel=label;
      run;

%mend set_120;

%macro set_130;

      %Tut_Sly
       (
        stop=15
        ,L3=' &t title "Distribution of Blood Pressure";          '
        ,L4=' &t proc sgplot data=sashelp.heart;                  '
        ,L5=' &t histogram diastolic / fillattrs=graphdata1       '
        ,L6=' &t transparency=0.7 binstart=40 binwidth=10;        '
        ,L7=' &t density diastolic / lineattrs=graphdata1;        '
        ,L8=' &t histogram systolic / fillattrs=graphdata2        '
        ,L9=' &t transparency=0.5 binstart=40 binwidth=10;        '
       ,L10=' &t density systolic / lineattrs=graphdata2;         '
       ,L11=' &t keylegend / location=inside                      '
       ,L12=' &t position=topright noborder across=2;             '
       ,L13=' &t yaxis grid;                                      '
       ,L14=' &t xaxis display=(nolabel) values=(0 to 300 by 50); '
       ,L15=' &t run;                                             '
      );

   title 'Distribution of Blood Pressure';
   proc sgplot data=sashelp.heart;
   histogram diastolic / fillattrs=graphdata1
   transparency=0.7 binstart=40 binwidth=10;
   density diastolic / lineattrs=graphdata1;
   histogram systolic / fillattrs=graphdata2
   transparency=0.5 binstart=40 binwidth=10;
   density systolic / lineattrs=graphdata2;
   keylegend / location=inside
   position=topright noborder across=2;
   yaxis grid;
   xaxis display=(nolabel) values=(0 to 300 by 50);
   run;

%mend set_130;

%macro set_140;
      %Tut_Sly
       (
        stop=13
        ,L3=' &t proc sgpanel data=grptre32;                      '
        ,L4=' &t title "Distribution of births, by gestational age'
        ,L5=' &t for US(1990) and Chernobyl Mothers(1986)";       '
        ,L6=' &t label poppct="1990 USA Distribution";            '
        ,L7=' &t format poppct ruspct 5.1;                        '
        ,L8=' &t panelby lvl / rows=3;                            '
        ,L9=' &t vbar poplvl / response=ruspct datalabel;         '
       ,L10=' &t vbar poplvl / response=poppct datalabel          '
       ,L11=' &t barwidth=0.5                                     '
       ,L12=' &t transparency=0.5;                                '
       ,L13=' &t run;quit;                                        '
      );

   proc sgpanel data=grptre32;
   title "Distribution of births, by gestational age
   for US(1990) and Chernobyl Mothers(1986)";
   label poppct="1990 USA Distribution";
   format poppct ruspct 5.1;
   panelby lvl / rows=3;
   vbar poplvl / response=ruspct datalabel;
   vbar poplvl / response=poppct datalabel
   barwidth=0.5
   transparency=0.5;
   run;quit;

%mend set_140;

%macro set_150;
      %Tut_Sly
       (
        stop=11
        ,L3=' &t title1 "Treatment Time Line by Patient";          '
        ,L4=' &t proc sgplot data=trttrt;                          '
        ,L5=' &t highlow y=PatientID low=start_date high=end_date /'
        ,L6=' &t group=Treatment                                   '
        ,L7=' &t type=bar                                          '
        ,L8=' &t barwidth=0.1;                                     '
        ,L9=' &t yaxis label="Patient ID" reverse;                 '
       ,L10=' &t xaxis label="Study Time";                         '
       ,L11=' &t run;                                              '
      );

      title1 "Treatment Time Line by Patient";
      proc sgplot data=trttrt;
      highlow y=PatientID low=start_date high=end_date /
      group=Treatment
      type=bar
      barwidth=0.1;
      yaxis label="Patient ID" reverse;
      xaxis label="Study Time";
      run;

%mend set_150;

%macro set_160;

      %Tut_Sly
       (
        stop=26
        ,L3=' &t title "Impact of Treatment on Mortality by Study";                  '
        ,L4=' &t title2 h=8pt "Odds Ratio and 95% CL";                               '
        ,L5=' &t proc sgplot data=forest4 noautolegend;                              '
        ,L6=' &t scatter y=study2value x=oddsratio /                                 '
        ,L7=' &t markerattrs=graphdata2(symbol=diamondfilled size=10);               '
        ,L8=' &t scatter y=studyvalue x=oddsratio / xerrorupper=ucl2                 '
        ,L9=' &t xerrorlower=lcl2 markerattrs=graphdata1(symbol=squarefilled size=0);'
       ,L10=' &t vector x=x2 y=studyvalue / xorigin=x1 yorigin=studyvalue            '
       ,L11=' &t lineattrs=graphdata1(thickness=8) noarrowheads;                     '
       ,L12=' &t scatter y=studyvalue x=or / markerchar=oddsratio x2axis;            '
       ,L13=' &t scatter y=studyvalue x=lcl / markerchar=lowercl x2axis;             '
       ,L14=' &t scatter y=studyvalue x=ucl / markerchar=uppercl x2axis;             '
       ,L15=' &t scatter y=studyvalue x=wt / markerchar=weight x2axis;               '
       ,L16=' &t refline 1 100  / axis=x;                                            '
       ,L17=' &t refline 0.1 10 / axis=x lineattrs=(pattern=shortdash)               '
       ,L18=' &t transparency=0.5;                                                   '
       ,L19=' &t inset "        Favors Treatment"  / position=bottomleft;            '
       ,L20=' &t inset "Favors Placebo"  / position=bottom;                          '
       ,L21=' &t xaxis type=log offsetmin=0 offsetmax=0.35 min=0.01                  '
       ,L22=' &t max=100 minor display=(nolabel) ;                                   '
       ,L23=' &t x2axis offsetmin=0.7 display=(noticks nolabel);                     '
       ,L24=' &t yaxis display=(noticks nolabel) offsetmin=0.1                       '
       ,L25=' &t offsetmax=0.05 values=(1 to &count by 1);                           '
       ,L26=' &t run;                                                                '
      );

      title "Impact of Treatment on Mortality by Study";
      title2 h=8pt 'Odds Ratio and 95% CL';
      proc sgplot data=forest4 noautolegend;
      scatter y=study2value x=oddsratio /
      markerattrs=graphdata2(symbol=diamondfilled size=10);
      scatter y=studyvalue x=oddsratio / xerrorupper=ucl2
      xerrorlower=lcl2 markerattrs=graphdata1(symbol=squarefilled size=0);
      vector x=x2 y=studyvalue / xorigin=x1 yorigin=studyvalue
      lineattrs=graphdata1(thickness=8) noarrowheads;
      scatter y=studyvalue x=or / markerchar=oddsratio x2axis;
      scatter y=studyvalue x=lcl / markerchar=lowercl x2axis;
      scatter y=studyvalue x=ucl / markerchar=uppercl x2axis;
      scatter y=studyvalue x=wt / markerchar=weight x2axis;
      refline 1 100  / axis=x;
      refline 0.1 10 / axis=x lineattrs=(pattern=shortdash)
      transparency=0.5;
      inset '        Favors Treatment'  / position=bottomleft;
      inset 'Favors Placebo'  / position=bottom;
      xaxis type=log offsetmin=0 offsetmax=0.35 min=0.01
      max=100 minor display=(nolabel) ;
      x2axis offsetmin=0.7 display=(noticks nolabel);
      yaxis display=(noticks nolabel) offsetmin=0.1
      offsetmax=0.05 values=(1 to &countx by 1);
      run;

%mend set_160;

%macro set_170;

      %Tut_Sly
       (
        stop=9
        ,L3=' &t proc sgplot data=reshape noautolegend;                            '
        ,L4=' &t scatter x=xvar y=mean / yerrorlower=lower                         '
        ,L5=' &t yerrorupper=upper                                                 '
        ,L6=' &t markerattrs=(color=blue symbol=CircleFilled);                     '
        ,L7=' &t series x=xvar y=mean / lineattrs=(color=blue pattern=2);          '
        ,L8=' &t title1 "Plot Means with Standard Error Bars from Calculated Data";'
        ,L9=' &t run;                                                              '
      );

/* Create sample data */
data test(drop=i);
   do i=1 to 10;
      do xvar=1 to 5;
         yvar=ranuni(0)*100;
         output;
      end;
   end;
run;

/* Calculate the means and the standard errors. */
proc sort data=test;
   by xvar;
run;

proc means data=test noprint;
   by xvar;
   var yvar;
   output out=meansout mean=mean stderr=stderr;
run;

/* Calculate the upper and lower error bar values. */
data reshape(drop=stderr);
   set meansout;
   lower=mean - stderr;
   upper=mean + stderr;
run;


/* The SCATTER statement generates the scatter plot with error bars. */
/* The SERIES statement draws the line to connect the means.         */
proc sgplot data=reshape noautolegend;
scatter x=xvar y=mean / yerrorlower=lower
yerrorupper=upper
markerattrs=(color=blue symbol=CircleFilled);
series x=xvar y=mean / lineattrs=(color=blue pattern=2);
title1 'Plot Means with Standard Error Bars from Calculated Data';
run;

%mend set_170;

%macro set_180;



      %Tut_Sly
       (
        stop=22
        ,L3=' &t title "Leading Causes of US Cancer Deaths in 2007";             '
        ,L4=' &t footnote justify=left italic "Source: American Cancer Society"; '
        ,L5=' &t proc sgplot data=cancer;                                        '
        ,L6=' &t format mcases mdeaths fcases fdeaths positive.;                 '
        ,L7=' &t hbar cause / response=mcases                                    '
        ,L8=' &t fillattrs=graphdata1 transparency=.65                           '
        ,L9=' &t legendlabel="New Cases (Male)" name="mcases" ;                  '
       ,L10=' &t hbar cause / response=mdeaths barwidth=.5                       '
       ,L11=' &t fillattrs=graphdata1 transparency=.25                           '
       ,L12=' &t legendlabel="Deaths (Male)" name="mdeaths" ;                    '
       ,L13=' &t hbar cause / response=fcases                                    '
       ,L14=' &t fillattrs=graphdata2 transparency=.65                           '
       ,L15=' &t legendlabel="New Cases (Female)" name="fcases";                 '
       ,L16=' &t hbar cause / response=fdeaths barwidth=.5                       '
       ,L17=' &t fillattrs=graphdata2 transparency=.25                           '
       ,L18=' &t legendlabel="Deaths (Female)" name="fdeaths";                   '
       ,L19=' &t keylegend "mcases" "fcases" "mdeaths" "fdeaths" / across=2;     '
       ,L20=' &t xaxis display=(nolabel) grid;                                   '
       ,L21=' &t yaxis display=(nolabel) discreteorder=data;                     '
       ,L22=' &t run;                                                            '
      );

proc format;
   picture positive
     low-<0='000,000'
     0<-high='000,000';
run;

title 'Leading Causes of US Cancer Deaths in 2007';
footnote justify=left italic 'Source: American Cancer Society';
proc sgplot data=cancer;
format mcases mdeaths fcases fdeaths positive.;
hbar cause / response=mcases
fillattrs=graphdata1 transparency=.65
legendlabel="New Cases (Male)" name="mcases" ;
hbar cause / response=mdeaths barwidth=.5
fillattrs=graphdata1 transparency=.25
legendlabel="Deaths (Male)" name="mdeaths" ;
hbar cause / response=fcases
fillattrs=graphdata2 transparency=.65
legendlabel="New Cases (Female)" name="fcases";
hbar cause / response=fdeaths barwidth=.5
fillattrs=graphdata2 transparency=.25
legendlabel="Deaths (Female)" name="fdeaths";
keylegend "mcases" "fcases" "mdeaths" "fdeaths" / across=2;
xaxis display=(nolabel) grid;
yaxis display=(nolabel) discreteorder=data;
run;

%mend set_180;

/* need 9.4? */
%macro set_190;

      %Tut_Sly
       (
        stop=9
        ,L3=' &t title "Major Releases SAS Software and Analytical Products";'
        ,L4=' &t proc sgplot data=Releases noautolegend;                     '
        ,L5=' &t styleattrs datacolors=(red yellow green);                   '
        ,L6=' &t block x=date block=category / transparency = 0.8;           '
        ,L7=' &t scatter x=date y=release /                                  '
        ,L8=' &t datalabel=StatRelease datalabelpos=right                    '
        ,L9=' &t markerattrs=(symbol=CircleFilled size=14);                  '
        ,L10=' &t xaxis grid type=time;                                      '
        ,L11=' &t yaxis type=discrete offsetmax=0.1;                         '
        ,L12=' &t run;                                                       '
      );

title "Major Releases SAS Software and Analytical Products";
proc sgplot data=Releases noautolegend;
block x=date block=category / transparency = 0.8
scatter x=date y=release /
datalabel=StatRelease
markerattrs=(symbol=CircleFilled size=14);
xaxis grid type=time;
yaxis type=discrete offsetmax=0.1;
run;

%mend  set_190;

%macro  set_200;

      %Tut_Sly
       (
        stop=13
        ,L3=' &t title "Subjects with Eye Irritation Over           '
        ,L4=' &t Time by Severity and Treatment";                   '
        ,L5=' &t proc sgpanel data=eye2;                            '
        ,L6=' &t format percent abs.;                               '
        ,L7=' &t panelby time / layout=columnlattice onepanel       '
        ,L8=' &t noborder colheaderpos=bottom novarname;            '
        ,L9=' &t vbar trtgrp / response=percent group=value;        '
        ,L10=' &t colaxis display=(nolabel noticks);                  '
        ,L11=' &t rowaxis label="Percent" values=(-100 to 100 by 20)  '
        ,L12=' &t grid offsetmax=0.025;                               '
        ,L13=' &t run;                                                '
      );

proc template;
   define style styles.blueeye;
      parent = styles.default;
      class GraphColors
         "Abstract colors used in graph styles" /
         'gdata1' = cx8f9fDE
       'gdata2' = cx42659C
         'gdata3' = cxC8a0a0
         'gdata4' = cxa07070
         'gdata5' = cxbf282A
         'gcdata1' = cx000000
         'gcdata2' = cx000000
         'gcdata3' = cx000000
         'gcdata4' = cx00000C
         'gcdata5' = cx000000;
   end;
run;

title "Subjects with Eye Irritation Over
Time by Severity and Treatment";
proc sgpanel data=eye2;
format percent abs.;
panelby time / layout=columnlattice onepanel
noborder colheaderpos=bottom novarname;
vbar trtgrp / response=percent group=value;
colaxis display=(nolabel noticks);
rowaxis label='Percent' values=(-100 to 100 by 20)
grid offsetmax=0.025;
run;

%mend set_200;

%macro set_210;

      %Tut_Sly
       (
        stop=27
        ,L3=' &t proc template;                                                       '
        ,L4=' &t define statgraph hazard_function;                                    '
        ,L5=' &t begingraph / designwidth=7in designheight=4.5in;                     '
        ,L6=' &t entrytitle "Hazard Function for Adverse Events of Special Interest"; '
        ,L7=' &t layout overlay / yaxisopts=(label="Hazard Rate")                     '
        ,L8=' &t xaxisopts=(linearopts=(viewmin=0                                     '
        ,L9=' &t tickvaluelist=(0 20 40 60 80 100 120 140 160 180 200)));             '
       ,L10=' &t stepplot x=day y=A / errorupper=AHigh errorlower=ALow justify=center '
       ,L11=' &t lineattrs=graphdata1(pattern=solid thickness=2)                      '
       ,L12=' &t errorbarattrs=graphdata1(pattern=solid thickness=2) name="a";        '
       ,L13=' &t stepplot x=day y=B / errorupper=BHigh errorlower=BLow justify=center '
       ,L14=' &t lineattrs=graphdata2(pattern=dash thickness=2)                       '
       ,L15=' &t errorbarattrs=graphdata2(pattern=solid thickness=2) name="b";        '
       ,L16=' &t discretelegend "a" "b" / location=inside halign=right                '
       ,L17=' &t valign=top across=1 border=true;                                     '
       ,L18=' &t innermargin;                                                         '
       ,L19=' &t blockplot x=day block=BRisk / display=(values label outline)         '
       ,L20=' &t labelattrs=GraphData2 valueattrs=GraphData2;                         '
       ,L21=' &t blockplot x=day block=ARisk / display=(values label outline)         '
       ,L22=' &t labelattrs=GraphData1 valueattrs=GraphData1;                         '
       ,L23=' &t endinnermargin;endlayout;                                            '
       ,L24=' &t entryfootnote halign=left                                            '
       ,L25=' &t "Table:  Average number of subjects at risk during interval";        '
       ,L26=' &t endgraph;end;run;                                                    '
       ,L27=' &t proc sgrender data=hazardx template=hazard_function;run;             '
      );

      proc template;
      define statgraph hazard_function;
      begingraph / designwidth=7in designheight=4.5in;
      entrytitle "Hazard Function for Adverse Events of Special Interest";
      layout overlay / yaxisopts=(label="Hazard Rate")
      xaxisopts=(linearopts=(viewmin=0
      tickvaluelist=(0 20 40 60 80 100 120 140 160 180 200)));
      stepplot x=day y=A / errorupper=AHigh errorlower=ALow justify=center
      lineattrs=graphdata1(pattern=solid thickness=2)
      errorbarattrs=graphdata1(pattern=solid thickness=2) name="a";
      stepplot x=day y=B / errorupper=BHigh errorlower=BLow justify=center
      lineattrs=graphdata2(pattern=dash thickness=2)
      errorbarattrs=graphdata2(pattern=solid thickness=2) name="b";
      discretelegend "a" "b" / location=inside halign=right
      valign=top across=1 border=true;
      innermargin;
      blockplot x=day block=BRisk / display=(values label outline)
      labelattrs=GraphData2 valueattrs=GraphData2;
      blockplot x=day block=ARisk / display=(values label outline)
      labelattrs=GraphData1 valueattrs=GraphData1;
      endinnermargin;endlayout;
      entryfootnote halign=left
      "Table:  Average number of subjects at risk during interval";
      endgraph;end;run;
      proc sgrender data=hazardx template=hazard_function;run;

%mend set_210;

%macro set_220;

      %Tut_Sly
       (
        stop=30
        ,L3=' &_l proc template;                                                                  '
        ,L4=' &_l define statgraph bartable ;                                                     '
        ,L5=' &_l mvar T1 T2 T3 T4 T5 T6 T7 T8 T9 P1 P2 P3 P4 P5 P6 P7 P8 P9;                     '
        ,L6=' &_l begingraph / designwidth=600px designheight=400px;                              '
        ,L7=' &_l entrytitle "Professional Golf Statistics for 2007";                             '
        ,L8=' &_l layout lattice / rows=2 rowgutter=0 rowweights=(.75 .25);                       '
        ,L9=' &_l layout overlay / xaxisopts=(display=(tickvalues))                               '
       ,L10=' &_l yaxisopts=(griddisplay=on                                                       '
       ,L11=' &_l linearopts=(tickvalueformat=(extractscale=true)) );                             '
       ,L12=' &_l layout gridded / valign=top halign=right border=true                            '
       ,L13=' &_l opaque=true backgroundcolor=GraphWalls:color;                                   '
       ,L14=' &_l entry "Tigers 2007 Wins" / textattrs=(weight=bold);                            '
       ,L15=' &_l layout gridded /columns=2 opaque=true backgroundcolor=GraphWalls:color;         '
       ,L16=' &_l entry halign=left T1; entry halign=right P1;                                    '
       ,L17=' &_l entry halign=left T2; entry halign=right P2;                                    '
       ,L18=' &_l entry halign=left T3; entry halign=right P3;                                    '
       ,L19=' &_l entry halign=left T4; entry halign=right P4;                                    '
       ,L20=' &_l entry halign=left T5; entry halign=right P5;                                    '
       ,L21=' &_l entry halign=left T6;      entry halign=right P6;                               '
       ,L22=' &_l entry halign=left T7; entry halign=right P7;endlayout;endlayout;                '
       ,L23=' &_l barchart x=LastName y=Earnings /                                                '
       ,L24=' &_l barlabel=true barlabelformat=dollar12. fillattrs=graphdata1                     '
       ,L25=' &_l skin=satin outlineattrs=(color=black);endlayout;                                '
       ,L26=' &_l layout overlay / xaxisopts=(type=discrete display=none) walldisplay=(fill);     '
       ,L27=' &_l blockplot x=LastName block=stat / class=statName display=(outline values label) '
       ,L28=' &_l valuehalign=right repeatedvalues=true                                           '
       ,L29=' &_l labelattrs=(size=7pt);endlayout;endlayout;endgraph;end;run;                     '
       ,L30=' &_l proc sgrender data=PGA2007 template=bartable;run;quit;                          '
      );

    proc template;
      define Style bartablestyle;
      parent = styles.blockprint;
      style GraphFonts from GraphFonts
        "Fonts used in graph styles" /
        'GraphTitleFont' = (", ",10pt,bold)
        'GraphLabelFont' = (", ",8pt)
        'GraphValueFont' = (", ",7pt)
        'GraphDataFont' = (", ",7pt);
      end;
    run;

    proc template;
    define statgraph bartable ;
    mvar T1 T2 T3 T4 T5 T6 T7 T8 T9 P1 P2 P3 P4 P5 P6 P7 P8 P9;
    begingraph /* / designwidth=600px designheight=400px */;
    entrytitle "Professional Golf Statistics for 2007";
    layout lattice / rows=2 rowgutter=0 rowweights=(.75 .25);
    layout overlay / xaxisopts=(display=(tickvalues))
    yaxisopts=(griddisplay=on
    linearopts=(tickvalueformat=(extractscale=true)) );
    layout gridded / valign=top halign=right border=true
    opaque=true backgroundcolor=GraphWalls:color;
    entry "Tiger's 2007 Wins" / textattrs=(weight=bold);
    layout gridded /columns=2 opaque=true backgroundcolor=GraphWalls:color;
    entry halign=left T1; entry halign=right P1;
    entry halign=left T2; entry halign=right P2;
    entry halign=left T3; entry halign=right P3;
    entry halign=left T4; entry halign=right P4;
    entry halign=left T5; entry halign=right P5;
    entry halign=left T6;      entry halign=right P6;
    entry halign=left T7; entry halign=right P7;endlayout;endlayout;
    barchart x=LastName y=Earnings /
    barlabel=true barlabelformat=dollar12. fillattrs=graphdata1 barlabelattrs=(size=9pt)
    skin=satin outlineattrs=(color=black);endlayout;
    layout overlay / xaxisopts=(type=discrete display=none) walldisplay=(fill);
    blockplot x=LastName block=stat / class=statName display=(outline values label)
    valuehalign=right repeatedvalues=true
    labelattrs=(size=7pt);endlayout;endlayout;endgraph;end;
    run;
    proc sgrender data=PGA2007 template=bartable;
    run;

%mend set_220;
 %macro set_230;

      %Tut_Sly
       (
        stop=32
        ,L1=' &_l SAS Proc template to create Marginal Histograms - part 1 (007)                                 '
        ,L3=' &_l proc template;                                                                                 '
        ,L4=' &_l   define statgraph scatterhist;                                                                '
        ,L5=' &_l   dynamic XVAR YVAR XTYPE YTYPE TITLE;                                                         '
        ,L6=' &_l   begingraph / designwidth=10in designheight=7in borderattrs=(thickness=3pt);                  '
        ,L7=' &_l     entrytitle TITLE;                                                                          '
        ,L8=' &_l     layout lattice / rows=2 columns=2 rowweights=(.2 .8) columnweights=(.8 .2)                 '
        ,L9=' &_l                      rowdatarange=union columndatarange=union rowgutter=0 columngutter=0;      '
       ,L10=' &_l     layout overlay / walldisplay=(fill) wallcolor=GraphBackground:color                        '
       ,L11=' &_l                      xaxisopts=(display=none)                                                  '
       ,L12=' &_l                      yaxisopts=(display=none offsetmin=0);                                     '
       ,L13=' &_l       if (upcase(XTYPE) = "DISCRETE") barchart x=XVAR / barwidth=1 stat=pct;                   '
       ,L14=' &_l       else histogram XVAR / binaxis=false;                                                     '
       ,L15=' &_l       endif;                                                                                   '
       ,L16=' &_l     endlayout;                                                                                 '
       ,L17=' &_l     layout overlay;                                                                            '
       ,L18=' &_l       entry "NOBS = " eval(n(XVAR));                                                           '
       ,L19=' &_l     endlayout;                                                                                 '
       ,L20=' &_l     layout overlay / xaxisopts=(type=XTYPE) yaxisopts=(type=YTYPE);                            '
       ,L21=' &_l       scatterplot y=YVAR x=XVAR ;                                                              '
       ,L22=' &_l     endlayout;                                                                                 '
       ,L23=' &_l     layout overlay / walldisplay=(fill) wallcolor=GraphBackground:color                        '
       ,L24=' &_l                      xaxisopts=(display=none offsetmin=0) yaxisopts=(display=none);            '
       ,L25=' &_l       if (upcase(YTYPE) = "DISCRETE") barchart x=YVAR / barwidth=1 orient=horizontal stat=pct; '
       ,L26=' &_l       else histogram YVAR / orient=horizontal binaxis=false;                                   '
       ,L27=' &_l       endif;                                                                                   '
       ,L28=' &_l     endlayout;                                                                                 '
       ,L29=' &_l     endlayout;                                                                                 '
       ,L30=' &_l   endgraph;                                                                                    '
       ,L31=' &_l   end;                                                                                         '
       ,L32=' &_l run;                                                                                           '
       );

      %Tut_Sly
       (
        stop=14
        ,L1=' &_l SAS Proc template to create Marginal Histograms - part 1 (007)'
        ,L3=' &_l proc template;                            '
        ,L4=' &_l   define Style ScatterHistStyle;          '
        ,L5=' &_l   parent = styles.journal;                '
        ,L6=' &_l   style GraphFonts from GraphFonts        '
        ,L7=' &_l     "Fonts used in graph styles" /        '
        ,L8=' &_l     "GraphTitleFont" = (", ",10pt,bold)   '
        ,L9=' &_l     "GraphFootnoteFont" = (", ",8pt)      '
       ,L10=' &_l     "GraphLabelFont" = (", ",8pt)         '
       ,L11=' &_l     "GraphValueFont" = (", ",7pt)         '
       ,L12=' &_l     "GraphDataFont" = (", ",7pt);         '
       ,L13=' &_l   end;                                    '
       ,L14=' &_l run;                                      '
       );

      %Tut_Sly
       (
        stop=27
        ,L1=' &_l R code to create Marginal Histograms - part 1 (007)                                 '
        ,L3=' &_l library(sas7bdat);                                                           '
        ,L4=' &_l library(ggplot2);                                                            '
        ,L5=' &_l scatterhist = function(x, y, xlab="", ylab=""){                              '
        ,L6=' &_l zones=matrix(c(2,0,1,3), ncol=2, byrow=TRUE);                                '
        ,L7=' &_l layout(zones, widths=c(4/5,1/5), heights=c(1/5,4/5));                        '
        ,L8=' &_l xhist = hist(x, plot=FALSE);                                                 '
        ,L9=' &_l yhist = hist(y, plot=FALSE);                                                 '
       ,L10=' &_l top = max(c(xhist$counts, yhist$counts));                                    '
       ,L11=' &_l par(mar=c(5,5,0,1));                                                         '
       ,L12=' &_l plot(x,y, xlab='', ylab='');                                                 '
       ,L13=' &_l par(mar=c(1,5,1,1));                                                         '
       ,L14=' &_l barplot(xhist$counts, axes=FALSE, ylim=c(0, top), space=0);                  '
       ,L15=' &_l par(mar=c(5,0,0,1));                                                         '
       ,L16=' &_l barplot(yhist$counts, axes=FALSE, xlim=c(0, top), space=0, horiz=TRUE);      '
       ,L17=' &_l par(oma=c(5,5,0,1));                                                         '
       ,L18=' &_l mtext(xlab, side=1, line=2, outer=TRUE, adj=0,                               '
       ,L19=' &_l   at=.8 * (mean(x) - min(x))/(max(x)-min(x)));                               '
       ,L20=' &_l mtext(ylab, side=2, line=2, outer=TRUE, adj=0,                               '
       ,L21=' &_l   at=(.65 * (mean(y) - min(y))/(max(y) - min(y))));                          '
       ,L22=' &_l };                                                                           '
       ,L23=' &_l ds<-read.sas7bdat("&pth/ds.sas7bdat");                                       '
       ,L24=' &_l head(ds);                                                                    '
       ,L25=' &_l pdf(file = "&pdf007_r", width = 10, height = 7);                             '
       ,L26=' &_l with(ds, scatterhist(MCS, PCS, xlab="MCS",ylab="PCS"));                      '
       ,L27=' &_l dev.off();                                                                   '
       );

       proc template;
         define statgraph scatterhist;
         dynamic XVAR YVAR XTYPE YTYPE TITLE;
         begingraph / designwidth=10in designheight=7in borderattrs=(thickness=3pt);
           entrytitle TITLE;
           layout lattice / rows=2 columns=2 rowweights=(.2 .8) columnweights=(.8 .2)
                            rowdatarange=union columndatarange=union rowgutter=0 columngutter=0;
           layout overlay / walldisplay=(fill) wallcolor=GraphBackground:color
                            xaxisopts=(display=none)
                            yaxisopts=(display=none offsetmin=0);
             if (upcase(XTYPE) = "DISCRETE") barchart x=XVAR / barwidth=1 stat=pct;
             else histogram XVAR / binaxis=false;
             endif;
           endlayout;
           layout overlay;
             entry 'NOBS = ' eval(n(XVAR));
           endlayout;
           layout overlay / xaxisopts=(type=XTYPE) yaxisopts=(type=YTYPE);
             scatterplot y=YVAR x=XVAR ;
           endlayout;
           layout overlay / walldisplay=(fill) wallcolor=GraphBackground:color
                            xaxisopts=(display=none offsetmin=0) yaxisopts=(display=none);
             if (upcase(YTYPE) = "DISCRETE") barchart x=YVAR / barwidth=1 orient=horizontal stat=pct;
             else histogram YVAR / orient=horizontal binaxis=false;
             endif;
           endlayout;
           endlayout;
         endgraph;
         end;
       run;

       proc template;
         define Style ScatterHistStyle;
         parent = styles.journal;
         style GraphFonts from GraphFonts
           "Fonts used in graph styles" /
           'GraphTitleFont' = (", ",10pt,bold)
           'GraphFootnoteFont' = (", ",8pt)
           'GraphLabelFont' = (", ",8pt)
           'GraphValueFont' = (", ",7pt)
           'GraphDataFont' = (", ",7pt);
         end;
       run;

       proc sgrender data=sashelp.heart(where=(uniform(-1)<.1)) template=scatterhist;
         dynamic YVAR="weight" XVAR="height" title="Two Continuous Variables";
       run;

 %mend set_230;

 ***    ***    ***
*   *  *   *  *   *
*   *  *   *  *   *
 ****  *   *  *   *
    *  *   *  *   *
   *   *   *  *   *
***     ***    ***;

%macro set_900;

      ****
      *   *
      *   *
      ****
      * *
      *  *
      *   *;

      ods listing close;

      * house keeping;
      * create two temporary pdf files. one from sas and one from r;
      * use ghostscript to append into the final pdf &ftg_pdf_r;
      * finally at the end of we will append all the R pdfs to the master sas pdf;
      * location for temporary pdfs;

      %let pth=%sysfunc(tranwrd(%sysfunc(pathname(work)),\,/));
      %put &=pth;

      * create output pdf to concatenate;
      %macro mnymac;

        data _null_;
          do num=1 to 15;
             zrofil=put(num,z3.);
             anssas=cats("&pth/pdf",zrofil,"sas.pdf");
             ansr  =cats("&pth/pdf",zrofil,"_r.pdf");
             put zrofil  anssas;
             call execute(cats('%utlfkil(',anssas,');'));
             call execute(cats('%utlfkil(',ansr,');'));

             call symputx(cats("pdf",zrofil,"sas"),anssas);
             call symputx(cats("pdf",zrofil,"_r"),ansr);

             put "&pth\barley.sas7bdat";

          end;
        /* do not add run or any code after the end */
      %mend mnymac;
      %mnymac;run;quit;

      %put &=pdf001_r;
      %put &=pdf001sas;

      * final pdf is &ftg_pdf_r;

      ods escapechar='^';
      %utlfkil(&pdf001sas); * delete if exists;
      ods listing close;
      ods pdf file="&pdf001sas" style=utl_pdflan100 notoc;

      %Tut_Sly
       (
        stop=9
        ,L9='^S={font_size=30pt just=c cellwidth=100pct} R Graphics'
       );

      %Tut_Sly
       (
        stop=16
        ,L1=' &_l o Installing ghostscript to append pdfs                          '
        ,L3=' &_l o Win 7 32/64bit SAS 9.3 32/64bit;                               '
        ,L4=' &_l o I used the 32 bit ghostscript;                                 '
        ,L5=' &_l o Download and install 9.06 Ghostscipt                           '
        ,L6=' &_l o Scan the download                                              '
        ,L7=' &_l o http://www.ghostscript.com/download/                           '
        ,L8=' &_l o I copied the executable gswin32c.exe to my c:\pdf folder       '
        ,L9=' &_l o c:\Program~\gs\gs9.06\bin\gswin32c.exe to                      '
       ,L10=' &_l      c:\pdf\gswin32c.exe '
       ,L12=' &_l o x `cd c:\pdf`                                                  '
       ,L13=' &_l o x  gswin32c -dNOPAUSE -sDEVICE=pdfwrite                        '
       ,L14=' &_l      -sOUTPUTFILE=merge.pdf -dBATCH pdf_1.pdf  pdf_2.pdf;       '
       ,L16=' &_l o Example given below                                            '
      );


     /*
        Win 7 32/64bit SAS 9.3  32/64bit;
        I used the 32bit ghostscript;
        Download and install 9.06 Ghostscipt
        Scan the download
        http://www.ghostscript.com/download/
        I copied the executable gswin32c.exe to my c:\pdf folder
        C:\Program Files\gs\gs9.06\bin\gswin32c.exe to c:\ftg\pdf\gswin32c.exe
     */

      %Tut_Sly
       (
        stop=18
        ,L1=' &_l  House keeping need three pdf outputs final pdf=cat(saspdf1,r_pdf2)          '
        ,L3=' &_l  o create two temporary pdf files. one from sas and one from R               '
        ,L4=' &_l  o use ghostscript to append into the final pdf &ftg_pdf_r;                  '
        ,L5=' &_l  o finally at the end of we will append all the R pdfs to the master sas pdf;'
        ,L6=' &_l  o location for temporary pdfs;                                              '
        ,L8=' &_l  %let pth=%sysfunc(tranwrd(%sysfunc(pathname(work)),\,/)););          '
        ,L9=' &_l  %put &=pth;                                                        '
       ,L11=' &_l  %let pdfsas = &pth/pdfsas.pdf;                                     '
       ,L12=' &_l  %let pdf_r  = &pth/pdf_r.pdf;                                     '
       ,L14=' &_l  * final pdf is &ftg_pdf_r;                                                  '
       ,L16=' &_l  ods listing close;                                                          '
       ,L17=' &_l  %utlfkil(&pdfsas); * delete if exists;                             '
       ,L18=' &_l  ods pdf file="&pdfsas" style=utl_pdflan100 notoc;                           '
      );

      %Tut_Sly
       (
        stop=31
        ,L1=' &_l  Macros to execute R and example data (change backquote to single quoote)      '
        ,L4=' &_l  %macro utl_runr(fid)/des="Macro to run R Batch";                      '
        ,L5=' &_l     * edit for the location of your R executable - will work in Unix;          '
        ,L6=' &_l     filename rut pipe "C:\Progra~1\R\R-2.15.3\bin\R --quiet --no-save < &fid"; '
        ,L7=' &_l     data _null_;                                                               '
        ,L8=' &_l       file print;                                                              '
        ,L9=' &_l       infile rut;                                                              '
       ,L10=' &_l       input;                                                                   '
       ,L11=' &_l       put _infile_;                                                            '
       ,L12=' &_l       putlog _infile_;                                                         '
       ,L13=' &_l     run;                                                                       '
       ,L14=' &_l     filename rut clear;                                                        '
       ,L15=' &_l  %mend utl_runr;                                                       '
       ,L16=' &_l  %macro submit_R(pgm)/des="create source R file";                      '
       ,L17=' &_l     %utlfkil(r_pgm);                                                  '
       ,L18=' &_l    data _null_;                                                                '
       ,L19=' &_l      file `r_pgm` lrecl=32766 recfm=v;                                         '
       ,L20=' &_l      pgm="&pgm";                                                               '
       ,L21=' &_l      pgm=translate("pgm","`","`"); * backquote to single quote;                '
       ,L22=' &_l      put pgm;                                                                  '
       ,L23=' &_l    run;                                                                        '
       ,L24=' &_l     %utl_runr(r_pgm);                                                  '
       ,L25=' &_l  %mend submit_R;                                                       '
       ,L26=' &_l  * all sas variable names uppercase;                                           '
       ,L27=' &_l  options validvarname=upcase;                                                  '
       ,L29=' &_l  data work.cars(compress=no outrep=windows_32);                                '
       ,L30=' &_l     set sashelp.cars(keep=wheelbase length horsepower type);                   '
       ,L31=' &_l  run;                                                                          '
      );

      %Tut_Sly
       (
        stop=25
        ,L1=' &_l  Simple scatter plot and appendingt PDF files  (001)                                          '
        ,L3=' &_l  * use backtick for double quote quote;                                                  '
        ,L4=' &_l  %utlfkil(&pdf_r);                                                                        '
        ,L5=' &_l  %utl_submit_R(%nrbquote(                                                      '
       ,L7 =' &_l  library(sas7bdat);                                                                      '
       ,L8 =' &_l  library(lattice);                                                                       '
       ,L9 =' &_l  cars<-read.sas7bdat("&pth.\\cars.sas7bdat");                                            '
       ,L10=' &_l  cars;                                                                                   '
       ,L11=' &_l  attach(cars);                                                                           '
       ,L12=' &_l  type<-as.factor(TYPE);                                                                  '
       ,L13=' &_l  pdf(file = `&pdf_r`, width = 10, height = 7);                                           '
       ,L14=' &_l  cloud(HORSEPOWER~LENGTH+WHEELBASE|as.factor(TYPE), pretty=T,                            '
       ,L15=' &_l  zlab=`hp`,xlab=`wheelbase`,ylab=`length`);                                              '
       ,L16=' &_l  dev.off();                                                                              '
       ,L18=' &_l  ));                                                                                     '
       ,L20=' &_l  options xwait xsync;run;                                                                '
       ,L22=' &_l  * append to utl_pptsly_sly.pdf;                                                         '
       ,L23=' &_l  x "cd %getstm(&ftg_pdf_r)";                                                             '
       ,L24=' &_l  x "gswin32c -dNOPAUSE -sDEVICE=pdfwrite -sOUTPUTFILE=pdf_final -dBATCH pdf_sas pdf_r";'
       ,L25=' &_l  x "cd c:\utl";                                                                          '
      );
      ods pdf close;

      %macro utl_runr(fid)/des="Macro to run R Batch";
         * edit for the location of your R executable - will work in Unix;
         filename rut pipe "C:\Progra~1\R\R-2.15.3\bin\R --quiet --no-save < &fid";
         data _null_;
           file print;
           infile rut;
           input;
           put _infile_;
           putlog _infile_;
         run;
         filename rut clear;
      %mend utl_runr;
      %macro submit_R(pgm)/des="create source R file";
        %utlfkil(r_pgm); /* this just deletes the pgm if it exists turned off here */
        data _null_;
          file 'r_pgm' lrecl=32766 recfm=v;
          pgm="&pgm";
          pgm=translate("&pgm","'","`")
          put pgm;
        run;
        %utl_runr(r_pgm);
      %mend submit_R;
      * all sas variable names uppercase;
      options validvarname=upcase;

      data work.cars(compress=no outrep=windows_32);
         set sashelp.cars(keep=wheelbase length horsepower type);
      run;

       ***    ***     *    *****          ***   ****
      *   *  *   *   * *     *           *   *   *  *
       *     *      *   *    *               *   *  *
        *    *      *****    *             **    *  *
         *   *      *   *    *               *   *  *
      *   *  *   *  *   *    *           *   *   *  *
       ***    ***   *   *    *            ***   ****;

      * delete if exists;
      %utlfkil(&pdf001_r);

      * use backtick for double quote quote;
      %utl_submit_R(%nrbquote
        (
         library(sas7bdat);
         library(lattice);
         cars<-read.sas7bdat("&pth.\\cars.sas7bdat");
         attach(cars);
         type<-as.factor(TYPE);
         pdf(file = '&pdf001_r', width = 10, height = 7);
         cloud(HORSEPOWER~LENGTH+WHEELBASE|as.factor(TYPE), pretty=T,
         zlab='hp',xlab='wheelbase',ylab='length');
         dev.off();
      ));

       ***    ***     *    *****          ***   ****
      *   *  *   *   * *     *           *   *   *  *
       *     *      *   *    *               *   *  *
        *    *      *****    *             **    *  *
         *   *      *   *    *            *      *  *
      *   *  *   *  *   *    *           *       *  *
       ***    ***   *   *    *           *****  ****;

      ods listing close;
      %utlfkil(&pdf002sas); * delete if exists;
      ods pdf file="&pdf002sas" style=utl_pdflan100 notoc;

      %Tut_Sly
       (
        stop=16
        ,L1=' Scatter Plots 2D  (002)                        '
        ,L3=' &_l library(sas7bdat);                                                   '
        ,L4=' &_l library(lattice);                                                    '
        ,L5=' &_l iris<-read.sas7bdat("&pth./iris.sas7bdat");                          '
        ,L6=' &_l head(iris);                                                          '
        ,L7=' &_l attach(iris);                                                        '
        ,L8=' &_l SPECIES<-as.factor(SPECIES);                                         '
        ,L9=' &_l pdf(file = "&pdf002_r", width = 10, height = 7);                     '
       ,L10=' &_l xyplot(SEPALLENGTH + SEPALWIDTH ~ PETALLENGTH + PETALWIDTH | SPECIES,'
       ,L11=' &_l data = iris, scales = "free", layout = c(2, 2),                      '
       ,L12=' &_l auto.key = list(x = .6, y = .7, corner = c(0, 0)));                  '
       ,L13=' &_l dev.off();                                                           '
      );

      ods pdf close;

      * delete if exists;
      %utlfkil(&pdf002_r);

      data "&pth./iris"(compress=no outrep=windows_32);
         set sashelp.iris;
      run;
      * use backtick for double quote quote;

      %utl_submit_R(%nrbquote
        (
          library(sas7bdat);
          library(lattice);
          iris<-read.sas7bdat("&pth./iris.sas7bdat");
          head(iris);
          attach(iris);
          SPECIES<-as.factor(SPECIES);
          pdf(file = "&pdf002_r", width = 10, height = 7);
          xyplot(SEPALLENGTH + SEPALWIDTH ~ PETALLENGTH + PETALWIDTH | SPECIES,
          data = iris, scales = "free", layout = c(2, 2),
          auto.key = list(x = .6, y = .7, corner = c(0, 0)));
          dev.off();
      ));

     ****     *    ****    ***     *
      *  *   * *   *   *  *   *   **
      *  *  *   *  *   *  *   *    *
      ***   *****  ****   *   *    *
      *  *  *   *  * *    *   *    *
      *  *  *   *  *  *   *   *    *
     ****   *   *  *   *   ***   *****;

      ods listing close;
      %utlfkil(&pdf003sas); * delete if exists;
      ods pdf file="&pdf003sas" style=utl_pdflan100 notoc;

      %Tut_Sly
       (
        stop=13
        ,L1=' BAR Charts  (003)                              '
        ,L3=' &_l library(sas7bdat);                                                    '
        ,L4=' &_l library(lattice);                                                     '
        ,L5=' &_l iris<-read.sas7bdat("&pth./iris.sas7bdat");                           '
        ,L6=' &_l head(iris);                                                           '
        ,L7=' &_l attach(iris);                                                         '
        ,L8=' &_l SPECIES<-as.factor(SPECIES);                                          '
        ,L9=' &_l pdf(file = "&pdf003_r", width = 10, height = 7);                      '
       ,L10=' &_l xyplot(SEPALLENGTH + SEPALWIDTH ~ PETALLENGTH + PETALWIDTH | SPECIES, '
       ,L11=' &_l data = iris, scales = "free", layout = c(2, 2),                       '
       ,L12=' &_l auto.key = list(x = .6, y = .7, corner = c(0, 0)));                   '
       ,L13=' &_l dev.off();                                                            '
      );

      ods pdf close;

      * delete if exists;
      %utlfkil(&pdf003_r);

      %utl_submit_R(%nrbquote
        (
          library(sas7bdat);
          library(lattice);
          barley<-read.sas7bdat('&pth/barley.sas7bdat');
          head(barley);
          bly<-barley[barley$SITE == "Morris" | barley$SITE == "Waseca" | barley$SITE == "Duluth",];
          head(bly);
          head(bly);
          attach(bly);
          SITE<-as.factor(SITE);
          pdf(file = '&pdf003_r', width = 10, height = 7);
          barchart(YIELD ~ VARIETY | SITE, data = bly,
          groups = YEAR, layout = c(1,3), stack = TRUE,
          auto.key = list(space = "right"),
          ylab = "Barley Yield (bushels/acre)",
          scales = list(x = list(rot = 45)));
          dev.off();
      ));


      ****     *    ****    ***    ***
       *  *   * *   *   *  *   *  *   *
       *  *  *   *  *   *  *   *      *
       ***   *****  ****   *   *    **
       *  *  *   *  * *    *   *   *
       *  *  *   *  *  *   *   *  *
      ****   *   *  *   *   ***   *****

      ods listing close;
      %utlfkil(&pdf004sas); * delete if exists;
      ods pdf file="&pdf004sas" style=utl_pdflan100 notoc;

      %Tut_Sly
       (
        stop=11
        ,L1=' BAR Charts ggplot  (004)                                                   '
        ,L3=' &_l library(sas7bdat);                                                     '
        ,L4=' &_l library(ggplot2);                                                      '
        ,L5=' &_l dat<-read.sas7bdat("&pth/dat.sas7bdat");                               '
        ,L6=' &_l head(dat);                                                             '
        ,L7=' &_l pdf(file = "&pdf004_r", width = 10, height = 7);                       '
        ,L8=' &_l ggplot(dat, aes(x=factor(VAR1), y=FREQ)) +                             '
        ,L9=' &_l geom_bar(stat="identity", aes(fill = VAR2)) +                          '
       ,L10=' &_l geom_text(data=subset(dat,FREQ != 0),aes(label=FREQ, y = POS), size=3);'
       ,L11=' &_l dev.off();                                                             '
      );

      ods pdf close;

      * delete if exists;
      %utlfkil(&pdf004_r);

      %utl_submit_R(%nrbquote
        (
          library(sas7bdat);
          library(ggplot2);
          dat<-read.sas7bdat("&pth/dat.sas7bdat");
          head(dat);
          pdf(file = '&pdf004_r', width = 10, height = 7);
          ggplot(dat, aes(x=factor(VAR1), y=FREQ)) +
          geom_bar(stat="identity", aes(fill = VAR2)) +
          geom_text(data=subset(dat,FREQ != 0),aes(label=FREQ, y = POS), size=3);
          dev.off();
      ));


      *   *    *    *   *  *   *
      ** **   * *   **  *  *   *
      * * *  *   *  * * *   * *
      *   *  *****  *  **    *
      *   *  *   *  *   *    *
      *   *  *   *  *   *    *
      *   *  *   *  *   *    *;


      ods listing close;
      %utlfkil(&pdf005sas); * delete if exists;
      ods pdf file="&pdf005sas" style=utl_pdflan100 notoc;

      %Tut_Sly
       (
        stop=14
        ,L1=' Four Different plots on one page (005)                  '
        ,L3=' &_l library(sas7bdat);                                  '
        ,L4=' &_l library(ggplot2);                                   '
        ,L5=' &_l mtcars<-read.sas7bdat("&pth/mtcars.sas7bdat");      '
        ,L6=' &_l attach(mtcars);                                     '
        ,L7=' &_l head(mtcars);                                       '
        ,L8=' &_l pdf(file = "&pdf005_r", width = 10, height = 7);    '
        ,L9=' &_l par(mfrow=c(2,2));                                  '
       ,L10=' &_l plot(WT,MPG, main="Scatterplot of WT vs. MPG");     '
       ,L11=' &_l plot(WT,DISP, main="Scatterplot of WT vs DISP");    '
       ,L12=' &_l hist(WT, main="Histogram of WT");                   '
       ,L13=' &_l boxplot(WT, main="Boxplot of WT");                  '
       ,L14=' &_l dev.off();                                          '
      );

      ods pdf close;

      * delete if exists;
      %utlfkil(&pdf005_r);

      %utl_submit_R(%nrbquote
        (
          library(sas7bdat);
          library(ggplot2);
          mtcars<-read.sas7bdat('&pth/mtcars.sas7bdat');
          attach(mtcars);
          head(mtcars);
          pdf(file = '&pdf005_r', width = 10, height = 7);
          par(mfrow=c(2,2));
          plot(WT,MPG, main='Scatterplot of WT vs. MPG');
          plot(WT,DISP, main='Scatterplot of WT vs DISP');
          hist(WT, main='Histogram of WT');
          boxplot(WT, main='Boxplot of WT');
          dev.off();
      ));


       ***    ***     *    *****         ****    ***   *   *
      *   *  *   *   * *     *            *  *  *   *  *   *
       *     *      *   *    *            *  *  *   *   * *
        *    *      *****    *            ***   *   *    *
         *   *      *   *    *            *  *  *   *   * *
      *   *  *   *  *   *    *            *  *  *   *  *   *
       ***    ***   *   *    *           ****    ***   *   *;


      ods listing close;
      %utlfkil(&pdf006sas); * delete if exists;
      ods pdf file="&pdf006sas" style=utl_pdflan100 notoc;

      %Tut_Sly
       (
        stop=14
        ,L1=' Scatterplot with Marginal Boxplots (006)            '
        ,L3=' &_l library(sas7bdat);                              '
        ,L4=' &_l library(ggplot2);                               '
        ,L5=' &_l mtcars<-read.sas7bdat("&pth/mtcars.sas7bdat");  '
        ,L6=' &_l attach(mtcars);                                 '
        ,L7=' &_l head(mtcars);                                   '
        ,L8=' &_l pdf(file = "&pdf006_r", width = 10, height = 7);'
        ,L9=' &_l par(mfrow=c(2,2));                              '
       ,L10=' &_l plot(WT,MPG, main="Scatterplot of WT vs. MPG"); '
       ,L11=' &_l plot(WT,DISP, main="Scatterplot of WT vs DISP");'
       ,L12=' &_l hist(WT, main="Histogram of WT");               '
       ,L13=' &_l boxplot(WT, main="Boxplot of WT");              '
       ,L14=' &_l dev.off();                                      '
      );

      ods pdf close;

      * delete if exists;
      %utlfkil(&pdf006_r);

      %utl_submit_R(%nrbquote
        (
          library(sas7bdat);
          library(ggplot2);
          mtcars<-read.sas7bdat("&pth/mtcars.sas7bdat");
          attach(mtcars);
          head(mtcars);
          pdf(file = "&pdf006_r", width = 10, height = 7);
          par(fig=c(0,0.8,0,0.8), new=TRUE);
          plot(mtcars$WT, mtcars$MPG, xlab="Miles Per Gallon",
            ylab="Car Weight");
          par(fig=c(0,0.8,0.55,1), new=TRUE);
          boxplot(mtcars$WT, horizontal=TRUE, axes=FALSE);
          par(fig=c(0.65,1,0,0.8),new=TRUE);
          boxplot(mtcars$MPG, axes=FALSE);
          mtext("Enhanced Scatterplot", side=3, outer=TRUE, line=-3);
          dev.off();
      ));

       *   *    *    ****    ***   *****  *   *   ***
       ** **   * *   *   *  *   *    *    **  *  *   *
       * * *  *   *  *   *  *        *    * * *   *
       *   *  *****  ****   * ***    *    *  **    *
       *   *  *   *  * *    *   *    *    *   *     *
       *   *  *   *  *  *   *   *    *    *   *  *   *
       *   *  *   *  *   *   ***   *****  *   *   ***;


      * delete if exists;
      %utlfkil(&pdf007_r);

      %utl_submit_R(%nrbquote
        (
          library(sas7bdat);
          library(ggplot2);
          scatterhist = function(x, y, xlab='', ylab=''){
          zones=matrix(c(2,0,1,3), ncol=2, byrow=TRUE);
          layout(zones, widths=c(4/5,1/5), heights=c(1/5,4/5));
          xhist = hist(x, plot=FALSE);
          yhist = hist(y, plot=FALSE);
          top = max(c(xhist$counts, yhist$counts));
          par(mar=c(5,5,0,1));
          plot(x,y, xlab='', ylab='');
          par(mar=c(1,5,1,1));
          barplot(xhist$counts, axes=FALSE, ylim=c(0, top), space=0,col="lightblue");
          par(mar=c(5,0,0,1));
          barplot(yhist$counts, axes=FALSE, xlim=c(0, top), space=0, horiz=TRUE,col="lightblue");
          par(oma=c(5,5,0,1));
          mtext(xlab, side=1, line=2, outer=TRUE, adj=0,
            at=.8 * (mean(x) - min(x))/(max(x)-min(x)));
          mtext(ylab, side=2, line=2, outer=TRUE, adj=0,
            at=(.65 * (mean(y) - min(y))/(max(y) - min(y))));
          };
          ds<-read.sas7bdat("&pth/ds.sas7bdat");
          head(ds);
          pdf(file = "&pdf007_r", width = 10, height = 7);
          with(ds, scatterhist(MCS, PCS, xlab='MCS',ylab='PCS'));
          dev.off();
      ));

%let cmb=
&pdf001sas &pdf001_r &pdf002sas &pdf002_r
&pdf003sas &pdf003_r &pdf004sas &pdf004_r
&pdf005sas &pdf005_r &pdf006sas &pdf006_r
&pdf007sas &pdf007_r;

options xwait xsync;run;
* append to utl_pptsly_sly.pdf;
%let tm1=&pth\tm1.pdf;
%let tm2=&pth\tm2.pdf;
%utlfkil(&tm1);
%utlfkil(&tm2);
x "cd %getstm(&ftg_pdf_r)";
x "gswin32c -dNOPAUSE -sDEVICE=pdfwrite -sOUTPUTFILE=&tm1 -dBATCH &pdf001sas &pdf001_r &pdf002sas &pdf002_r &pdf003sas &pdf003_r &pdf004sas &pdf004_r";
x "gswin32c -dNOPAUSE -sDEVICE=pdfwrite -sOUTPUTFILE=&tm2 -dBATCH &pdf005sas &pdf005_r &pdf006sas &pdf006_r &pdf007sas &pdf007_r";
x "gswin32c -dNOPAUSE -sDEVICE=pdfwrite -sOUTPUTFILE=&ftg_pdf_r -dBATCH &ftg_pdf &tm1 &tm2";
x "cd c:\utl";

/*
&pdf001sas &pdf001_r &pdf002sas &pdf002_r
&pdf003sas &pdf003_r &pdf004sas &pdf004_r
&pdf005sas &pdf005_r &pdf006sas &pdf006_r &pdf007sas &pdf007_r
*/

%mend set_900;

%macro nxtset(sly);
 title;
 footnote;
 data _null_;
   file print;
   put "example-> &sly";
 run;
%mend nxtset;

*****  *   *  ****          *   *    *     ***   ****    ***    ***
*      **  *   *  *         ** **   * *   *   *  *   *  *   *  *   *
*      * * *   *  *         * * *  *   *  *      *   *  *   *   *
****   *  **   *  *         *   *  *****  *      ****   *   *    *
*      *   *   *  *         *   *  *   *  *      * *    *   *     *
*      *   *   *  *         *   *  *   *  *   *  *  *   *   *  *   *
*****  *   *  ****          *   *  *   *   ***   *   *   ***    ***;

/*
%utlopts;
ods listing close;
ods pdf close;
ods path work.templat(update) sasuser.templat(update) sashelp.tmplmst(read);
%utl_pdflan100;

%utlfkil(&ftg_ppt);
%utlfkil(&ftg_pdf);
ods noptitle;
ods escapechar='^';
ods listing close;
ods pdf file="&ftg_pdf" style=utl_pdflan100 notoc;
ods graphics on / width=10in  height=7in ;
ods trace off;

                  %set_005;
%nxtset(180);     %set_180;
%*nxtset(190);     %*set_190; * wait for 9.4? ;
%nxtset(200);     %set_200;
%nxtset(160);     %set_160;
%nxtset(210);     %set_210;
%nxtset(230);     %set_230;
%nxtset(220);     %set_220;
%nxtset(010);     %set_010;
%nxtset(020);     %set_020;
%nxtset(030);     %set_030;
%nxtset(040);     %set_040;
%nxtset(050);     %set_050;
%nxtset(060);     %set_060;
%nxtset(070);     %set_070;
%nxtset(080);     %set_080;
%nxtset(090);     %set_090;
%nxtset(100);     %set_100;
%nxtset(120);     %set_120;
%nxtset(130);     %set_130;
%nxtset(140);     %set_140;
%nxtset(150);     %set_150;
%nxtset(170);     %set_170;

ods graphics off;
ods pdf close;

x "&ftg_pdf";


* R graphics;

* Not supported at NIH because
ghostscript cannot be installed;


%set_900;
ods pdf close;

%*utl_boxpdf2ppt;
run;quit;
*/

*****  *   *  ****           ***   *      ****
*      **  *   *  *         *   *  *       *  *
*      * * *   *  *         *   *  *       *  *
****   *  **   *  *         *   *  *       *  *
*      *   *   *  *         *   *  *       *  *
*      *   *   *  *         *   *  *       *  *
*****  *   *  ****           ***   *****  ****;

%let pgm=tut_addpdfsly;

%let t=^S={font_size=18pt just=l cellwidth=100pct};
%let _l=^S={font_size=12pt just=l cellwidth=100pct};

%Macro Tut_Sly
(
 stop=32,
 L1=' ',  L2=' ', L3=' ', L4=' ', L5=' ', L6=' ', L7=' ', L8=' ', L9=' ',
 L10=' ', L11=' ',
 L12=' ', L13=' ', L14=' ', L15=' ', L16=' ', L17=' ', L18=' ', L19=' ',
 L20=' ', L21=' ',
 L22=' ', L23=' ', L24=' ', L25=' ', L26=' ', L27=' ', L28=' ', L29=' ', L30=' ', L31=' ', L32=' '
 )/ des="SAS Slides";

/* creating slides for a presentation */
/* backtic ` is converted to a single quote  */

Data _OneLyn1st;

   Length title $255;

   Title  = translate(&L1,"'","`");Output;
   Title  = translate(&L2,"'","`");Output;
   Title  = translate(&L3,"'","`");Output;
   Title  = translate(&L4,"'","`");Output;
   Title  = translate(&L5,"'","`");Output;
   Title  = translate(&L6,"'","`");Output;
   Title  = translate(&L7,"'","`");Output;
   Title  = translate(&L8,"'","`");Output;
   Title  = translate(&L9,"'","`");Output;
   Title  = translate(&L10,"'","`");Output;
   Title  = translate(&L11,"'","`");Output;
   Title  = translate(&L12,"'","`");Output;
   Title  = translate(&L13,"'","`");Output;
   Title  = translate(&L14,"'","`");Output;
   Title  = translate(&L15,"'","`");Output;
   Title  = translate(&L16,"'","`");Output;
   Title  = translate(&L17,"'","`");Output;
   Title  = translate(&L18,"'","`");Output;
   Title  = translate(&L19,"'","`");Output;
   Title  = translate(&L20,"'","`");Output;
   Title  = translate(&L21,"'","`");Output;
   Title  = translate(&L22,"'","`");Output;
   Title  = translate(&L23,"'","`");Output;
   Title  = translate(&L24,"'","`");Output;
   Title  = translate(&L25,"'","`");Output;
   Title  = translate(&L26,"'","`");Output;
   Title  = translate(&L27,"'","`");Output;
   Title  = translate(&L28,"'","`");Output;
   Title  = translate(&L29,"'","`");Output;
   Title  = translate(&L30,"'","`");Output;
   Title  = translate(&L31,"'","`");Output;
   Title  = translate(&L32,"'","`");Output;
run;quit;

data _onelyn;
  set _onelyn1st(obs=%eval(&stop + 1));
  if not (left(title) =:  '^') then do;
     pre=upcase(scan(left(title),1,' '));
     idx=index(left(title),' ');
     title=substr(title,idx+1);
     select (strip(pre));
       when ('&_L') title=catx(' ',"&_l",title);
       when ('&T')  title=catx(' ',"&t",title);
       otherwise;
     end;
  end;
  put title;
run;

title;
footnote;
proc report data=_OneLyn nowd style=utl_pdflan100;
col title;
define title / display ' ';
run;
quit;

%Mend Tut_Sly;

*goptions reset=all cback=white border htitle=12pt htext=10pt;
data cbstates(drop=stcode);
   length State 8 Stcode $ 2 Division 4;
   input Stcode $ Division @@;
   State=stfips(stcode);
   cards4;
CT 1 MA 1 ME 1 NH 1 RI 1 VT 1 PA 2 NJ 2 NY 2
IL 3 IN 3 MI 3 OH 3 WI 3 IA 4 KS 4 MN 4 MO 4
ND 4 NE 4 SD 4 DC 5 DE 5 FL 5 GA 5 MD 5 NC 5
SC 5 VA 5 WV 5 AL 6 KY 6 MS 6 TN 6 AR 7 LA 7
OK 7 TX 7 AZ 8 CO 8 ID 8 MT 8 NM 8 NV 8 UT 8
WY 8 AK 9 CA 9 HI 9 OR 9 WA 9
;;;;
run;quit;

data shares;
   input State Vendor Num;
   cards4;
12 1 98
12 2 23
13 1 34
13 2 45
37 1 12
37 2 56
45 1 89
45 2 75
51 1 12
51 2 34
;;;;
run;quit;

data sites;input Region  Sites @@;
cards4;
1 1100 2 262 3 92 4 612 5 23 6 52
;;;;
run;



data one;
   input trt_group time subject results;
   datalines;
1 2 100 20
1 4 100 30
1 6 100 35
1 8 100 50
1 2 200 40
1 4 200 25
1 6 200 40
1 8 200 30
1 2 300 25
1 4 300 40
1 6 300 45
1 8 300 55
2 2 400 15
2 4 400 35
2 6 400 50
2 8 400 45
2 2 500 35
2 4 500 35
2 6 500 20
2 8 500 35
;
run;quit;

  data onezz;
     input trt_group time subject results;
     datalines;
  1 2 100 20
  1 4 100 30
  1 6 100 35
  1 8 100 50
  1 2 200 40
  1 4 200 25
  1 6 200 40
  1 8 200 30
  1 2 300 25
  1 4 300 40
  1 6 300 45
  1 8 300 55
  2 2 400 15
  2 4 400 35
  2 6 400 50
  2 8 400 45
  2 2 500 35
  2 4 500 35
  2 6 500 20
  2 8 500 35
  ;
  run;quit;

%macro sly070(dummy);

   %Tut_Sly
    (
     stop=25
     ,L5='^S={font_size=30pt just=l cellwidth=100pct} Approx 100 Sample Graphs'
     ,L9='^S={font_size=30pt just=l cellwidth=100pct} o SAS source'
     ,L12='^S={font_size=30pt just=l cellwidth=100pct}    tut_AddPdfSly.sas'
     ,L16='^S={font_size=30pt just=l cellwidth=100pct} o SAS pdf output'
     ,L19='^S={font_size=30pt just=l cellwidth=100pct}    tut_AddPdfSly.pdf'
     ,L25='^S={font_size=30pt just=l cellwidth=100pct} Most graphs use sashelp datasets'
    );

%mend sly070;

%macro sly080(dummy);

   %Tut_Sly
       (
        stop=27
        ,L2=' &_l  data fixage(keep=Gender Age Race);          '
        ,L3=' &_l    length Gender $12;                        '
        ,L4=' &_l    set sashelp.class;                        '
        ,L5=' &_l    if sex="M" then Gender="Male";            '
        ,L6=' &_l    else Gender="Female";                     '
        ,L7=' &_l    if mod(_n_,2)=0 then Race="White       "; '
        ,L8=' &_l    else race="Non-White";                    '
        ,L9=' &_l  run;                                        '
       ,L10=' &_l  proc univariate data=fixage noprint;        '
       ,L11=' &_l  axis1 order=10 to 18 by 2;                  '
       ,L12=' &_l      label Age=""; *"Age Histogram";         '
       ,L13=' &_l      class Gender Race;                      '
       ,L14=' &_l      var Age;                                '
       ,L15=' &_l      histogram Age   / ncols=2  nrows=2      '
       ,L16=' &_l          haxis      = axis1                  '
       ,L17=' &_l          inheight   = 3                      '
       ,L18=' &_l          intertile  = 1                      '
       ,L19=' &_l          cfill      = ligb                   '
       ,L20=' &_l          cframe     = ligr                   '
       ,L21=' &_l          cframeside = ligr;                  '
       ,L22=' &_l      inset  N  Std  q1="25%" median q3="75%" '
       ,L23=' &_l          / pos    = ne                       '
       ,L24=' &_l          format = comma12.                   '
       ,L25=' &_l          cfill  = ywh                        '
       ,L26=' &_l          height = 3;                         '
       ,L27=' &_l  run;quit;                                   '
       );

    data fixage(keep=Gender Age Race);
      length Gender $12;
      set sashelp.class;
      if sex="M" then Gender="Male";
      else Gender="Female";
      if mod(_n_,2)=0 then Race="White       ";
      else race="Non-White";
    run;
    proc univariate data=fixage noprint;
    axis1 order=10 to 18 by 2;
        label Age=""; *"Age Histogram";
        class Gender Race;
        var Age;
        histogram Age   / ncols=2  nrows=2
            haxis      = axis1
            inheight   = 3
            intertile  = 1
            cfill      = ligb
            cframe     = ligr
            cframeside = ligr;
        inset  N  Std  q1="25%" median q3="75%"
            / pos    = ne
            format = comma12.
            cfill  = ywh
            height = 3;
    run;quit;

%mend sly080;


%macro sly090(dummy);

   %Tut_Sly
       (
        stop=30
        ,L2=' &_l data one;                                     '
        ,L3=' &_l    input trt_group time subject results;      '
        ,L4=' &_l    datalines;                                 '
        ,L5=' &_l 1 2 100 20                                    '
        ,L6=' &_l 1 4 100 30                                    '
        ,L7=' &_l 1 6 100 35                                    '
        ,L8=' &_l 1 8 100 50                                    '
        ,L9=' &_l 1 2 200 40                                    '
       ,L10=' &_l 1 4 200 25                                    '
       ,L11=' &_l 1 6 200 40                                    '
       ,L12=' &_l 1 8 200 30                                    '
       ,L13=' &_l 1 2 300 25                                    '
       ,L14=' &_l 1 4 300 40                                    '
       ,L15=' &_l 1 6 300 45                                    '
       ,L16=' &_l 1 8 300 55                                    '
       ,L17=' &_l 2 2 400 15                                    '
       ,L18=' &_l 2 4 400 35                                    '
       ,L19=' &_l 2 6 400 50                                    '
       ,L20=' &_l 2 8 400 45                                    '
       ,L21=' &_l 2 2 500 35                                    '
       ,L22=' &_l 2 4 500 35                                    '
       ,L23=' &_l 2 6 500 20                                    '
       ,L24=' &_l 2 8 500 35                                    '
       ,L25=' &_l ;                                             '
       ,L26=' &_l run;quit;                                     '
       ,L27=' &_l proc sgplot data=one;                         '
       ,L28=' &_l    title "Study Results by Treatment Group";  '
       ,L29=' &_l    series x=time y=results / group=subject    '
       ,L30=' &_l      grouplc=trt_group name="grouping";        '
       ,L31=' &_l keylegend "grouping" / type=linecolor;run;quit;'
       );

  ods graphics on / width=10in  height=7in ;
  proc sgplot data=onezz;
     title "Study Results by Treatment Group - Spaghetti Plot ";
     series x=time y=results / group=subject
       grouplc=trt_group name='grouping';
  keylegend 'grouping' / type=linecolor;run;quit;
  ods graphics off;

%mend  sly090;

%macro sly095(dummy);

   %Tut_Sly
    (
     stop=8
     ,L8='^S={font_size=35pt just=c cellwidth=100pct} MAPS'
    );

%mend sly095;


%macro sly100(dummy);

   %Tut_Sly
    (
     stop=8
     ,L3=' &_t proc gmap map=maps.europe(where=(id ne 405 and id ne 845))'
     ,L4=' &_t   data=sashelp.demographics(where=(cont=93)) all;         '
     ,L5=' &_t   id id;                                                  '
     ,L6=' &_t   choro pop / cdefault=yellow;                            '
     ,L7=' &_t run;                                                      '
     ,L8=' &_t quit;                                                     '
    );

%mend sly100;

%macro sly110(dummy);

    ods graphics on / width=10in  height=7in ;
    proc gmap map=maps.europe(where=(id ne 405 and id ne 845))
              data=sashelp.demographics(where=(cont=93)) all;
      id id;
      choro pop / cdefault=yellow;
    run;
    quit;
    ods graphics off;
    run;quit;

%mend sly110;

%macro sly120(dummy);

   %Tut_Sly
       (
        stop=29
        ,L4=' &_l proc gproject data=maps.counties(where=(state=50)) out=vermont;       '
        ,L5=' &_l   id state county;                                                    '
        ,L6=' &_l run;quit;                                                             '
        ,L7=' &_l data vtnames;                                                         '
        ,L8=' &_l   set maps.cntyname(where=(state=50));                                '
        ,L9=' &_l run;quit;                                                             '
       ,L10=' &_l %annomac;                                                             '
       ,L11=' &_l  /* Use the MAPLABEL annotate macro to create an annotate data set */ '
       ,L12=' &_l  /* The macro parameters are:                                      */ '
       ,L13=' &_l  /*     Attribute data set that contains variable for the label.   */ '
       ,L14=' &_l  /*     Resulting output data set for use in ANNO= in GMAP.        */ '
       ,L15=' &_l  /*     Variable for label on.  Can be text or numeric.            */ '
       ,L16=' &_l  /*     Space-separated list of IDs that the map and attribute     */ '
       ,L17=' &_l  /*         data sets are sorted on.                               */ '
       ,L18=' &_l  /*     FONT=      Font for the label.                             */ '
       ,L19=' &_l  /*     COLOR=     Color of the label.  Default is BLACK.          */ '
       ,L20=' &_l  /*     SIZE=      Size of the label.  Default is 1.               */ '
       ,L21=' &_l  /*     HSYS=      UNIT system for SIZE=.  Default is 3 (PERCENT). */ '
       ,L22=' &_l %maplabel(vermont,vtnames,anno,countynm,state county,                 '
       ,L23=' &_l  font="Albany AMT/bold", color=black,size=2.1);                       '
       ,L24=' &_l title1 "County Map of Vermont";                                       '
       ,L25=' &_l pattern1 v=me c=black r=15;                                           '
       ,L26=' &_l proc gmap data=vermont map=vermont;                                   '
       ,L27=' &_l   id state county;                                                    '
       ,L28=' &_l   choro county / anno=anno nolegend coutline=grayaa;                  '
       ,L29=' &_l run; quit;                                                            '
       );

%utlnopts;
proc gproject data=maps.counties(where=(state=50)) out=vermont;
  id state county;
run;quit;
data vtnames;
  set maps.cntyname(where=(state=50));
run;quit;
%annomac;
 /* Use the MAPLABEL annotate macro to create an annotate data set */
 /* The macro parameters are:                                      */
 /*     Attribute data set that contains variable for the label.   */
 /*     Resulting output data set for use in ANNO= in GMAP.        */
 /*     Variable for label on.  Can be text or numeric.            */
 /*     Space-separated list of IDs that the map and attribute     */
 /*         data sets are sorted on.                               */
 /*     FONT=      Font for the label.                             */
 /*     COLOR=     Color of the label.  Default is BLACK.          */
 /*     SIZE=      Size of the label.  Default is 1.               */
 /*     HSYS=      UNIT system for SIZE=.  Default is 3 (PERCENT). */
%maplabel(vermont,vtnames,anno,countynm,state county,
 font='Albany AMT/bold', color=black,size=2.1);
title1 "County Map of Vermont";
pattern1 v=me c=black r=15;
proc gmap data=vermont map=vermont;
  id state county;
  choro county / anno=anno nolegend coutline=grayaa;
run; quit;
%utlopts;

%mend sly120;

%macro sly130(dummy);

   %Tut_Sly
       (
        stop=30
        ,L4=' &_l goptions reset=all cback=white border htitle=12pt htext=10pt; '
        ,L5=' &_l data cbstates(drop=stcode);                                   '
        ,L6=' &_l    length State 8 Stcode $ 2 Division 4;                      '
        ,L7=' &_l    input Stcode $ Division @@;                                '
        ,L8=' &_l    State=stfips(stcode);                                      '
        ,L9=' &_l    cards4;                                                    '
       ,L10=' &_l CT 1 MA 1 ME 1 NH 1 RI 1 VT 1 PA 2 NJ 2 NY 2                  '
       ,L11=' &_l IL 3 IN 3 MI 3 OH 3 WI 3 IA 4 KS 4 MN 4 MO 4                  '
       ,L12=' &_l ND 4 NE 4 SD 4 DC 5 DE 5 FL 5 GA 5 MD 5 NC 5                  '
       ,L13=' &_l SC 5 VA 5 WV 5 AL 6 KY 6 MS 6 TN 6 AR 7 LA 7                  '
       ,L14=' &_l OK 7 TX 7 AZ 8 CO 8 ID 8 MT 8 NM 8 NV 8 UT 8                  '
       ,L15=' &_l WY 8 AK 9 CA 9 HI 9 OR 9 WA 9                                 '
       ,L16=' &_l ;;;;                                                          '
       ,L17=' &_l run;quit;                                                     '
       ,L18=' &_l proc sort data=cbstates out=cbsort;by state;run;              '
       ,L19=' &_l data uscb;merge cbsort maps.us;by state;run;                  '
       ,L20=' &_l proc sort data=uscb out=divstate;by division;run;             '
       ,L21=' &_l  /* Remove interior boundaries within divisions */            '
       ,L22=' &_l proc gremove data=divstate out=remstate;by division;          '
       ,L23=' &_l    id state;run;                                              '
       ,L24=' &_l title1 "U.S. State Map (before GREMOVE)";                     '
       ,L25=' &_l pattern value=mempty repeat=48 color=black;                   '
       ,L26=' &_l proc gmap map=maps.us data=maps.us all;id state;              '
       ,L27=' &_l    choro state / nolegend;run;quit;                           '
       ,L28=' &_l title1 "U.S. Census Division Map (after GREMOVE)";            '
       ,L29=' &_l proc gmap map=remstate data=remstate all;id division;         '
       ,L30=' &_l    choro division / nolegend;run;quit;                        '
       );

run;quit;

proc sort data=cbstates out=cbsort;by state;run;
data uscb;merge cbsort maps.us;by state;run;
proc sort data=uscb out=divstate;by division;run;
 /* Remove interior boundaries within divisions */
proc gremove data=divstate out=remstate;by division;
   id state;run;
title1 "U.S. State Map (before GREMOVE)";
pattern value=mempty repeat=48 color=black;
proc gmap map=maps.us data=maps.us all;id state;
   choro state / nolegend;run;quit;
title1 'U.S. Census Division Map (after GREMOVE)';
proc gmap map=remstate data=remstate all;id division;
   choro division / nolegend;run;quit;

%mend sly130;

%macro sly140(dummy);

   %Tut_Sly
       (
        stop=27
        ,L4=' &_l goptions reset=all cback=white border htitle=12pt htext=10'
        ,L5=' &_l proc freq data=shares noprint;weight num;                 '
        ,L6=' &_l tables state*vendor / outpct out=freq;run;                '
        ,L7=' &_l data anno;                                                '
        ,L8=' &_l    merge freq(in=a) maps.uscenter;                        '
        ,L9=' &_l    by state;if a;                                         '
       ,L10=' &_l    xsys="2"; /* X and Y coordinate system */              '
       ,L11=' &_l    ysys="2";                                              '
       ,L12=' &_l    when="a"; /* Apply the annotation after */             '
       ,L13=' &_l    function="pie";   /* Draw a pie */                     '
       ,L14=' &_l    if vendor=1 then color="CX7C95CA";                     '
       ,L15=' &_l    else color="CXDE7E6F";                                 '
       ,L16=' &_l    rotate=360*pct_row/100;/* Draw the portion pie */      '
       ,L17=' &_l    size=2;                                                '
       ,L18=' &_l    style="solid";                                         '
       ,L19=' &_l    line=0;                                                '
       ,L20=' &_l run;                                                      '
       ,L21=' &_l pattern1 v=me c=black r=5;                                '
       ,L22=' &_l title "Annotate a pie chart within each state";           '
       ,L23=' &_l proc gmap data=maps.us(where=(state in(12 13 37 45 51)))  '
       ,L24=' &_l      map=maps.us(where=(state in(12 13 37 45 51)));       '
       ,L25=' &_l    id state;                                              '
       ,L26=' &_l    choro state / nolegend annotate=anno coutline=black;   '
       ,L27=' &_l run;quit;                                                 '
       );

*goptions reset=all cback=white border htitle=12pt htext=10pt;
proc freq data=shares noprint;weight num;
tables state*vendor / outpct out=freq;run;
data anno;
   merge freq(in=a) maps.uscenter;
   by state;if a;
   xsys='2'; /* X and Y coordinate system */
   ysys='2';
   when='a'; /* Apply the annotation after */
   function='pie';   /* Draw a pie */
   if vendor=1 then color='CX7C95CA';
   else color='CXDE7E6F';
   rotate=360*pct_row/100;/* Draw the portion pie */
   size=2;
   style='solid';
   line=0;
run;
pattern1 v=me c=black r=5;
title "Annotate a pie chart within each state";
proc gmap data=maps.us(where=(state in(12 13 37 45 51)))
     map=maps.us(where=(state in(12 13 37 45 51)));
   id state;
   choro state / nolegend annotate=anno coutline=black;
run;quit;

%mend sly140;

%macro sly150(dummy);

   %Tut_Sly
       (
        stop=23
        ,L4=' &_l proc template;                                                '
        ,L5=' &_l    define style styles.colorramp;                             '
        ,L6=' &_l    parent=styles.default;                                     '
        ,L7=' &_l    /* Define a lighter and darker shade of blue for           '
        ,L8=' &_l       the starting and ending colors. */                      '
        ,L9=' &_l    style twocolorramp / startcolor=cxF3F7FE endcolor=cx6497EB;'
       ,L10=' &_l    /* When there are fewer than 3 response levels,            '
       ,L11=' &_l       GraphData1 and GraphData2                               '
       ,L12=' &_l       are used for the colors */                              '
       ,L13=' &_l    style graphdata1 from graphdata1 / color=cxF3F7FE;         '
       ,L14=' &_l    style graphdata2 from graphdata2 / color=cx6497EB;         '
       ,L15=' &_l    end;                                                       '
       ,L16=' &_l run;                                                          '
       ,L17=' &_l ods listing style=styles.colorramp;                           '
       ,L18=' &_l title "Map with colors defined from a color ramp";            '
       ,L19=' &_l proc gmap data=maps.us map=maps.us;                           '
       ,L20=' &_l    id state;                                                  '
       ,L21=' &_l    choro state;                                               '
       ,L22=' &_l run;                                                          '
       ,L23=' &_l quit;                                                         '
       );

proc template;
   define style styles.colorramp;
   parent=styles.default;
   /* Define a lighter and darker shade of blue for
      the starting and ending colors. */
   style twocolorramp / startcolor=cxF3F7FE endcolor=cx6497EB;
   /* When there are fewer than 3 response levels,
      GraphData1 and GraphData2
      are used for the colors */
   style graphdata1 from graphdata1 / color=cxF3F7FE;
   style graphdata2 from graphdata2 / color=cx6497EB;
   end;
run;
ods listing style=styles.colorramp;
title 'Map with colors defined from a color ramp';
proc gmap data=maps.us map=maps.us;
   id state;
   choro state;
run;
quit;

%mend sly150;

%macro sly160(dummy);

   %Tut_Sly
       (
        stop=25
        ,L4=' &_l goptions reset=all cback=white border htitle=12pt htext=10pt;'
        ,L5=' &_l data newaf;                                                  '
        ,L6=' &_l    set maps.africa;                                          '
        ,L7=' &_l    region=1;                                                 '
        ,L8=' &_l run;                                                         '
        ,L9=' &_l  /* Remove the unit areas from the AFRICA data set */        '
       ,L10=' &_l proc gremove data=newaf out=africa;                          '
       ,L11=' &_l    by region;                                                '
       ,L12=' &_l    id id;                                                    '
       ,L13=' &_l run;                                                         '
       ,L14=' &_l title1 "Africa before PROC GREMOVE";                         '
       ,L15=' &_l pattern value=mempty r=50 color=black;                       '
       ,L16=' &_l proc gmap map=maps.africa data=maps.africa all;              '
       ,L17=' &_l    id id;                                                    '
       ,L18=' &_l    choro id / nolegend;                                      '
       ,L19=' &_l run;quit;                                                    '
       ,L20=' &_l title1 "Africa after PROC GREMOVE";                          '
       ,L21=' &_l proc gmap data=africa map=africa;                            '
       ,L22=' &_l    id region;                                                '
       ,L23=' &_l    choro region / nolegend;                                  '
       ,L24=' &_l run;                                                         '
       ,L25=' &_l quit;                                                        '
       );


goptions  cback=white border htitle=12pt htext=9pt;
data newaf;
   set maps.africa;
   region=1;
run;
 /* Remove the unit areas from the AFRICA data set */
proc gremove data=newaf out=africa;
   by region;
   id id;
run;
title1 "Africa before PROC GREMOVE";
pattern value=mempty r=50 color=black;
proc gmap map=maps.africa data=maps.africa all;
   id id;
   choro id / nolegend;
run;quit;
title1 "Africa after PROC GREMOVE";
proc gmap data=africa map=africa;
   id region;
   choro region / nolegend;
run;
quit;

%mend sly160;

%macro sly170(dummy);

   %Tut_Sly
       (
        stop=30
        ,L4=' &_l data lower48;                                         '
        ,L5=' &_l    set maps.us;                                       '
        ,L6=' &_l    if state ne stfips("AK");                          '
        ,L7=' &_l    if state ne stfips("HI");                          '
        ,L8=' &_l    if state ne stfips("PR");                          '
        ,L9=' &_l run;                                                  '
       ,L10=' &_l data citystar;/* Create the Annotate data set*/       '
       ,L11=' &_l    length function color $ 8 position $ 1             '
       ,L12=' &_l           text $ 20 style $ 30;                       '
       ,L13=' &_l    retain xsys ysys "2" hsys "3" when "a";            '
       ,L14=' &_l    set maps.uscity(keep=x y city state);              '
       ,L15=' &_l    if (city="Atlanta" and state=13)                   '
       ,L16=' &_l        or city="Chicago" or                           '
       ,L17=' &_l        city="Seattle";                                '
       ,L18=' &_l    /* Create the observation for a star */            '
       ,L19=' &_l    function="symbol"; style="marker"; text="V";       '
       ,L20=' &_l    color="black"; size=5; output;                     '
       ,L21=' &_l    /* Create the observation for a city */            '
       ,L22=' &_l    function="label";  text=city;                      '
       ,L23=' &_l    color="vibg"; size=5; position="8"; output;        '
       ,L24=' &_l run;                                                  '
       ,L25=' &_l title "Distribution Center Locations";                '
       ,L26=' &_l pattern value=mempty color=blue repeat=49;            '
       ,L27=' &_l proc gmap data=lower48 map=lower48;                   '
       ,L28=' &_l    id state;                                          '
       ,L29=' &_l    choro state / annotate=citystar discrete nolegend; '
       ,L30=' &_l run;quit;                                             '
       );

data lower48;
   set maps.us;
   if state ne stfips("AK");
   if state ne stfips("HI");
   if state ne stfips("PR");
run;
data citystar;/* Create the Annotate data set*/
   length function color $ 8 position $ 1
          text $ 20 style $ 30;
   retain xsys ysys "2" hsys "3" when "a";
   set maps.uscity(keep=x y city state);
   if (city="Atlanta" and state=13)
       or city="Chicago" or
       city="Seattle";
   /* Create the observation for a star */
   function="symbol"; style="marker"; text="V";
   color="black"; size=5; output;
   /* Create the observation for a city */
   function="label";  text=city;
   color="vibg"; size=5; position="8"; output;
run;
title "Distribution Center Locations";
pattern value=mempty color=blue repeat=49;
proc gmap data=lower48 map=lower48;
   id state;
   choro state / annotate=citystar discrete nolegend;
run;quit;

%mend sly170;

data sites;input Region  Sites @@;
cards4;
1 1100 2 262 3 92 4 612 5 23 6 52
;;;;
run;

%macro sly180(dummy);

   %Tut_Sly
       (
        stop=30
        ,L2=' &_l data sites;input Region  Sites @@;                                '
        ,L3=' &_l cards4;                                                           '
        ,L4=' &_l 1 1100 2 262 3 92 4 612 5 23 6 52                                 '
        ,L5=' &_l ;;;;                                                              '
        ,L6=' &_l run;                                                              '
        ,L7=' &_l data states1; /* Create map data set STATES1 by adding   */       '
        ,L8=' &_l set maps.us; /* REGION to the US map data set */                  '
        ,L9=' &_l select;                                                           '
       ,L10=' &_l  when (state=53 or state=41 or state=16 or state=32 or state=06   '
       ,L11=' &_l        or state=02 or state=15) region=1; /* west */              '
       ,L12=' &_l  when (state=30 or state=46 or state=38 or state=31               '
       ,L13=' &_l        or state=20 or state=56 or state=49                        '
       ,L14=' &_l        or state=08) region=2;  /* north central */                '
       ,L15=' &_l  when (state=04 or state=35 or state=48                           '
       ,L16=' &_l        or state=40) region=3;  /* midwest */                      '
       ,L17=' &_l  when (state=27 or state=19 or state=29 or state=55               '
       ,L18=' &_l        or state=17 or state=26 or state=18                        '
       ,L19=' &_l        or state=39) region=4;  /* southwest */                    '
       ,L20=' &_l  when (state=05 or state=22 or state=01 or state=21 or state=47   '
       ,L21=' &_l        or state=28 or state=13 or state=12 or state=45 or state=37'
       ,L22=' &_l        or state=51 or state=54) region=5;  /* south */            '
       ,L23=' &_l  otherwise region=6; /* new england */                            '
       ,L24=' &_l end;run;                                                          '
       ,L25=' &_l proc sort data=states1;by region state;run;                       '
       ,L26=' &_l proc gremove data=states1 out=map;by region;                      '
       ,L27=' &_l   id state; /* Remove the state boundaries */run;                 '
       ,L28=' &_l title1 "Regional block map with PROC GMAP";                       '
       ,L29=' &_l proc gmap data=sites map=map all;id region;                       '
       ,L30=' &_l   block sites / area=1 discrete;run;quit;                         '
       );

data states1; /* Create map data set STATES1 by adding   */
set maps.us; /* REGION to the US map data set */
select;
 when (state=53 or state=41 or state=16 or state=32 or state=06
       or state=02 or state=15) region=1; /* west */
 when (state=30 or state=46 or state=38 or state=31
       or state=20 or state=56 or state=49
       or state=08) region=2;  /* north central */
 when (state=04 or state=35 or state=48
       or state=40) region=3;  /* midwest */
 when (state=27 or state=19 or state=29 or state=55
       or state=17 or state=26 or state=18
       or state=39) region=4;  /* southwest */
 when (state=05 or state=22 or state=01 or state=21 or state=47
       or state=28 or state=13 or state=12 or state=45 or state=37
       or state=51 or state=54) region=5;  /* south */
 otherwise region=6; /* new england */
end;run;
proc sort data=states1;by region state;run;
proc gremove data=states1 out=map;by region;
  id state; /* Remove the state boundaries */run;
title1 'Regional block map with PROC GMAP';
proc gmap data=sites map=map all;id region;
  block sites / area=1 discrete;run;quit;

%mend  sly180;

%macro sly190(dummy);

   %Tut_Sly
       (
        stop=32
        ,L2=' &_l data center;                                         '
        ,L3=' &_l    length function $ 8;                              '
        ,L4=' &_l    retain flag 0 xsys ysys "2" hsys "3" when "a";    '
        ,L5=' &_l    set maps.uscenter                                 '
        ,L6=' &_l        (where=(fipstate(state) ne "DC")              '
        ,L7=' &_l        drop=long lat);                               '
        ,L8=' &_l    *style = "Albany AMT/bold";                       '
        ,L9=' &_l    function="label";                                 '
       ,L10=' &_l    text=fipstate(state);                             '
       ,L11=' &_l    size=2.5;                                         '
       ,L12=' &_l    position="5";                                     '
       ,L13=' &_l    if ocean="Y" then                                 '
       ,L14=' &_l       do;                                            '
       ,L15=' &_l          position="6";                               '
       ,L16=' &_l          output;                                     '
       ,L17=' &_l          function="move";                            '
       ,L18=' &_l          flag=1;                                     '
       ,L19=' &_l       end;                                           '
       ,L20=' &_l    else if flag=1 then                               '
       ,L21=' &_l       do;                                            '
       ,L22=' &_l          function="draw";                            '
       ,L23=' &_l          size=.25;                                   '
       ,L24=' &_l          flag=0;                                     '
       ,L25=' &_l       end;                                           '
       ,L26=' &_l    output;                                           '
       ,L27=' &_l run;                                                 '
       ,L28=' &_l title "Positioning State Labels with MAPS.USCENTER"; '
       ,L29=' &_l pattern1 value=mempty color=blue repeat=50;          '
       ,L30=' &_l proc gmap data=maps.us map=maps.us;                  '
       ,L31=' &_l    id state;                                         '
       ,L32=' &_l    choro state / nolegend annotate=center;run;quit;  '
       );

data center;
   length function $ 8;
   retain flag 0 xsys ysys '2' hsys '3' when 'a';
   set maps.uscenter
       (where=(fipstate(state) ne 'DC')
       drop=long lat);
   style = "'Albany AMT/bold'";
   function='label';
   text=fipstate(state);
   size=2.5;
   position='5';
   if ocean='Y' then
      do;
         position='6';
         output;
         function='move';
         flag=1;
      end;
   else if flag=1 then
      do;
         function='draw';
         size=.25;
         flag=0;
      end;
   output;
run;
title 'Positioning State Labels with MAPS.USCENTER';
pattern1 value=mempty color=blue repeat=50;
proc gmap data=maps.us map=maps.us;
   id state;
   choro state / nolegend annotate=center;
run;quit;

%mend  sly190;

%macro org220(dummy);
  /*
    %let dpi=100;
    %let w=8in;
    %let h=4.5in;

    title;
    footnote;
    ods html close;
  */
    /*--Macro by Perry Watts--*/
    %macro RGBHex(rr,gg,bb);
      %sysfunc(compress(CX%sysfunc(putn(&rr,hex2.))
      %sysfunc(putn(&gg,hex2.))
      %sysfunc(putn(&bb,hex2.))))
    %mend RGBHex;

    /*--Mark all non-Sedans as "Other"--*/
    data Sedans;
      set sashelp.cars(keep=origin type mpg_city mpg_highway horsepower);
      if type ne 'Sedan' then type='Other';
      run;
    /*proc print;run;*/

    /*--Define Bar Pie template--*/
    proc template;
      define statgraph BarPie;
        dynamic _tsize _lsize;
        begingraph;
          entrytitle "Market Share for Sedans" / textattrs=(size=_tsize);

          /*--Define an attribute map to use specific colors by type--*/
          discreteattrmap name='origin' / ignorecase=true;
            value 'Sedan' / fillattrs=(color=%rgbhex(100, 150, 40));
            value 'Other' / fillattrs=(color=%rgbhex(180, 110, 50));
          enddiscreteattrmap;

           /*--Associate the Attribute Map to the TYPE variable--*/
          discreteattrvar attrvar=type var=type attrmap='origin';

          /*--Define a one row x two columns layout --*/
          layout lattice / columns=2 columnweights=(0.6 0.4) columngutter=20;

            /*--First cell has a Bar Chart--*/
            layout overlay / xaxisopts=(display=(tickvalues)) walldisplay=none
                             yaxisopts=(display=(tickvalues) linearopts=(tickvalueformat=percent.)
                             griddisplay=on offsetmax=0.2);
              barchart category=origin / name='a' barlabel=true stat=proportion
                       /*dataskin=pressed*/ group=type groupdisplay=cluster barlabelformat=percent6.1
                       baselineattrs=(thickness=0) barlabelattrs=(size=_lsize) grouporder=descending
                       /*filltype=gradient*/
              ;
              discretelegend 'a' / location=inside halign=center valign=top autoitemsize=true valueattrs=(size=_lsize);
            endlayout;

            /*--Second cell has a Pie Chart--*/
            layout region / pad=(bottom=30);
              piechart category=type /  /*dataskin=sheen*/ centerfirstslice=true start=270 stat=pct
                       datalabelattrs=(size=_lsize);;
            endlayout;
          endlayout;
        endgraph;
      end;
    run;

    proc sgrender data=Sedans template=BarPie;
      dynamic _tsize=16 _lsize=13;
    run;

%mend org220;


%macro sly200(dummy);

   %Tut_Sly2
       (
        stop=22
        ,L1=' &_l R scatter plots without IML                            '
        ,L2=' &_l options validvarname=upcase;                                        '
        ,L3=' &_l data "c:\temp\usadat.sas7bdat"(compress=no outrep=windows_32);      '
        ,L4=' &_l   set sashelp.us_data;                                              '
        ,L5=' &_l run;quit;                                                           '
        ,L6=' &_l * without IML;                                                      '
        ,L7=' &_l %utl_submit_r(%nrbquote(                                            '
        ,L8=' &_l library(ggplot2);                                                   '
        ,L9=' &_l library(sas7bdat);                                                  '
       ,L10=' &_l   usdat<-read.sas7bdat("c:\\temp\\usadat.sas7bdat");                '
       ,L11=' &_l   pdf(file = "c:\\temp\\usadat.pdf", width = 10, height = 7);       '
       ,L12=' &_l   ggplot(usdat, aes(x=POPULATION_2010/10^6,                         '
       ,L13=' &_l   y=POPULATION_2000/10^6, color=REGION)) +                          '
       ,L14=' &_l   geom_point() +                                                    '
       ,L15=' &_l   geom_line(stat = "smooth", method="lm") +                         '
       ,L16=' &_l   ggtitle("Population (in Millions) of US states in 2000 vs. 2010 by'
       ,L17=' &_l   US Region") +                                                     '
       ,L18=' &_l   xlab("2010 Population (in Millions)") +                           '
       ,L19=' &_l   ylab("2000 Population (in Millions)");                            '
       ,L20=' &_l   Sys.sleep(10);                                                    '
       ,L21=' &_l  dev.off();                                                         '
       ,L22=' &_l ));                                                                 '
       );

   %Tut_Sly2
       (
        stop=20
        ,L1=' &_l
        ,L2=' &_l proc iml;                                                          '
        ,L3=' &_l submit / R;                                                        '
        ,L4=' &_l endSubmit;                                                         '
        ,L5=' &_l call ExportDataSetToR("SASHELP.US_DATA", "US_DATA");               '
        ,L6=' &_l submit / R;                                                        '
        ,L7=' &_l library(ggplot2);                                                  '
        ,L8=' &_l pdf(file = "c:\\temp\\usadat.pdf", width = 10, height = 7);        '
        ,L9=' &_l ggplot(US_DATA, aes(x=POPULATION_2010/10^6,                        '
       ,L10=' &_l y=POPULATION_2000/10^6, color=REGION)) +                           '
       ,L11=' &_l geom_point() +                                                     '
       ,L12=' &_l geom_line(stat = "smooth", method="lm") +                          '
       ,L13=' &_l ggtitle("Population (in Millions) of US states in 2000 vs. 2010 by '
       ,L14=' &_l US Region") +                                                      '
       ,L15=' &_l xlab("2010 Population (in Millions)") +                            '
       ,L16=' &_l ylab("2000 Population (in Millions)");                             '
       ,L17=' &_l Sys.sleep(10);                                                     '
       ,L18=' &_l dev.off();                                                         '
       ,L19=' &_l endSubmit;                                                         '
       ,L20=' &_l quit;                                                              '
       );

options validvarname=upcase;
data "c:\temp\usadat.sas7bdat"(compress=no outrep=windows_32);
  set sashelp.us_data;
run;quit;
* without IML;
%utl_submit_r(%nrbquote(
library(ggplot2);
library(sas7bdat);
  usdat<-read.sas7bdat('c:\\temp\\usadat.sas7bdat');
  pdf(file = 'c:\\temp\\sly200_usadat.pdf', width = 10, height = 7);
  ggplot(usdat, aes(x=POPULATION_2010/10^6,
  y=POPULATION_2000/10^6, color=REGION)) +
  geom_point() +
  geom_line(stat = 'smooth', method='lm') +
  ggtitle('Population (in Millions) of US states in 2000 vs. 2010 by
  US Region') +
  xlab('2010 Population (in Millions)') +
  ylab('2000 Population (in Millions)');
  Sys.sleep(10);
 dev.off();
));

* with IML;
 proc iml;
 submit / R;
 endSubmit;
 call ExportDataSetToR("SASHELP.US_DATA", "US_DATA");
 submit / R;
 library(ggplot2);
 pdf(file = 'c:\\temp\\usadat.pdf', width = 10, height = 7);
 ggplot(US_DATA, aes(x=POPULATION_2010/10^6,
 y=POPULATION_2000/10^6, color=REGION)) +
 geom_point() +
 geom_line(stat = 'smooth', method='lm') +
 ggtitle("Population (in Millions) of US states in 2000 vs. 2010 by
 US Region") +
 xlab("2010 Population (in Millions)") +
 ylab("2000 Population (in Millions)");
 Sys.sleep(10);
 dev.off();
 endSubmit;
 quit;


%mend  sly200;

data one;
   input trt_group time subject results @@;
datalines;
1 2 100 20 1 4 100 30 1 6 100 35 1 8 100 50
1 2 200 40 1 4 200 25 1 6 200 40 1 8 200 30
1 2 300 25 1 4 300 40 1 6 300 45 1 8 300 55
2 2 400 15 2 4 400 35 2 6 400 50 2 8 400 45
2 2 500 35 2 4 500 35 2 6 500 20 2 8 500 35
;
run;

%macro sly210(dummy);

   %Tut_Sly2
       (
        stop=18
        ,L1=' &_l Spaghetti Plots   SYL210.sas           '
        ,L2=' &_l data one;                                    '
        ,L3=' &_l    input trt_group time subject results @@;  '
        ,L4=' &_l datalines;                                   '
        ,L5=' &_l 1 2 100 20 1 4 100 30 1 6 100 35 1 8 100 50  '
        ,L6=' &_l 1 2 200 40 1 4 200 25 1 6 200 40 1 8 200 30  '
        ,L7=' &_l 1 2 300 25 1 4 300 40 1 6 300 45 1 8 300 55  '
        ,L8=' &_l 2 2 400 15 2 4 400 35 2 6 400 50 2 8 400 45  '
        ,L9=' &_l 2 2 500 35 2 4 500 35 2 6 500 20 2 8 500 35  '
       ,L11=' &_l run;                                        '
       ,L12=' &_l title "Spaghetti Plots";                   '
       ,L13=' &_l proc sgplot data=one;                      '
       ,L14=' &_l     title "Study Results by Treatment Group'
       ,L15=' &_l     series x=time y=results/ group=subject '
       ,L16=' &_l     grouplc=trt_group name="grouping";     '
       ,L17=' &_l     keylegend "grouping" / type=linecolor; '
       ,L18=' &_l  run;                                      '
       );

/*
*/

title "Spaghetti Plots";
proc sgplot data=one;
   title 'Study Results by Treatment Group';
   series x=time y=results/ group=subject
   grouplc=trt_group name='grouping';
   keylegend 'grouping' / type=linecolor;
run;

%mend  sly210;

%macro sly220(dummy);

   %Tut_Sly2
       (
        stop=31
        ,L1=' &_l SAS Template Pie Chart and Barchart together -see SLY220                  '
        ,L3=' &_l data Sedans;                                                              '
        ,L4=' &_l set sashelp.cars(keep=origin type mpg_city mpg_highway horsepower);       '
        ,L5=' &_l if type ne "Sedan" then type="Other";run;                                 '
        ,L6=' &_l proc template;                                                            '
        ,L7=' &_l define statgraph BarPie;                                                  '
        ,L8=' &_l dynamic _tsize _lsize;                                                    '
        ,L9=' &_l begingraph;                                                               '
       ,L10=' &_l entrytitle "Market Share for Sedans" / textattrs=(size=_tsize);           '
       ,L11=' &_l discreteattrmap name="origin" / ignorecase=true;                          '
       ,L12=' &_l value "Sedan" / fillattrs=(color=CX649628);                               '
       ,L13=' &_l value "Other" / fillattrs=(color=CXB46E32);                               '
       ,L14=' &_l enddiscreteattrmap;                                                       '
       ,L15=' &_l discreteattrvar attrvar=type var=type attrmap="origin";                   '
       ,L16=' &_l layout lattice / columns=2 columnweights=(0.6 0.4) columngutter=20;       '
       ,L17=' &_l layout overlay / xaxisopts=(display=(tickvalues)) walldisplay=none        '
       ,L18=' &_l yaxisopts=(display=(tickvalues) linearopts=(tickvalueformat=percent.)     '
       ,L19=' &_l griddisplay=on offsetmax=0.2);                                            '
       ,L20=' &_l barchart category=origin / name="a" barlabel=true stat=proportion         '
       ,L21=' &_l group=type groupdisplay=cluster barlabelformat=percent6.1 baselineattrs=  '
       ,L22=' &_l (thickness=0) barlabelattrs=(size=_lsize) grouporder=descending ;         '
       ,L23=' &_l discretelegend "a" / location=inside halign=center valign=top             '
       ,L24=' &_l autoitemsize=true valueattrs=(size=_lsize);endlayout;                     '
       ,L25=' &_l layout region / pad=(bottom=30);                                          '
       ,L26=' &_l piechart category=type / centerfirstslice=true start=270                  '
       ,L27=' &_l stat=pct datalabelattrs=(size=_lsize);;endlayout;endlayout;endgraph;end;  '
       ,L28=' &_l run;                                                                      '
       ,L29=' &_l proc sgrender data=Sedans template=BarPie;                                '
       ,L30=' &_l dynamic _tsize=16 _lsize=13;                                              '
       ,L31=' &_l run;quit;                                                                 '
       );

data Sedans;
set sashelp.cars(keep=origin type mpg_city mpg_highway horsepower);
if type ne 'Sedan' then type='Other';run;
proc template;
define statgraph BarPie;
dynamic _tsize _lsize;
begingraph;
entrytitle "Market Share for Sedans" / textattrs=(size=_tsize);
discreteattrmap name='origin' / ignorecase=true;
value 'Sedan' / fillattrs=(color=CX649628);
value 'Other' / fillattrs=(color=CXB46E32);
enddiscreteattrmap;
discreteattrvar attrvar=type var=type attrmap='origin';
layout lattice / columns=2 columnweights=(0.6 0.4) columngutter=20;
layout overlay / xaxisopts=(display=(tickvalues)) walldisplay=none
yaxisopts=(display=(tickvalues) linearopts=(tickvalueformat=percent.)
griddisplay=on offsetmax=0.2);
barchart category=origin / name='a' barlabel=true stat=proportion
group=type groupdisplay=cluster barlabelformat=percent6.1 baselineattrs=
(thickness=0) barlabelattrs=(size=_lsize) grouporder=descending ;
discretelegend 'a' / location=inside halign=center valign=top
autoitemsize=true valueattrs=(size=_lsize);endlayout;
layout region / pad=(bottom=30);
piechart category=type / centerfirstslice=true start=270
stat=pct datalabelattrs=(size=_lsize);;endlayout;endlayout;endgraph;end;
run;quit;
proc sgrender data=Sedans template=BarPie;
dynamic _tsize=16 _lsize=13;
run;quit;

%mend sly220;

data labs(rename=( aph=ALKPHOS visit=StudyWeek));
length treatment $8;input visit $ treatment $ sgot aph @@;
if treatment="P" then treatment="Placebo";else treatment="Aspirin";
datalines;
BASE P .  108.9 W2 P 10.2 83.7 W4 P 16.1 76.4
W6 P 17.6 86.1 W8 P 11.7 67.4 W10 P 14.7 68.2
W12 P 13.2 73.1 W14 P 12.5 74.7 W16 P 12.5 76.4
BASE A 12.5 66.6 W2 A 17.3 57.9 W4 A 17.9 68.8
W6 A 26.9 98.7 W8 A 25.9 98.2 W10 A 27.2 100.1
W12 A 29.9 104.2 W14 A 26.9 115.9 W16 A 33.3 118.6
;
run;

%macro sly230(dummy);

   %Tut_Sly2
       (
        stop=32
        ,L1=' &_l Response by Week for SQOG and Alkaline Phosphate SLY230.sas            '
        ,L3=' &_l data labs(rename=( aph=ALKPHOS visit=StudyWeek));                      '
        ,L4=' &_l length treatment $8;input visit $ treatment $ sgot aph @@;             '
        ,L5=' &_l if treatment="P" then treatment="Placebo";else treatment="Aspirin";    '
        ,L6=' &_l datalines;                                                             '
        ,L7=' &_l BASE P .  108.9 W2 P 10.2 83.7 W4 P 16.1 76.4                          '
        ,L8=' &_l W6 P 17.6 86.1 W8 P 11.7 67.4 W10 P 14.7 68.2                          '
        ,L9=' &_l W12 P 13.2 73.1 W14 P 12.5 74.7 W16 P 12.5 76.4                        '
       ,L10=' &_l BASE A 12.5 66.6 W2 A 17.3 57.9 W4 A 17.9 68.8                         '
       ,L11=' &_l W6 A 26.9 98.7 W8 A 25.9 98.2 W10 A 27.2 100.1                         '
       ,L12=' &_l W12 A 29.9 104.2 W14 A 26.9 115.9 W16 A 33.3 118.6                     '
       ,L13=' &_l ;run;                                                                  '
       ,L14=' &_l proc template;                                                         '
       ,L15=' &_l define statgraph panel;                                                '
       ,L16=' &_l begingraph;                                                            '
       ,L17=' &_l entrytitle "Lab Values by Study Week";                                 '
       ,L18=' &_l layout gridded / rowgutter=5;                                          '
       ,L19=' &_l layout datapanel classvars=(treatment) / rowaxisopts=(griddisplay=on)  '
       ,L20=' &_l columnaxisopts=(tickvalueattrs=(size=7) griddisplay=on)                '
       ,L21=' &_l columns=1 headerLabelDisplay=Value cellheightmin=50;                   '
       ,L22=' &_l layout prototype /  cycleattrs=true;                                   '
       ,L23=' &_l SeriesPlot X=studyweek Y=sgot / primary=true display=(markers)         '
       ,L24=' &_l markerattrs=(size=9px symbol=circlefilled)                             '
       ,L25=' &_l lineattrs=(thickness=2px) NAME="s1";                                   '
       ,L26=' &_l SeriesPlot X=studyweek Y=ALKPHOS / yaxis=y2 display=(markers)          '
       ,L27=' &_l markerattrs=(size=9px symbol=circlefilled)                             '
       ,L28=' &_l lineattrs=(thickness=2px) NAME="s2";endlayout;endlayout;               '
       ,L29=' &_l DiscreteLegend "s1" "s2" /;                                            '
       ,L30=' &_l endlayout;endgraph;end;run;                                            '
       ,L31=' &_l proc sgrender data=labs template="panel";run;                          '
       ,L32=' &_l run;quit;                                                                 '
       );

/*
*/
proc template;
define statgraph panel;
begingraph;
entrytitle "Lab Values by Study Week";
layout gridded / rowgutter=5;
layout datapanel classvars=(treatment) / rowaxisopts=(griddisplay=on)
columnaxisopts=(tickvalueattrs=(size=7) griddisplay=on)
columns=1 headerLabelDisplay=Value cellheightmin=50;
layout prototype /  cycleattrs=true;
SeriesPlot X=studyweek Y=sgot / primary=true display=(markers)
markerattrs=(size=9px symbol=circlefilled)
lineattrs=(thickness=2px) NAME="s1";
SeriesPlot X=studyweek Y=ALKPHOS / yaxis=y2 display=(markers)
markerattrs=(size=9px symbol=circlefilled)
lineattrs=(thickness=2px) NAME="s2";endlayout;endlayout;
DiscreteLegend "s1" "s2" /;
endlayout;endgraph;end;run;
proc sgrender data=labs template="panel";run;quit;

%mend sly230;

data ae0;
   retain aestdateMin;
   retain aeendateMax;
   attrib aestdate informat=yymmdd10. format=date7.;
   attrib aeendate informat=yymmdd10. format=date7.;
   format aestdateMin aeendateMax date7.;
   drop aestdateMin aeendateMax;
   input aeseq aedecod $ 5-39 aesev $ aestdate aeendate;

   aestdateMin=min(aestdate, aestdateMin);
   aeendateMax=max(aeendate, aeendateMax);
   call symputx('mindate', aestdateMin);
   call symputx('maxdate', aeendateMax);
   y=aeseq;
   if aedecod=" " then y=-9;

datalines;
.                                       MILD      2013-03-06  2013-03-06  Legend
.                                       MODERATE  2013-03-06  2013-03-06  Legend
.                                       SEVERE    2013-03-06  2013-03-06  Legend
1   DIZZINESS                           MODERATE  2013-03-06  2013-03-07
2   COUGH                               MILD      2013-03-20  .
3   APPLICATION SITE DERMATITIS         MILD      2013-03-26  2013-06-18
4   DIZZINESS                           MILD      2013-03-27  2013-03-27
5   ELECTROCARDIOGRAM T WAVE INVERSION  MILD      2013-03-30  .
6   DIZZINESS                           MILD      2013-04-01  2013-04-11
8   APPLICATION SITE DERMATITIS         MODERATE  2013-03-26  2013-06-18
9   HEADACHE                            MILD      2013-05-17  2013-05-18
11  PRURITUS                            MODERATE  2013-05-27  2013-06-18
;
run;

data attrmap;
  retain id 'Severity';
  length value $9 fillcolor $ 15;
  input value fillcolor;
  datalines;
MILD      cx00af00
MODERATE  cxcfaf00
SEVERE    cxaf0000
;
run;

%macro sly240(dummy);

   %Tut_Sly2
       (
        stop=15
        ,L1=' &_l Adverse action patient profile see attached SLY240.sas for datand code       '
        ,L3=' &_l title "Adverse Events for Patient Id = xx-xxx-xxxx";                         '
        ,L4=' &_l proc sgplot data=ae2  nocycleattrs dattrmap=attrmap;                         '
        ,L5=' &_l highlow y=aeseq low=stday high=enday / group=aesev lowlabel=aedecod type=bar '
        ,L6=' &_l barwidth=1 lineattrs=(color=black) lowcap=lcap highcap=hcap                  '
        ,L7=' &_l attrid=Severity labelattrs=(size=10 weight=bold color=cx4f4f4f)              '
        ,L8=' &_l lineattrs=(thickness=2) name="sev";                                          '
        ,L9=' &_l scatter x=aestdate y=aeseq /  markerattrs=(size=0) x2axis;                   '
       ,L10=' &_l refline 0 / axis=x lineattrs=(thickness=1 color=black);                      '
       ,L11=' &_l yaxis display=(nolabel noticks novalues) type=discrete;                      '
       ,L12=' &_l xaxis grid label="Study Days" values=(&minday10 to &maxday by 2);            '
       ,L13=' &_l x2axis notimesplit display=(nolabel) values=(&mindate10 to &maxdate);        '
       ,L14=' &_l keylegend "sev"/ title="Severity :";                                         '
       ,L15=' &_l run;quit;                                                                    '
       );


/*--Evaluate min and max day and dates--*/
data _null_;
  set ae0;
  minday=0;
  maxday= &maxdate - &mindate;
  minday10 = -10;
  mindate10=&mindate - 10;
  call symputx('minday', minday);
  call symputx('maxday', maxday);
  call symputx('minday10', minday10);
  call symputx('mindate10', mindate10);
  run;

/*--Compute start and end date and bar caps based on event start, end--*/
data ae2;
  set ae0;

  aestdy= aestdate-&mindate+0;
  aeendy= aeendate-&mindate+0;
  stday=aestdy;
  enday=aeendy;

  if aestdy=. then do;
    stday=&minday;
      lcap='ARROW';
  end;
  if aeendy=. then do;
    enday=&maxday;
    hcap='ARROW';
  end;

  xs=0;
  run;



title "Adverse Events for Patient Id = xx-xxx-xxxx";
proc sgplot data=ae2  nocycleattrs dattrmap=attrmap;
highlow y=aeseq low=stday high=enday / group=aesev lowlabel=aedecod type=bar
barwidth=1 lineattrs=(color=black) lowcap=lcap highcap=hcap
attrid=Severity labelattrs=(size=10 weight=bold color=cx4f4f4f)
lineattrs=(thickness=2) name='sev';
scatter x=aestdate y=aeseq /  markerattrs=(size=0) x2axis;
refline 0 / axis=x lineattrs=(thickness=1 color=black);
yaxis display=(nolabel noticks novalues) type=discrete;
xaxis grid label='Study Days' values=(&minday10 to &maxday by 2);
x2axis notimesplit display=(nolabel) values=(&mindate10 to &maxdate);
keylegend 'sev'/ title='Severity :';
run;

%mend sly240;


data LFT;
input Test $ a b @@;
cards;
ALAT      1.05198    0.97755  ASAT      0.78177    0.59554    ALKPH     0.20475    0.20589
BILTOT    0.12868    0.10760  ALAT      1.00211    1.19132    ASAT      1.07368    0.85466
ALKPH     0.69033    0.56213  BILTOT    0.38943    0.50285    ALAT      0.63396    0.53781
ASAT      0.05348    0.14887  ALKPH     0.75340    0.07973    BILTOT    0.87345    0.44291
ALAT      0.70381    0.81970  ASAT      1.03230    0.83068    ALKPH     0.42431    1.05635
BILTOT    0.14320    0.54282  ALAT      0.23767    0.62809    ASAT      1.90154    1.76075
ALKPH     0.41850    0.28345  BILTOT    0.54899    0.32524    ALAT      0.70693    0.89745
ASAT      0.30255    0.47380  ALKPH     0.13230    0.28027    BILTOT    0.81690    0.14692
ALAT      0.12827    0.37964  ASAT      0.80481    0.03603    ALKPH     0.18448    0.53166
BILTOT    1.19420    0.35609  ALAT      0.82422    0.85656    ASAT      0.03430    1.25747
ALKPH     0.21351    0.17765  BILTOT    0.32556    0.49431    ALAT      1.06820    0.28720
ASAT      0.95546    1.11008  ALKPH     0.03092    1.04798    BILTOT    0.57001    0.03822
ALAT      0.23055    0.77542  ASAT      0.10612    1.29305    ALKPH     0.03577    0.10963
BILTOT    0.79160    0.28032  ALAT      0.78603    0.45259    ASAT      0.24872    0.96720
ALKPH     0.50077    0.55558  BILTOT    0.38930    0.03795    ALAT      0.54711    2.20000
ASAT      2.11348    0.77847  ALKPH     0.31640    0.04882    BILTOT    0.12872    0.48268
ALAT      0.78600    0.46686  ASAT      0.24883    0.49811    ALKPH     0.03704    0.25468
BILTOT    0.12923    0.17796  ALAT      0.48393    0.45078    ASAT      1.56288    1.35533
ALKPH     0.43352    0.66135  BILTOT    1.06012    0.85799    ALAT      0.46068    0.25030
ASAT      1.56448    0.52508  ALKPH     1.00876    0.57161    BILTOT    0.44817    0.19389
ALAT      1.06331    0.00000  ASAT      1.38521    0.19008    ALKPH     0.35466    0.61868
BILTOT    1.24180    0.04822  ALAT      0.48065    0.40992    ASAT      1.05618    0.78853
ALKPH     0.19355    0.66358  BILTOT    0.73715    0.09852    ALAT      1.21493    0.64416
ASAT      0.70453    2.51609  ALKPH     0.26489    0.33604    BILTOT    0.72164    0.33025
ALAT      1.04961    0.97218  ASAT      0.32183    1.35889    ALKPH     0.03934    0.41986
BILTOT    0.20788    0.12524  ALAT      0.11145    0.80421    ASAT      0.29223    0.94908
ALKPH     0.00864    0.05148  BILTOT    0.08176    0.00000    ALAT      0.54881    0.48289
ASAT      0.23306    0.33808  ALKPH     0.58716    1.01387    BILTOT    0.73317    0.01936
ALAT      0.70290    0.42668  ASAT      0.60399    1.09609    ALKPH     0.27376    0.00000
BILTOT    0.17014    0.16435  ALAT      0.90385    1.06340    ASAT      0.00000    1.04065
ALKPH     0.19284    0.27968  BILTOT    0.02284    0.10508    ALAT      0.77662    0.27623
ASAT      0.79289    0.78862  ALKPH     0.24560    0.33058    BILTOT    0.44045    0.52485
ALAT      1.15780    0.11335  ASAT      0.96932    0.84560    ALKPH     0.07827    0.29355
BILTOT    0.13112    1.50000  ALAT      0.50103    0.61329    ASAT      1.11541    0.08967
ALKPH     0.74840    0.43341  BILTOT    0.47621    0.85664    ALAT      0.36086    0.50746
ASAT      2.03550    1.30451  ALKPH     0.56854    0.43620    BILTOT    0.09094    1.26472
ALAT      0.95770    0.63754  ASAT      2.03683    1.83280    ALKPH     1.40042    0.12018
BILTOT    0.22545    0.43027  ALAT      0.32817    0.50025    ASAT      2.60000    0.24234
ALKPH     0.13532    0.21778  BILTOT    0.55075    0.48568    ALAT      0.26668    0.45166
ASAT      1.06058    0.83500  ALKPH     0.22807    0.62830    BILTOT    0.46843    0.16910
ALAT      0.28617    0.55219  ASAT      0.30707    0.52809    ALKPH     0.55278    0.04707
BILTOT    0.06412    0.37335  ALAT      0.28907    0.14920    ASAT      0.10258    0.75400
ALKPH     0.00730    0.10016  BILTOT    0.47780    0.23071    ALAT      1.16461    0.92092
ASAT      0.80571    0.22561  ALKPH     0.17983    0.62150    BILTOT    0.53452    0.77714
ALAT      0.05326    0.51731  ASAT      1.09366    1.67147    ALKPH     0.56498    0.30936
BILTOT    0.07047    0.34371  ALAT      1.05258    0.05138    ASAT      0.15650    0.38367
ALKPH     0.09618    0.50434  BILTOT    0.59625    1.44028    ALAT      0.10204    0.33631
ASAT      0.95273    0.15079  ALKPH     0.70621    0.06809    BILTOT    0.37559    0.92632
ALAT      0.76055    0.72907  ASAT      1.36379    0.12393    ALKPH     0.03081    2.00000
BILTOT    0.92652    0.19981  ALAT      0.95481    0.32130    ASAT      0.75320    2.50581
ALKPH     0.23371    1.17739  BILTOT    0.30880    0.22500    ALAT      1.96947    0.05734
ASAT      2.58784    0.21524  ALKPH     0.76119    0.48148    BILTOT    0.25826    0.52166
ALAT      1.03068    0.14734  ASAT      2.44450    0.48403    ALKPH     0.34170    0.34804
BILTOT    0.17433    0.35974  ASAT      3.87010    1.10330    ASAT      3.67890    1.00120
;
run;

%macro sly250(dummy);


   %Tut_Sly2
       (
        stop=28
        ,L1=' &_l Maximum Liver Function Test Values by Treatment SLY250.sas '
        ,L2=' &_l proc template;                                                             '
        ,L3=' &_l define statgraph LFT_MaxByTrt;                                             '
        ,L4=' &_l dynamic _footnote _thick;                                                  '
        ,L5=' &_l begingraph;                                                                '
        ,L6=' &_l entrytitle "Maximum Liver Function Test Values by Treatment";              '
        ,L7=' &_l layout overlay / yaxisopts=(linearopts=(viewmin=0 viewmax=4)               '
        ,L8=' &_l label="Maximum (/ULN)")                                                    '
        ,L9=' &_l y2axisopts=(linearopts=(viewmin=0 viewmax=4) display=(ticks))              '
       ,L10=' &_l xaxisopts=(display=(line ticks tickvalues));                               '
       ,L11=' &_l boxplot x=Test y=value / display=(mean median outliers caps) group=drug    '
       ,L12=' &_l groupdisplay=cluster name="a" outlineattrs=(thickness=_thick)              '
       ,L13=' &_l medianattrs=(thickness=_thick)  whiskerattrs=(thickness=_thick);           '
       ,L14=' &_l referenceline y=1 / lineattrs=(pattern=dot);                               '
       ,L15=' &_l dropline x="BILTOT" y=1.5 / dropto=Y yaxis=y2                              '
       ,L16=' &_l discreteoffset=-.4 lineattrs=(pattern=shortdash);                          '
       ,L17=' &_l dropline x="ALKPH" y=2.0 / dropto=Y yaxis=y                                '
       ,L18=' &_l discreteoffset=.4 lineattrs=(pattern=shortdash);                           '
       ,L19=' &_l discretelegend "a" "b" / location=inside valign=top halign=right across=1; '
       ,L20=' &_l endlayout;                                                                 '
       ,L21=' &_l if (exists(_footnote) eq 1)                                                '
       ,L22=' &_l entryfootnote halign=left                                                  '
       ,L23=' &_l "For ALAT, ASAT and ALKPH, the Clinical Concern Level is 2 ULN;";          '
       ,L24=' &_l entryfootnote halign=left                                                  '
       ,L25=' &_l "For BILTOT, the CCL is 1.5 ULN: where ULN is Upper Level  Normal Range";  '
       ,L26=' &_l endif;endgraph;end;run;                                                    '
       ,L27=' &_l proc sgrender data=LFT_Group template=LFT_MaxByTrt;                        '
       ,L28=' &_l dynamic _footnote="y" _thick=2;run;                                        '
       );

proc format;
  value $drug
    'A' = 'Drug A (N=209)'
    'B' = 'Drug B (N=405)';
run;

data LFT_Group;
  keep Test Drug Value;
  format Drug $drug.;
  set lft;
  Drug='A'; Value=a; output;
  Drug='B'; Value=b; output;
 run;

/*--Create template for graph--*/
proc template;
define statgraph LFT_MaxByTrt;
dynamic _footnote _thick;
begingraph;
entrytitle 'Maximum Liver Function Test Values by Treatment';
layout overlay / yaxisopts=(linearopts=(viewmin=0 viewmax=4)
label='Maximum (/ULN)')
y2axisopts=(linearopts=(viewmin=0 viewmax=4) display=(ticks))
xaxisopts=(display=(line ticks tickvalues));
boxplot x=Test y=value / display=(mean median outliers caps) group=drug
groupdisplay=cluster name='a' outlineattrs=(thickness=_thick)
medianattrs=(thickness=_thick)  whiskerattrs=(thickness=_thick);
referenceline y=1 / lineattrs=(pattern=dot);
dropline x='BILTOT' y=1.5 / dropto=Y yaxis=y2
discreteoffset=-.4 lineattrs=(pattern=shortdash);
dropline x='ALKPH' y=2.0 / dropto=Y yaxis=y
discreteoffset=.4 lineattrs=(pattern=shortdash);
discretelegend 'a' 'b' / location=inside valign=top halign=right across=1;
endlayout;
if (exists(_footnote) eq 1)
entryfootnote halign=left
"For ALAT, ASAT and ALKPH, the Clinical Concern Level is 2 ULN;";
entryfootnote halign=left
"For BILTOT, the CCL is 1.5 ULN: where ULN is Upper Level  Normal Range";
endif;endgraph;end;run;
proc sgrender data=LFT_Group template=LFT_MaxByTrt;
dynamic _footnote='y' _thick=2;run;

%mend sly250;

data labs_data (keep=drug alat biltot alkph asat
     palat pbiltot palkph pasat visitnum);
   label alat="ALAT (/ULN)";
   label biltot="BILTOT (/ULN)";
   label alkph="ALKPH (/ULN)";
   label asat="ASAT (/ULN)";
   visitnum=1;
   do i=1 to 100;
      palat = min (4, 2.5 * (abs(rannor(123))) / 3.0);
      pbiltot = min (4, 2.5 * (abs(rannor(123))) / 3.0);
      palkph = min (4, 2.5 * (abs(rannor(123))) / 3.0);
      pasat = min (4, 2.5 * (abs(rannor(123))) / 3.0);
      alat = min (4, 2.5 * (abs(rannor(345))) / 3.0);
      biltot = min (4, 2.5 * (abs(rannor(345))) / 3.0);
      alkph = min (4, 2.5 * (abs(rannor(345))) / 3.0);
      asat = min (4, 2.5 * (abs(rannor(345))) / 3.0);
      j =  rannor(345);
      if j > 0 then drug = "A";
      else drug="B";
      output;
   end;
   visitnum=2;
   do i=1 to 100;
      palat = min (4, 2.5 * (abs(rannor(789))) / 3.0);
      pbiltot = min (4, 2.5 * (abs(rannor(789))) / 3.0);
      palkph = min (4, 2.5 * (abs(rannor(789))) / 3.0);
      pasat = min (4, 2.5 * (abs(rannor(789))) / 3.0);
      alat = min (4, 2.5 * (abs(rannor(567))) / 3.5);
      biltot = min (4, 2.5 * (abs(rannor(567))) / 3.5);
      alkph = min (4, 2.5 * (abs(rannor(567))) / 3.5);
      asat = min (4, 2.5 * (abs(rannor(567))) / 3.5);
      j =  rannor(567);
      if j > 0 then drug = "A";
      else drug="B";
      output;
   end;
   visitnum=3;
   do i=1 to 100;
      palat = min (4, 2.5 * (abs(rannor(321))) / 3.0);
      pbiltot = min (4, 2.5 * (abs(rannor(321))) / 3.0);
      palkph = min (4, 2.5 * (abs(rannor(321))) / 3.0);
      pasat = min (4, 2.5 * (abs(rannor(321))) / 3.0);
      alat = min (4, 2.5 * (abs(rannor(975))) / 2.5);
      biltot = min (4, 2.5 * (abs(rannor(975))) / 2.5);
      alkph = min (4, 2.5 * (abs(rannor(975))) / 2.5);
      asat = min (4, 2.5 * (abs(rannor(975))) / 2.5);
      j =  rannor(975);
      if j > 0 then drug = "A";
      else drug="B";
      output;
   end;
run;


%macro sly260(dummy);

   %Tut_Sly2
       (
        stop=31
        ,L1=' &_l Safety Panel, Baseline vs. Study  code SLY260'
        ,L3=' &_l proc template;                                                '
        ,L4=' &_l define style listingSmallFont;                                '
        ,L5=' &_l parent = styles.listing;                                      '
        ,L6=' &_l style GraphFonts from GraphFonts                              '
        ,L7=' &_l "Fonts used in graph styles" /                                '
        ,L8=' &_l "GraphUnicodeFont" = ("",9pt)                                 '
        ,L9=' &_l "GraphValueFont" = (", ",8pt)                                 '
       ,L10=' &_l "GraphLabelFont" = (", ",9pt)                                 '
       ,L11=' &_l "GraphFootnoteFont" = (", ",8pt)                              '
       ,L12=' &_l "GraphTitleFont" = (", ",11pt,bold);                          '
       ,L13=' &_l end;run;                                                      '
       ,L14=' &_l title "LFT Safety Panel, Baseline vs. Study";                 '
       ,L15=' &_l title2 " ";                                                   '
       ,L16=' &_l footnote1 " ";                                                '
       ,L17=' &_l footnote2 j=l italic height=8pt                               '
       ,L18=' &_l "* For ALAT, ASAT and Alkaline Phosphatase,"                  '
       ,L19=' &_l " the Clinical Concern Level is 2 ULN;";                      '
       ,L20=' &_l footnote3 j=l italic height=8pt                               '
       ,L21=' &_l " For Bilirubin Total, the CCL is 1.5 ULN: "                  '
       ,L22=' &_l "where ULN is the Upper Level of Normal";                     '
       ,L23=' &_l proc sgpanel data=labs;                                       '
       ,L24=' &_l panelby labtest visitnum / layout=lattice onepanel novarname; '
       ,L25=' &_l scatter x=pre y=result / group=drug markerattrs=(size=9);     '
       ,L26=' &_l refline 1 1.5 2 / axis=Y lineattrs=(pattern=dash);            '
       ,L27=' &_l refline 1 1.5 2 / axis=X lineattrs=(pattern=dash);            '
       ,L29=' &_l rowaxis integer min=0 max=4 label="Study (/ULN)";             '
       ,L30=' &_l colaxis integer min=0 max=4 label="Baseline (/ULN) *";        '
       ,L31=' &_l keylegend / title=" " noborder;run;                           '
       );

proc format;
   value wk
     1='1 Week'
     2='3 Months'
     3='6 Months';
   value lab
     1='ALAT'
     2='Bilirubin Total'
     3='Alk Phosphatase'
     4='ASAT';
   value $trt
     "A"="Drug A (n=240)"
     "B"="Drug B (n=195)";
run;

data labs (keep=visitnum drug labtest result pre);
   format visitnum wk. labtest lab. drug $trt.;
   set labs_data;
   pre=palat;
   labtest=1;
   result=alat;
   output;
   pre=pbiltot;
   labtest=2;
   result=biltot;
   output;
   pre=palkph;
   labtest=3;
   result=alkph;
   output;
   pre=pasat;
   labtest=4;
   result=asat;
   output;
run;

proc template;
define style listingSmallFont;
parent = styles.listing;
style GraphFonts from GraphFonts
"Fonts used in graph styles" /
'GraphUnicodeFont' = ("",9pt)
'GraphValueFont' = (", ",8pt)
'GraphLabelFont' = (", ",9pt)
'GraphFootnoteFont' = (", ",8pt)
'GraphTitleFont' = (", ",11pt,bold);
end;run;
title 'LFT Safety Panel, Baseline vs. Study';
title2 ' ';
footnote1 ' ';
footnote2 j=l italic height=8pt
"* For ALAT, ASAT and Alkaline Phosphatase,"
" the Clinical Concern Level is 2 ULN;";
footnote3 j=l italic height=8pt
" For Bilirubin Total, the CCL is 1.5 ULN: "
"where ULN is the Upper Level of Normal";
proc sgpanel data=labs;
panelby labtest visitnum / layout=lattice onepanel novarname;
scatter x=pre y=result / group=drug markerattrs=(size=9);
refline 1 1.5 2 / axis=Y lineattrs=(pattern=dash);
refline 1 1.5 2 / axis=X lineattrs=(pattern=dash);
rowaxis integer min=0 max=4 label='Study (/ULN)';
colaxis integer min=0 max=4 label='Baseline (/ULN) *';
keylegend / title=" " noborder;run;

%mend sly260;

%macro sly270(dummy);

   %Tut_Sly2
       (
        stop=31
        ,L1=' &_l Heart Related Deaths code SLY270.sas              '
        ,L3=' &_l proc format;                                      '
        ,L4=' &_l value agefmt                                      '
        ,L5=' &_l low-29 = "Under 30"                               '
        ,L6=' &_l 30-50  = "30 to 50 Years"                         '
        ,L7=' &_l 51-70  = "51 to 70 Years"                         '
        ,L8=' &_l 71-high = "Over 70";run;                          '
        ,L9=' &_l proc template;                                    '
       ,L10=' &_l define style barcolors ;                          '
       ,L11=' &_l parent=styles.htmlblue;                           '
       ,L12=' &_l style GraphData1 from GraphData1 /                '
       ,L13=' &_l color=cxffbbcc contrastcolor=black;               '
       ,L14=' &_l style GraphData2 from GraphData2 /                '
       ,L15=' &_l color=lightblue contrastcolor=black;              '
       ,L16=' &_l style GraphFonts from GraphFonts /                '
       ,L17=' &_l "GraphValueFont" = (,10pt)                        '
       ,L18=' &_l "GraphLabelFont" = (,12pt);                       '
       ,L19=' &_l end;run;                                          '
       ,L20=' &_l data heart;                                       '
       ,L21=' &_l set sashelp.heart;                                '
       ,L22=' &_l if deathcause in ("Other" "Unknown") then         '
       ,L23=' &_l deathcause="Other/Unknown";run;                   '
       ,L24=' &_l title "Heart Related Deaths";                     '
       ,L25=' &_l proc sgpanel data=heart;                          '
       ,L26=' &_l format ageatdeath agefmt.;                        '
       ,L27=' &_l panelby deathcause / novarname sparse;            '
       ,L29=' &_l vbar ageatdeath / group=sex groupdisplay=cluster  '
       ,L30=' &_l clusterwidth=0.8; rowaxis refticks=(values);      '
       ,L31=' &_l keylegend / title="" noborder;run;                '
       );

proc format;
value agefmt
low-29 = "Under 30"
30-50  = "30 to 50 Years"
51-70  = "51 to 70 Years"
71-high = "Over 70";run;
proc template;
define style barcolors ;
parent=styles.htmlblue;
style GraphData1 from GraphData1 /
color=cxffbbcc contrastcolor=black;
style GraphData2 from GraphData2 /
color=lightblue contrastcolor=black;
style GraphFonts from GraphFonts /
'GraphValueFont' = (,10pt)
'GraphLabelFont' = (,12pt);
end;run;
data heart;
set sashelp.heart;
if deathcause in ("Other" "Unknown") then
deathcause="Other/Unknown";run;
title 'Heart Related Deaths';
proc sgpanel data=heart;
format ageatdeath agefmt.;
panelby deathcause / novarname sparse;
vbar ageatdeath / group=sex groupdisplay=cluster
clusterwidth=0.8; rowaxis refticks=(values);
keylegend / title='' noborder;run;

%mend sly270;


%macro sly280(dummy);

   %Tut_Sly2
       (
        stop=24
        ,L1=' &_l Cholesterol by Sex and Age Group code SLY280.sas  '
        ,L3=' &_l proc format;                                          '
        ,L4=' &_l value age                                             '
        ,L5=' &_l 28-34 = "< 35"                                        '
        ,L6=' &_l 35-44 = "36-45"                                       '
        ,L7=' &_l 45-54 = "46-55"                                       '
        ,L8=' &_l 55-65 = "> 55";                                       '
        ,L9=' &_l run;                                                  '
       ,L10=' &_l proc template;                                        '
       ,L11=' &_l define style myBlock;                                 '
       ,L12=' &_l parent=styles.BlockPrint;                             '
       ,L13=' &_l style colors from colors                              '
       ,L14=' &_l "Colors for doc" /                                    '
       ,L15=' &_l "docbg" = cxaaaf9f;                                   '
       ,L16=' &_l end;                                                  '
       ,L17=' &_l run;                                                  '
       ,L18=' &_l ods listing close;                                    '
       ,L19=' &_l title "Cholesterol by Sex and Age Group";             '
       ,L20=' &_l proc sgpanel data=sashelp.heart;                      '
       ,L21=' &_l format ageatstart age.;                               '
       ,L22=' &_l panelby sex / columns=1 layout=rowlattice novarname;  '
       ,L23=' &_l hbox cholesterol / category=ageatstart boxwidth=0.7;  '
       ,L24=' &_l run;                                                  '
       );

proc format;
value age
28-34 = '< 35'
35-44 = '36-45'
45-54 = '46-55'
55-65 = '> 55';
run;
proc template;
define style myBlock;
parent=styles.BlockPrint;
style colors from colors
"Colors for doc" /
'docbg' = cxaaaf9f;
end;
run;
ods listing close;
title 'Cholesterol by Sex and Age Group';
proc sgpanel data=sashelp.heart;
format ageatstart age.;
panelby sex / columns=1 layout=rowlattice novarname;
hbox cholesterol / category=ageatstart boxwidth=0.7;
run;

%mend sly280;


%macro sly290;

   %Tut_Sly2
       (
        stop=28
        ,L1=' &_l SERIESPLOT Statement with different Y2AXIS sly290.sas             '
        ,L3=' &_l proc template;                                                    '
        ,L4=' &_l define statgraph plot;                                            '
        ,L5=' &_l begingraph;                                                       '
        ,L6=' &_l entrytitle "SERIESPLOT Statement with Y2AXIS" ;                   '
        ,L7=' &_l layout datapanel classvars=(sex) / columns=2 rows=1               '
        ,L8=' &_l headerlabelattrs=(color=red weight=bold)                          '
        ,L9=' &_l headeropaque=false; layout prototype;                             '
       ,L10=' &_l seriesplot x=age y=height / group=dose display=all name="height"  '
       ,L11=' &_l lineattrs=(color=cx5DAF5D)                                        '
       ,L12=' &_l markerattrs=(symbol=squarefilled color=cx5DAF5D);                 '
       ,L13=' &_l seriesplot x=age y=weight / group=dose                            '
       ,L14=' &_l yaxis=y2 display=all name="weight"                                '
       ,L15=' &_l lineattrs=(color=cx4B50AA pattern=2)                              '
       ,L16=' &_l markerattrs=(symbol=circlefilled color=cx4B50AA);                 '
       ,L17=' &_l endlayout;                                                        '
       ,L18=' &_l sidebar / align=bottom;                                           '
       ,L19=' &_l discretelegend "height" "weight" / ;                              '
       ,L20=' &_l endsidebar;endlayout;endgraph;end;                                '
       ,L21=' &_l define style noheaderborder;                                      '
       ,L22=' &_l parent = styles.default;                                          '
       ,L23=' &_l class graphborderlines / contrastcolor=white;                     '
       ,L24=' &_l class graphbackground / color=white ;                             '
       ,L25=' &_l end;run;                                                          '
       ,L26=' &_l proc sort data=sashelp.class out=class;                           '
       ,L27=' &_l by age;run;                                                       '
       ,L28=' &_l proc sgrender data=class template=plot;run;                       '
       );


proc template;
define statgraph plot;
begingraph;
entrytitle "SERIESPLOT Statement with Y2AXIS" ;
layout datapanel classvars=(sex) / columns=2 rows=1
headerlabelattrs=(color=red weight=bold)
headeropaque=false; layout prototype;
seriesplot x=age y=height / group=dose display=all name='height'
lineattrs=(color=cx5DAF5D)
markerattrs=(symbol=squarefilled color=cx5DAF5D);
seriesplot x=age y=weight / group=dose
yaxis=y2 display=all name='weight'
lineattrs=(color=cx4B50AA pattern=2)
markerattrs=(symbol=circlefilled color=cx4B50AA);
endlayout;
sidebar / align=bottom;
discretelegend 'height' 'weight' / ;
endsidebar;endlayout;endgraph;end;
define style noheaderborder;
parent = styles.default;
class graphborderlines / contrastcolor=white;
class graphbackground / color=white ;
end;run;
proc sort data=sashelp.class out=class;
by age;run;
proc sgrender data=class template=plot;run;

%mend sly290;

%macro sly300;

   %Tut_Sly2
       (
        stop=10
        ,L1=' &_l Blood Pressure Trends by Weight Status sly300.sas             '
        ,L3=' &_l title1 "Blood Pressure Trends by Weight Status";  '
        ,L4=' &_l title2 "in heart disease patients under 50";      '
        ,L5=' &_l proc sgscatter data=sashelp.heart;                '
        ,L6=' &_l where AgeCHDdiag lt 50 and AgeCHDdiag gt 0;       '
        ,L7=' &_l matrix diastolic systolic weight /                '
        ,L8=' &_l group=weight_status;                              '
        ,L9=' &_l run;                                              '
       );


title1 "Blood Pressure Trends by Weight Status";
title2 "in heart disease patients under 50";
proc sgscatter data=sashelp.heart;
where AgeCHDdiag lt 50 and AgeCHDdiag gt 0;
matrix diastolic systolic weight /
group=weight_status;
run;

%mend sly300;

%macro sly310;

   %Tut_Sly2
       (
        stop=7
        ,L1=' &_l Auto Performance Statistics sly310.sas             '
        ,L3=' &_l title "Auto Performance Statistics";                '
        ,L4=' &_l proc sgscatter data=sashelp.cars;                   '
        ,L5=' &_l where type="Sedan";                                 '
        ,L6=' &_l plot (mpg_city weight) * (enginesize horsepower) /  '
        ,L7=' &_l group=origin reg=(nogroup clm degree=2) grid ;run;  '
       );

   title "Auto Performance Statistics";
   proc sgscatter data=sashelp.cars;
   where type='Sedan';
   plot (mpg_city weight) * (enginesize horsepower) /
   group=origin reg=(nogroup clm degree=2) grid ;run;

%mend sly310;

data totals;
input sex $ : Name $ Total dollar8.2;
datalines;
Male Martin 1229.00
Male Thomas -130.00
Male Bobby 3009.40
Male Gordon -400.95
Female Susan -730.43
Female Cindy -230.34
Female Sharon 543.90
Female Laura 2000.40
;
run;

%macro sly320;

   %Tut_Sly2
       (
        stop=26
        ,L1=' &_l Waterfallchart SLY320.sas'
        ,L3=' &_l data totals;                                       '
        ,L4=' &_l input sex $ : Name $ Total dollar8.2;              '
        ,L5=' &_l datalines;                                         '
        ,L6=' &_l Male Martin 1229.00                                '
        ,L7=' &_l Male Thomas -130.00                                '
        ,L8=' &_l Male Bobby 3009.40                                 '
        ,L9=' &_l Male Gordon -400.95                                '
       ,L10=' &_l Female Susan -730.43                               '
       ,L11=' &_l Female Cindy -230.34                               '
       ,L12=' &_l Female Sharon 543.90                               '
       ,L13=' &_l Female Laura 2000.40                               '
       ,L14=' &_l ;                                                  '
       ,L15=' &_l run;                                               '
       ,L16=' &_l proc sort data=totals;by name;run;                 '
       ,L17=' &_l proc template;                                     '
       ,L18=' &_l define statgraph waterfall;                        '
       ,L19=' &_l begingraph;                                        '
       ,L20=' &_l layout overlay;                                    '
       ,L21=' &_l waterfallchart category=name response=total /      '
       ,L22=' &_l colorgroup=sex barlabel=true                       '
       ,L23=' &_l name="waterfall" dataskin=gloss filltype=gradient; '
       ,L24=' &_l discretelegend "waterfall" / title="Sex";          '
       ,L25=' &_l endlayout;endgraph;end;                            '
       ,L26=' &_l proc sgrender template=waterfall data=totals;run;  '
       );

/*
*/

proc sort data=totals;by name;run;
proc template;
define statgraph waterfall;
begingraph;
layout overlay;
waterfallchart category=name response=total /
colorgroup=sex barlabel=true
name='waterfall' /*dataskin=gloss filltype=gradient*/;
discretelegend 'waterfall' / title='Sex';
endlayout;endgraph;end;
proc sgrender template=waterfall data=totals;run;

%mend sly320;

data myattrmap;
length value markercolor $10;
retain id "myid";
input value $ markersymbol $ markercolor $;
datalines;
Setosa      circle    SeaGreen
Versicolor  diamond   Coral
Virginica   square    RoyalBlue
;
run;

%macro sly330;


   %Tut_Sly2
       (
        stop=18
        ,L1=' &_l Multi-Celled Scatter Plot Using an Attribute Map SLY330.sas '
        ,L3=' &_l data myattrmap;                                             '
        ,L4=' &_l length value markercolor $10;                               '
        ,L5=' &_l retain id "myid";                                           '
        ,L6=' &_l input value $ markersymbol $ markercolor $;                 '
        ,L7=' &_l datalines;                                                  '
        ,L8=' &_l Setosa      circle    SeaGreen                              '
        ,L9=' &_l Versicolor  diamond   Coral                                 '
       ,L10=' &_l Virginica   square    RoyalBlue                             '
       ,L11=' &_l ;                                                           '
       ,L12=' &_l run;                                                        '
       ,L13=' &_l proc sgscatter data=sashelp.iris dattrmap=myattrmap;        '
       ,L14=' &_l title "Multi-Celled Scatter Plot Using an Attribute Map";   '
       ,L15=' &_l plot (sepallength sepalwidth)*(petallength petalwidth)      '
       ,L16=' &_l / attrid=myid group=species                                 '
       ,L17=' &_l reg=(nogroup degree=2 lineattrs=(color=gray));              '
       ,L18=' &_l run;                                                        '
       );


/* Create an attribute map for the Species group values
*/
proc sgscatter data=sashelp.iris dattrmap=myattrmap;
title "Multi-Celled Scatter Plot Using an Attribute Map";
plot (sepallength sepalwidth)*(petallength petalwidth)
/ attrid=myid group=species
reg=(nogroup degree=2 lineattrs=(color=gray));
run;quit;

%mend sly330;

%macro sly340;


   %Tut_Sly2
       (
        stop=15
        ,L1=' &_l Creating a Pie Chart of Automobile Makes   SLY340.sas                  '
        ,L2=' &_l proc template;                                                         '
        ,L3=' &_l define statgraph piechart;                                             '
        ,L4=' &_l begingraph;                                                            '
        ,L5=' &_l entrytitle "Creating a Pie Chart of Automobile Makes";                 '
        ,L6=' &_l layout region;                                                         '
        ,L7=' &_l piechart category=make / datalabellocation=inside       '
        ,L8=' &_l categorydirection=clockwise start=180                                  '
        ,L9=' &_l othersliceopts=(type=percent percent=5 label="Other Makes");           '
       ,L10=' &_l endlayout;endgraph;end;                                                '
       ,L11=' &_l define style mystyle;                                                  '
       ,L12=' &_l parent=styles.watercolor;                                              '
       ,L13=' &_l style graphoutlines from graphoutlines / contrastcolor=gray55;end;run; '
       ,L14=' &_l proc sgrender data=sashelp.cars template=piechart;                     '
       ,L15=' &_l where origin="Asia";run;                                               '
       );

proc template;
define statgraph piechart;
begingraph;
entrytitle "Creating a Pie Chart of Automobile Makes";
layout region;
piechart category=make / datalabellocation=inside /*dataskin=sheen*/
categorydirection=clockwise start=180
othersliceopts=(type=percent percent=5 label="Other Makes");
endlayout;endgraph;end;
define style default;
parent=styles.watercolor;
/*style graphoutlines from graphoutlines / contrastcolor=gray55;*/end;run;
proc sgrender data=sashelp.cars template=piechart;
where origin='Asia';run;

%mend sly340;


%macro sly350(dummy);

   %Tut_Sly2
       (
        stop=29
        ,L1=' &_l Heart Related Deaths code SLY350.sas              '
        ,L3=' &_l proc template;                                                                                          '
        ,L4=' &_l define statgraph SGF2009.Histogram;                                                                     '
        ,L5=' &_l begingraph / designwidth=600px designheight=400px;                                                      '
        ,L6=' &_l entrytitle "Distribution of Vehicle Horsepower";                                                        '
        ,L7=' &_l layout lattice / rowweights=(.85 .15) columndatarange=union rowgutter=2px;columnaxes;                   '
        ,L8=' &_l columnaxis / display=(ticks tickvalues label) label="Horsepower";endcolumnaxes;                         '
        ,L9=' &_l layout overlay / yaxisopts=(offsetmin=.03 griddisplay=auto_on);                                         '
       ,L10=' &_l layout gridded / columns=2 autoalign=(topleft) border=true                                              '
       ,L11=' &_l opaque=true backgroundcolor=GraphWalls:color;                                                           '
       ,L12=' &_l entry halign=left "N";       entry halign=left eval(strip(put(n(horsepower),12.0)));                    '
       ,L13=' &_l entry halign=left "Mean";    entry halign=left eval(strip(put(mean(horsepower),12.2)));                 '
       ,L14=' &_l entry halign=left "Std Dev"; entry halign=left eval(strip(put(stddev(horsepower),12.2)));               '
       ,L15=' &_l endlayout;                                                                                              '
       ,L16=' &_l histogram horsepower / scale=percent primary=true binaxis=false nbins=20 datatransparency=0.4;          '
       ,L17=' &_l densityplot horsepower / normal( ) name="norm" legendlabel="Normal";                                    '
       ,L18=' &_l densityplot horsepower / kernel( ) name="kern" legendlabel="Kernel" lineattrs=graphdata2(thickness=2px);'
       ,L19=' &_l fringeplot horsepower / datatransparency=.7 fringeheight=5px;                                           '
       ,L20=' &_l discretelegend "norm" "kern" "band" / location=inside across=1 autoalign=(topright) opaque=true;        '
       ,L21=' &_l endlayout;                                                                                              '
       ,L22=' &_l layout overlay;                                                                                         '
       ,L23=' &_l bandplot y=horsepower limitlower=eval(lclm(horsepower)) limitupper=eval(uclm(horsepower)) /             '
       ,L24=' &_l yaxis=y2 extend=true display=(fill) fillattrs=GraphConfidence2                                          '
       ,L25=' &_l name="band" legendlabel="95% Confidence";                                                               '
       ,L26=' &_l boxplot y=horsepower / orient=horizontal primary=true boxwidth=.9 datatransparency=0.4;                 '
       ,L27=' &_l endlayout;endlayout;endgraph;end;run;                                                                   '
       ,L28=' &_l proc sgrender data=sashelp.cars template=SGF2009.Histogram ;run;                                        '
       );


proc template;
define statgraph SGF2009.Histogram;
begingraph / designwidth=600px designheight=400px;
entrytitle "Distribution of Vehicle Horsepower";
layout lattice / rowweights=(.85 .15) columndatarange=union rowgutter=2px;columnaxes;
columnaxis / display=(ticks tickvalues label) label='Horsepower';endcolumnaxes;
layout overlay / yaxisopts=(offsetmin=.03 griddisplay=auto_on);
layout gridded / columns=2 autoalign=(topleft) border=true
opaque=true backgroundcolor=GraphWalls:color;
entry halign=left "N";       entry halign=left eval(strip(put(n(horsepower),12.0)));
entry halign=left "Mean";    entry halign=left eval(strip(put(mean(horsepower),12.2)));
entry halign=left "Std Dev"; entry halign=left eval(strip(put(stddev(horsepower),12.2)));
endlayout;
histogram horsepower / scale=percent primary=true binaxis=false nbins=20 datatransparency=0.4;
densityplot horsepower / normal( ) name="norm" legendlabel="Normal";
densityplot horsepower / kernel( ) name="kern" legendlabel="Kernel" lineattrs=graphdata2(thickness=2px);
fringeplot horsepower / datatransparency=.7 fringeheight=5px;
discretelegend "norm" "kern" "band" / location=inside across=1 autoalign=(topright) opaque=true;
endlayout;
layout overlay;
bandplot y=horsepower limitlower=eval(lclm(horsepower)) limitupper=eval(uclm(horsepower)) /
yaxis=y2 extend=true display=(fill) fillattrs=GraphConfidence2
name="band" legendlabel="95% Confidence";
boxplot y=horsepower / orient=horizontal primary=true boxwidth=.9 datatransparency=0.4;
endlayout;endlayout;endgraph;end;run;
proc sgrender data=sashelp.cars template=SGF2009.Histogram ;run;

%mend sly350;


%macro sly350(dummy);

   %Tut_Sly2
       (
        stop=29
        ,L1=' &_l Heart Related Deaths code SLY350.sas              '
        ,L3=' &_l proc template;                                                                                          '
        ,L4=' &_l define statgraph SGF2009.Histogram;                                                                     '
        ,L5=' &_l begingraph / designwidth=600px designheight=400px;                                                      '
        ,L6=' &_l entrytitle "Distribution of Vehicle Horsepower";                                                        '
        ,L7=' &_l layout lattice / rowweights=(.85 .15) columndatarange=union rowgutter=2px;columnaxes;                   '
        ,L8=' &_l columnaxis / display=(ticks tickvalues label) label="Horsepower";endcolumnaxes;                         '
        ,L9=' &_l layout overlay / yaxisopts=(offsetmin=.03 griddisplay=auto_on);                                         '
       ,L10=' &_l layout gridded / columns=2 autoalign=(topleft) border=true                                              '
       ,L11=' &_l opaque=true backgroundcolor=GraphWalls:color;                                                           '
       ,L12=' &_l entry halign=left "N";       entry halign=left eval(strip(put(n(horsepower),12.0)));                    '
       ,L13=' &_l entry halign=left "Mean";    entry halign=left eval(strip(put(mean(horsepower),12.2)));                 '
       ,L14=' &_l entry halign=left "Std Dev"; entry halign=left eval(strip(put(stddev(horsepower),12.2)));               '
       ,L15=' &_l endlayout;                                                                                              '
       ,L16=' &_l histogram horsepower / scale=percent primary=true binaxis=false nbins=20 datatransparency=0.4;          '
       ,L17=' &_l densityplot horsepower / normal( ) name="norm" legendlabel="Normal";                                    '
       ,L18=' &_l densityplot horsepower / kernel( ) name="kern" legendlabel="Kernel" lineattrs=graphdata2(thickness=2px);'
       ,L19=' &_l fringeplot horsepower / datatransparency=.7 fringeheight=5px;                                           '
       ,L20=' &_l discretelegend "norm" "kern" "band" / location=inside across=1 autoalign=(topright) opaque=true;        '
       ,L21=' &_l endlayout;                                                                                              '
       ,L22=' &_l layout overlay;                                                                                         '
       ,L23=' &_l bandplot y=horsepower limitlower=eval(lclm(horsepower)) limitupper=eval(uclm(horsepower)) /             '
       ,L24=' &_l yaxis=y2 extend=true display=(fill) fillattrs=GraphConfidence2                                          '
       ,L25=' &_l name="band" legendlabel="95% Confidence";                                                               '
       ,L26=' &_l boxplot y=horsepower / orient=horizontal primary=true boxwidth=.9 datatransparency=0.4;                 '
       ,L27=' &_l endlayout;endlayout;endgraph;end;run;                                                                   '
       ,L28=' &_l proc sgrender data=sashelp.cars template=SGF2009.Histogram ;run;                                        '
       );


proc template;
define statgraph SGF2009.Histogram;
begingraph / designwidth=600px designheight=400px;
entrytitle "Distribution of Vehicle Horsepower";
layout lattice / rowweights=(.85 .15) columndatarange=union rowgutter=2px;columnaxes;
columnaxis / display=(ticks tickvalues label) label='Horsepower';endcolumnaxes;
layout overlay / yaxisopts=(offsetmin=.03 griddisplay=auto_on);
layout gridded / columns=2 autoalign=(topleft) border=true
opaque=true backgroundcolor=GraphWalls:color;
entry halign=left "N";       entry halign=left eval(strip(put(n(horsepower),12.0)));
entry halign=left "Mean";    entry halign=left eval(strip(put(mean(horsepower),12.2)));
entry halign=left "Std Dev"; entry halign=left eval(strip(put(stddev(horsepower),12.2)));
endlayout;
histogram horsepower / scale=percent primary=true binaxis=false nbins=20 datatransparency=0.4;
densityplot horsepower / normal( ) name="norm" legendlabel="Normal";
densityplot horsepower / kernel( ) name="kern" legendlabel="Kernel" lineattrs=graphdata2(thickness=2px);
fringeplot horsepower / datatransparency=.7 fringeheight=5px;
discretelegend "norm" "kern" "band" / location=inside across=1 autoalign=(topright) opaque=true;
endlayout;
layout overlay;
bandplot y=horsepower limitlower=eval(lclm(horsepower)) limitupper=eval(uclm(horsepower)) /
yaxis=y2 extend=true display=(fill) fillattrs=GraphConfidence2
name="band" legendlabel="95% Confidence";
boxplot y=horsepower / orient=horizontal primary=true boxwidth=.9 datatransparency=0.4;
endlayout;endlayout;endgraph;end;run;
proc sgrender data=sashelp.cars template=SGF2009.Histogram ;run;

%mend sly350;

data bmi;
   infile datalines;
   input category $ 1-11 upper_bmi lower_bmi weight_bmi;
   lower_hgt=(703*weight_bmi/lower_bmi)**.5;
   upper_hgt=(703*weight_bmi/upper_bmi)**.5;
   nn=_n_;
   datalines;
Underweight 1 18.5  25.0 4
Underweight 1 18.5  100.0 4
Underweight 1 18.5  175.0 4
Underweight 1 18.5  250.0 4
Underweight 1 18.5  325.0 4
Normal      18.5 25.0  25.0 5
Normal      18.5 25.0  100.0 5
Normal      18.5 25.0  175.0 5
Normal      18.5 25.0  250.0 5
Normal      18.5 25.0  325.0 5
Overweight  25.0 30.0  25.0 6
Overweight  25.0 30.0  100.0 6
Overweight  25.0 30.0  175.0 6
Overweight  25.0 30.0  250.0 6
Overweight  25.0 30.0  325.0 6
Obese       30.0 150.0  25.0 7
Obese       30.0 150.0  100.0 7
Obese       30.0 150.0  175.0 7
Obese       30.0 150.0  250.0 7
Obese       30.0 150.0  325.0 7
;
run;

data records;
  infile datalines;
  nn=_n_;
  input wgt hgt year name $ ;
  datalines;
45 52 1975 Bob
80 56 1980 Bob
125 66 1986 Bob
175 67 1990 Bob
200 68 1995 Bob
215 69 2000 Bob
250 69 2005 Bob
80  43 1975 Fred
85  58 1980 Fred
135 70 1986 Fred
180 70 1990 Fred
195 70 2005 Fred
50  42 1975 Jack
135 54 1980 Jack
140 64 1985 Jack
160 73 1990 Jack
170 76 2000 Jack
180 76 2005 Jack
;
run;

%macro sly360(dummy);

   %Tut_Sly2
       (
        stop=27
        ,L1=' &_l Three Patient Growth Charts vs BMI SLY360.sas (data is there)                 '
        ,L3=' &_l proc template;                                                                '
        ,L4=' &_l define style styles.bmi;                                                      '
        ,L5=' &_l parent=styles.analysis;                                                       '
        ,L6=' &_l style graphcolors from graphcolors /                                          '
        ,L7=' &_l "gcdata1"=CX31035E                                                            '
        ,L8=' &_l "gcdata2"=CXB2182B                                                            '
        ,L9=' &_l "gcdata3"=CX01665E                                                            '
       ,L10=' &_l "gdata1"=CXFFFFFF                                                             '
       ,L11=' &_l "gdata3"=CXFDC861                                                             '
       ,L12=' &_l "gdata4"=CXDC531F                                                             '
       ,L13=' &_l "gdata2"=CX679920;                                                            '
       ,L14=' &_l end;run;                                                                      '
       ,L15=' &_l title "Three Patient Growth Charts vs BMI";                                   '
       ,L16=' &_l proc sgplot data=merged;                                                      '
       ,L17=' &_l band x=weight_bmi upper=upper_hgt lower=lower_hgt /                           '
       ,L18=' &_l transparency=.5 group=category name="bmi";                                    '
       ,L19=' &_l xaxis min=30 max=300 label="Weight (lbs)" grid;                               '
       ,L20=' &_l yaxis min=40 max=80  label="Height (in)"  grid;                               '
       ,L21=' &_l keylegend "bmi" / position=bottom location=outside across=4 title="BMI: ";    '
       ,L22=' &_l series x=wgt y=hgt / datalabel=year lineattrs=(pattern=solid thickness=2px)   '
       ,L23=' &_l markerattrs=(symbol=circlefilled ) markers group=name name="pts";             '
       ,L24=' &_l keylegend "pts" / position=topleft location=inside across=1 title="Patient:"; '
       ,L25=' &_l inset "BMI=703 x Weight / Height**2"  " " /                                   '
       ,L26=' &_l position=bottomright textattrs=graphfootnotetext;                             '
       ,L27=' &_l run;                                                                          '
       );

/*
*/
proc sort data=bmi;
   by nn;
run;

proc sort data=records;
   by nn;
run;

data merged;
   merge bmi records;
   by nn;
   if name='' then name='Jack';
run;

proc template;
define style styles.bmi;
parent=styles.analysis;
style graphcolors from graphcolors /
"gcdata1"=CX31035E
"gcdata2"=CXB2182B
"gcdata3"=CX01665E
"gdata1"=CXFFFFFF
"gdata3"=CXFDC861
"gdata4"=CXDC531F
"gdata2"=CX679920;
end;run;
title "Three Patient Growth Charts vs BMI";
proc sgplot data=merged;
band x=weight_bmi upper=upper_hgt lower=lower_hgt /
transparency=.5 group=category name="bmi";
xaxis min=30 max=300 label="Weight (lbs)" grid;
yaxis min=40 max=80  label="Height (in)"  grid;
keylegend "bmi" / position=bottom location=outside across=4 title="BMI: ";
series x=wgt y=hgt / datalabel=year lineattrs=(pattern=solid thickness=2px)
markerattrs=(symbol=circlefilled ) markers group=name name="pts";
keylegend "pts" / position=topleft location=inside across=1 title="Patient:";
inset "BMI=703 x Weight / Height**2"  " " /
position=bottomright textattrs=graphfootnotetext;
run;

%mend sly360;

data a;
   input XVAR YVAR ZVAR $;
   datalines;
1 5 Test_1
2 1 Test_1
3 3 Test_1
4 4 Test_1
5 1 Test_1
6 7 Test_1
7 8 Test_1
8 5 Test_1
9 2 Test_1
10 2 Test_1
1 1500 Test_2
2 4000 Test_2
3 3000 Test_2
4 5200 Test_2
5 2000 Test_2
6 4500 Test_2
7 3300 Test_2
8 5300 Test_2
9 7000 Test_2
10 7500 Test_2
;
run;

%macro sly370(dummy);

   %Tut_Sly2
       (
        stop=22
        ,L1=' &_l Add a break to the vertical axis  see SLY370.sas       '
        ,L2=' &_l data anno;                                                  '
        ,L3=' &_l length function style color $8;                             '
        ,L4=' &_l retain xsys "5" ysys "2"  when "a" style "solid";           '
        ,L5=' &_l function="move"; x=1; y=50; output;                         '
        ,L6=' &_l function="bar"; x=8;  y=500;  color="white"; output;        '
        ,L7=' &_l color="black"; size=2;                                      '
        ,L8=' &_l function="move"; xsys="1"; x=0;  ysys="2"; y=50; output;    '
        ,L9=' &_l function="draw"; xsys="B"; ysys="B"; x=+4; y=+4; output;    '
       ,L10=' &_l function="draw";                     x=-8; y=+4; output;    '
       ,L11=' &_l function="draw"; xsys="1"; x=0;  ysys="2"; y=500; output;   '
       ,L12=' &_l run;                                                        '
       ,L13=' &_l symbol1 i=smooth v=none c=vibg w=1;                         '
       ,L14=' &_l symbol2 i=smooth v=none c=depk w=1;                         '
       ,L15=' &_l title1 "Add a break to the vertical axis";                  '
       ,L16=' &_l axis1 order=(0 to 10 by 2, 100, 200, 1000 to 10000 by 2000) '
       ,L17=' &_l minor=none;                                                 '
       ,L18=' &_l axis2 order=(0 to 10 by 1) minor=none;                      '
       ,L19=' &_l proc gplot data=a;                                          '
       ,L20=' &_l plot yvar*xvar=zvar / vaxis=axis1 haxis=axis2 anno=anno;    '
       ,L21=' &_l run;                                                        '
       ,L22=' &_l quit;                                                       '
       );

/*
*/

data anno;
length function style color $8;
retain xsys "5" ysys "2"  when "a" style "solid";
function="move"; x=1; y=50; output;
function="bar"; x=8;  y=500;  color="white"; output;
color="black"; size=2;
function="move"; xsys="1"; x=0;  ysys="2"; y=50; output;
function="draw"; xsys="B"; ysys="B"; x=+4; y=+4; output;
function="draw";                     x=-8; y=+4; output;
function="draw"; xsys="1"; x=0;  ysys="2"; y=500; output;
run;
symbol1 i=smooth v=none c=vibg w=1;
symbol2 i=smooth v=none c=depk w=1;
title1 "Add a break to the vertical axis";
axis1 order=(0 to 10 by 2, 100, 200, 1000 to 10000 by 2000)
minor=none;
axis2 order=(0 to 10 by 1) minor=none;
proc gplot data=a;
plot yvar*xvar=zvar / vaxis=axis1 haxis=axis2 anno=anno;
run;
quit;

%mend sly370;


%let out=c:\temp\sly210.pdf;
%utlopts;
ods listing close;
ods pdf close;
ods path work.templat(update) sasuser.templat(update) sashelp.tmplmst(read);
%utl_cmslan100;

%utlfkil(&out);
ods noptitle;
ods escapechar='^';
ods listing close;
options orientation=landscape;
ods pdf file="&out" style=utl_cmslan100 notoc;
ods graphics on / width=10in  height=7in ;

%sly070;
/*
%sly080;
%sly090;
%sly095;
%sly100;
%sly110;
%sly120;
%sly130;
%sly140;
%sly150;
%sly160;
%sly170;
%sly180;
%sly190;
*/

%*sly200;
%sly220;
%sly230;
%sly240;
%sly250;
%sly260;
%sly270;
%sly280;
%sly290;
%sly300;
%sly310;
%sly320;
%sly330;
%sly340;
%sly350;
%sly360;
%sly210;
%*sly370;   * gplot will not work;

ods pdf close;
ods graphics off;

%let pgm=hap_holidays;

SAS Innovation: Fun with Mathematics and Holiday Designs

Code
https://www.yammer.com/hhs.gov/uploaded_files/51538156

Graphics
https://www.yammer.com/hhs.gov/uploaded_files/51538157


*   *  *   *    *     ***          *****  ****   *****  *****
*   *  ** **   * *   *   *           *    *   *  *      *
 * *   * * *  *   *   *              *    *   *  *      *
  *    *   *  *****    *             *    ****   ****   ****
 * *   *   *  *   *     *            *    * *    *      *
*   *  *   *  *   *  *   *           *    *  *   *      *
*   *  *   *  *   *   ***            *    *   *  *****  *****;

SAS Innovation: Thanksgiving Turkey and Holiday Christmas Tree

Happy Holidays to all my Big Data Subscribers.

The two SAS programs below will produce a Christmas Tree
Tom Turkey

* Christmass Tree;

https://communities.sas.com/t5/SAS-GRAPH-and-ODS-Graphics/O-DS-Christmas-Tree/m-p/240189

data xmastree;
r=4; h=11.25;
a=arsin(r/(r**2+h**2)**.5);
do y=-r to r by .02;
  do x=-r to r by .02;
    z=h-(x**2+y**2)**.5/sin(a)*cos(a);
    if (x**2+y**2)**.5>4 | 1.25<z<2|3.25<z<4|5.25<z<6|7.25<z<8|9.25<z<10 then z=.;
    output;
  end;
end;

proc template;
define statgraph xmastree;
begingraph;
drawtext textattrs=(size=50pt COLOR=gold FAMILY="Arial Unicode MS") {unicode "2605"x} /
         anchor=topleft widthunit=percent x=46.5 y=99 justify=center ;
layout overlay3d / cube=false;
surfaceplotparm x=x y=y z=z / fillattrs=(color=forestgreen);
endlayout;
endgraph;
end;

proc sgrender data=xmastree template=xmastree;
run;

*****   ***   *   *         *****  ****   *   *  *   *
  *    *   *  ** **           *    *   *  *  *   *   *
  *    *   *  * * *           *    *   *  * *     * *
  *    *   *  *   *           *    ****   **       *
  *    *   *  *   *           *    * *    * *      *
  *    *   *  *   *           *    *  *   *  *     *
  *     ***   *   *           *    *   *  *   *    *;

* Tom Tukey;

data TomTurkey(keep=shapeID x y);
 length shapeID $ 20. x 8 y 8; retain shapeID;
 infile "c:\temp\Shapes.txt";
 input;
 list;
 if index(_infile_,'Shape')>0 then do;
   shapeID=_infile_;
   *put shapeid=;
 end;
 else do;
   i=1;
   do while(scan(_infile_,i,'(), ')^='');
     x=scan(_infile_,i,'(), ');
     y=scan(_infile_,i+1,'(), ');
     i+2;
     *put i= shapeid= x= y=;
     output;
   end;
   end;
run;quit;

data line(keep=function drawspace x1 y1 x2 y2);
 set TomTurkey;
 by shapeID notsorted;
 function='line';
 drawspace='datavalue';
 x1=lag(x); y1=lag(y);
 x2=x; y2=y;
 if ^first.shapeID;
run;quit;

proc sgplot data=TomTurkey aspect=1 sganno=line;
 scatter x=x y=y / markerattrs=(size=0);
run;quit;


/*
*** DATA *** Turkey definition from http://math-aids.com;
save in /folders/myfolders/TomTurkeyShapes.txt;



 Shape 1
 (-3,-11) , (-3.5,-12.5) , (-4,-12) , (-4.5,-12.5) , (-4,-13) , (-3,-14) , (-2,-15.5) , (-1.5,-16) , (-1.5,-15.5) , (-2,-14)
 (-1,-15) , (0,-15.5) , (-.5,-14.5) , (-1,-14) , (0,-14.5) , (0,-14) , (-.5,-13.5) , (-2,-13) , (-2.5,-12.5) , (-1.5,-11.5) , (-3,-11)
 Shape 2
 (-1.5,-11.5) , (0,-11.5) , (.5,-12) , (.5,-13) , (-.5,-12.5) , (-.5,-13.5) , (0,-14) , (1.5,-15) , (2,-16) , (2.5,-15.5) , (2,-15)
 (3,-15.5) , (3.5,-15.5) , (3.5,-15) , (2,-14.5) , (3,-14.5) , (3.5,-14.5) , (3.5,-14) , (2,-13.5) , (1,-13.5) , (1.5,-12.5) , (.5,-12)
 Shape 3
 (1.5,-12.5) , (2.5,-11.5) , (4.5,-11.5) , (6.5,-10) , (7.5,-8.5) , (9,-7) , (9.5,-5.5) , (10.5,-4)
 (10.5,-3) , (10,-2.5) , (8.5,-2) , (9.5,-3.5) , (9.5,-5.5)
 Shape 4
 (-3,-11) , (-4,-10) , (-4,-8.5) , (-5.5,-7) , (-4,-8) , (-3,-8) , (-1,-7.5) , (2,-6) , (4.5,-4) , (5.5,-1.5) , (7,-2.5) , (8.5,-2)
 Shape 5
 (-5.5,-7) , (-6.5,-6.5) , (-7,-5.5) , (-8,-5) , (-8,-3.5) , (-9,-3.5) , (-9.5,-3) , (-10.5,-3) , (-10.5,-4)
 (-10,-5.5) , (-9,-6.5) , (-8,-6.5) , (-7,-5.5)
 Shape 6
 (-10.5,-3) , (-11.5,-2.5) , (-12,-1) , (-11,1) , (-9,1) , (-10.5,0) , (-11,-1) , (-10.5,-2) , (-9.5,-2) , (-9.5,-3)
 Shape 7
 (-9,1) , (-8,1.5) , (-8,0) , (-7,-.5) , (-7,-1.5) , (-6,-2.5) , (-5,-2.5) , (-5,-3.5) , (-4,-4.5)
 (-3,-4.5) , (-3.5,-5.5) , (-2,-6) , (-1.5,-7) , (-1,-7.5)
 Shape 8
 (-8,1.5) , (-7,2) , (-6,2.5) , (-3.5,2.5) , (-4,2) , (-4,1) , (-3,.5) , (-3.5,0) , (-3,-1) , (-2,-1)
 (-2.5,-2) , (-2,-3) , (-.5,-3) , (-1,-4) , (0,-5) , (.5,-4.5) , (1,-5.5) , (2,-6)
 Shape 9
 (-3.5,2.5) , (-1.5,2.5) , (-1.5,2.5) , (.5,2) , (1.5,1.5) , (2.5,1) , (3.5,.5) , (5,-1) , (5.5,-1.5)
 Shape 10
 (-11,1) , (-12,2) , (-11.5,4) , (-10.5,5) , (-8.5,4) , (-6,2.5)
 Shape 11
 (-10.5,5) , (-10.5,6) , (-10,7.5) , (-9,8.5) , (-8,8.5) , (-6,6) , (-3.5,2.5)
 Shape 12
 (-8,8.5) , (-7.5,10) , (-6.5,10.5) , (-5.5,11) , (-4.5,10.5) , (-3.5,7.5) , (-2.5,5) , (-1.5,2.5)
 Shape 13
 (-4.5,10.5) , (-4,11.5) , (-3,12) , (-2,12.5) , (-1,12) , (-.5,11.5) , (-.5,7) , (-.5,2.5)
 Shape 14
 (-.5,11.5) , (0,12.5) , (1,12.5) , (2.5,12) , (3.5,11) , (2.5,8) , (.5,2)
 Shape 15
 (3.5,11) , (5,11) , (6,10.5) , (7,9) , (4,5) , (1.5,1.5)
 Shape 16
 (7,9) , (8.5,8.5) , (9.5,7) , (8,7.5) , (6.5,6.5) , (6,5) , (6,3.5) , (2.5,1)
 Shape 17
 (6,3.5) , (6,1) , (3.5,.5)
 Shape 18
 (6,1) , (5.5,0) , (5,-1)
 Shape 19
 (9.5,7) , (10.5,6.5) , (11,5) , (9.5,5) , (8,3) , (7.5,2) , (8,1.5) , (8.5,1.5) , (9,2.5) , (9.5,3.5)
 (9.5,4.5) , (10.5,4.5) , (11,4) , (11,5)
 Shape 20
 (8.5,-2) , (8,.5) , (8,1.5)
 Shape 21
 (9.5,3.5) , (10,3) , (11.5,2.5) , (11,4)
 Shape 22
 (9.5,1.5) , (10.5,1.5) , (11.5,2.5) , (10,3) , (9.5,2.5) , (9.5,1.5) , (9,1) , (8,.5)
 Shape 23
 (10.5,1.5) , (11.5,1) , (11.5,0) , (11,-2) , (10,-2.5)
 Shape 24
 (8.5,6) , (8,5.5) , (8.5,5) , (9,5.5) , (8.5,6)
 Shape 25
 (9,5.5) , (8.5,5.5) , (8.5,5)
*/


*   *    *    *      *****  *   *  *   *
*   *   * *   *        *    *   *  **  *
*   *  *   *  *        *     * *   * * *
*   *  *****  *        *      *    *  **
*   *  *   *  *        *      *    *   *
 * *   *   *  *        *      *    *   *
  *    *   *  *****    *      *    *   *;

*   *    *     ***   ****    ***    ***
** **   * *   *   *  *   *  *   *  *   *
* * *  *   *  *      *   *  *   *   *
*   *  *****  *      ****   *   *    *
*   *  *   *  *      * *    *   *     *
*   *  *   *  *   *  *  *   *   *  *   *
*   *  *   *   ***   *   *   ***    ***;

* Valintine is more complex due to pdf slides and
  templaces, couls substitute CSS;

proc datasets library=work kill;
run;quit;;


%Macro utl_ymrlan100
    (
      style=utl_ymrlan100
      ,frame=box
      ,TitleFont=14pt
      ,docfont=13pt
      ,fixedfont=12pt
      ,rules=ALL
      ,bottommargin=.25in
      ,topmargin=.25in
      ,rightmargin=.25in
      ,leftmargin=.25in
      ,cellheight=13pt
      ,cellpadding = 2pt
      ,cellspacing = .2pt
      ,borderwidth = .2pt
    ) /  Des="SAS PDF Template for PDF";

ods path work.templat(update) sasuser.templat(update) sashelp.tmplmst(read);

Proc Template;

   define style &Style;
   parent=styles.rtf;

        replace body from Document /

               protectspecialchars=off
               asis=on
               bottommargin=&bottommargin
               topmargin   =&topmargin
               rightmargin =&rightmargin
               leftmargin  =&leftmargin
               ;

        replace color_list /
              'link' = blue
               'bgH'  = _undef_
               'fg'  = black
               'bg'   = _undef_;

        replace fonts /
               'TitleFont2'           = ("Arial, Helvetica, Helv",&titlefont,Bold)
               'TitleFont'            = ("Arial, Helvetica, Helv",&titlefont,Bold)

               'HeadingFont'          = ("Arial, Helvetica, Helv",&titlefont)
               'HeadingEmphasisFont'  = ("Arial, Helvetica, Helv",&titlefont,Italic)

               'StrongFont'           = ("Arial, Helvetica, Helv",&titlefont,Bold)
               'EmphasisFont'         = ("Arial, Helvetica, Helv",&titlefont,Italic)

               'FixedFont'            = ("Courier New, Courier",&fixedfont)
               'FixedEmphasisFont'    = ("Courier New, Courier",&fixedfont,Italic)
               'FixedStrongFont'      = ("Courier New, Courier",&fixedfont,Bold)
               'FixedHeadingFont'     = ("Courier New, Courier",&fixedfont,Bold)
               'BatchFixedFont'       = ("Courier New, Courier",&fixedfont)

               'docFont'              = ("Arial, Helvetica, Helv",&docfont)

               'FootFont'             = ("Arial, Helvetica, Helv", 9pt)
               'StrongFootFont'       = ("Arial, Helvetica, Helv",8pt,Bold)
               'EmphasisFootFont'     = ("Arial, Helvetica, Helv",8pt,Italic)
               'FixedFootFont'        = ("Courier New, Courier",8pt)
               'FixedEmphasisFootFont'= ("Courier New, Courier",8pt,Italic)
               'FixedStrongFootFont'  = ("Courier New, Courier",7pt,Bold);

        replace GraphFonts /
               'GraphDataFont'        = ("Arial, Helvetica, Helv",&fixedfont)
               'GraphValueFont'       = ("Arial, Helvetica, Helv",&fixedfont)
               'GraphLabelFont'       = ("Arial, Helvetica, Helv",&fixedfont,Bold)
               'GraphFootnoteFont'    = ("Arial, Helvetica, Helv",8pt)
               'GraphTitleFont'       = ("Arial, Helvetica, Helv",&titlefont,Bold)
               'GraphAnnoFont'        = ("Arial, Helvetica, Helv",&fixedfont)
               'GraphUnicodeFont'     = ("Arial, Helvetica, Helv",&fixedfont)
               'GraphLabel2Font'      = ("Arial, Helvetica, Helv",&fixedfont)
               'GraphTitle1Font'      = ("Arial, Helvetica, Helv",&fixedfont);

        style Graph from Output/
                outputwidth = 100% ;

        style table from table /
                outputwidth=100%
                protectspecialchars=off
                asis=on
                background = colors('tablebg')
                frame=&frame
                rules=&rules
                cellheight  = &cellheight
                cellpadding = &cellpadding
                cellspacing = &cellspacing
                bordercolor = colors('tableborder')
                borderwidth = &borderwidth;

         replace Footer from HeadersAndFooters

                / font = fonts('FootFont')  just=left asis=on protectspecialchars=off ;

                replace FooterFixed from Footer
                / font = fonts('FixedFootFont')  just=left asis=on protectspecialchars=off;

                replace FooterEmpty from Footer
                / font = fonts('FootFont')  just=left asis=on protectspecialchars=off;

                replace FooterEmphasis from Footer
                / font = fonts('EmphasisFootFont')  just=left asis=on protectspecialchars=off;

                replace FooterEmphasisFixed from FooterEmphasis
                / font = fonts('FixedEmphasisFootFont')  just=left asis=on protectspecialchars=off;

                replace FooterStrong from Footer
                / font = fonts('StrongFootFont')  just=left asis=on protectspecialchars=off;

                replace FooterStrongFixed from FooterStrong
                / font = fonts('FixedStrongFootFont')  just=left asis=on protectspecialchars=off;

                replace RowFooter from Footer
                / font = fonts('FootFont')  asis=on protectspecialchars=off just=left;

                replace RowFooterFixed from RowFooter
                / font = fonts('FixedFootFont')  just=left asis=on protectspecialchars=off;

                replace RowFooterEmpty from RowFooter
                / font = fonts('FootFont')  just=left asis=on protectspecialchars=off;

                replace RowFooterEmphasis from RowFooter
                / font = fonts('EmphasisFootFont')  just=left asis=on protectspecialchars=off;

                replace RowFooterEmphasisFixed from RowFooterEmphasis
                / font = fonts('FixedEmphasisFootFont')  just=left asis=on protectspecialchars=off;

                replace RowFooterStrong from RowFooter
                / font = fonts('StrongFootFont')  just=left asis=on protectspecialchars=off;

                replace RowFooterStrongFixed from RowFooterStrong
                / font = fonts('FixedStrongFootFont')  just=left asis=on protectspecialchars=off;

                replace SystemFooter from TitlesAndFooters / asis=on
                        protectspecialchars=off just=left;
    end;
run;
quit;

%Mend utl_ymrlan100;

%Macro Tut_Sly
(
 stop=43,
 L1=' ',  L43=' ',  L2=' ', L3=' ', L4=' ', L5=' ', L6=' ', L7=' ', L8=' ', L9=' ',
 L10=' ', L11=' ',
 L12=' ', L13=' ', L14=' ', L15=' ', L16=' ', L17=' ', L18=' ', L19=' ',
 L20=' ', L21=' ',
 L22=' ', L23=' ', L24=' ', L25=' ', L26=' ', L27=' ', L28=' ', L29=' ', L30=' ', L31=' ', L32=' ',
 L33=' ', L34=' ', L35=' ', L36=' ', L37=' ', L38=' ', L39=' ', L40=' ', L41=' ', L42=' ',
 L44=' ', L45=' ', L46=' ', L47=' ', L48=' ', L49=' ', L50=' ', L51=' ', L52=' '
 )/ des="SAS Slides all argument values need to be single quoted";

/* creating slides for a presentation */
/* up to 32 lines */
/* backtic ` is converted to a single quote  */
/* | is converted to a , */

Data _OneLyn1st(rename=t=title);

Length t $255;
 t=resolve(translate(&L1,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
 t=resolve(translate(&L2,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
 t=resolve(translate(&L3,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
 t=resolve(translate(&L4,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
 t=resolve(translate(&L5,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
 t=resolve(translate(&L6,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
 t=resolve(translate(&L7,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
 t=resolve(translate(&L8,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
 t=resolve(translate(&L9,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L10,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L11,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L12,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L13,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L14,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L15,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L16,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L17,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L18,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L19,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L20,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L21,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L22,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L23,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L24,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L25,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L26,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L27,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L28,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L29,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L30,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L31,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L32,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L33,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L34,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L35,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L36,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L37,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L38,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L39,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L41,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L42,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L43,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L44,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L45,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L46,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L47,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L48,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L50,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L51,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;
t=resolve(translate(&L52,"'","`"));t=translate(t,",","|");t=translate(t,";","~");t=translate(t,'%',"#");t=translate(t,'&',"@");Output;

run;quit;

/*  %let l7='^S={font_size=25pt just=c cellwidth=100pct}Premium Dollars';  */

options label;
%if &stop=7 %then %do;
   data _null_;
      tyt=scan(&l7,2,'}');
      call symputx("tyt",tyt);
   run;
   ods pdf bookmarkgen=on bookmarklist=show;
   ods proclabel="&tyt";run;quit;
%end;
%else %do;
   ods proclabel="Title";run;quit;
%end;


data _onelyn;
  set _onelyn1st(obs=%eval(&stop + 1));
  if not (left(title) =:  '^') then do;
     pre=upcase(scan(left(title),1,' '));
     idx=index(left(title),' ');
     title=substr(title,idx+1);
  end;
  put title;
run;

* display the slide ;
title;
footnote;

proc report data=_OneLyn nowd  style=utl_pdflan100;
col title;
define title / display ' ';
run;
quit;

%Mend Tut_Sly;

%*tut_sly(stop=43,l43='tst');

%*fix_renam; * no need to rerun;

%macro utl_boxpdf2ppt(inp=&outpdf001,out=&outppt001)/des="www.boxoft.con pdf to ppt";
  data _null_;
    cmd=catt("&pdf2ppt",' "',"&inp", '"',' "',"&out",'"');
    put cmd;
    call system(cmd);
  run;
%mend utl_boxpdf2ppt;

%MACRO greenbar ;
   DEFINE _row / order COMPUTED NOPRINT ;
   COMPUTE _row;
      nobs+1;
      _row = nobs;
      IF (MOD( _row,2 )=0) THEN
         CALL DEFINE( _ROW_,'STYLE',"STYLE={BACKGROUND=graydd}" );
   ENDCOMP;
%MEND greenbar;

%macro pdfbeg(rules=all,frame=box);
    %utlnopts;
    options orientation=landscape validvarname=v7;
    ods listing close;
    ods pdf close;
    ods path work.templat(update) sasuser.templat(update) sashelp.tmplmst(read);
    %utlfkil(&outpdf01.);
    ods noptitle;
    ods escapechar='^';
    ods listing close;
    ods graphics on / width=10in  height=7in ;
    ods pdf file="c:\ymr\ymr_valtyn.pdf" style=utl_ymrlan100  pdftoc=1 /*  notoc*/ bookmarkgen=on bookmarklist=show;;

%mend pdfbeg;

%macro pdfend;
   ods graphics off;
   ods pdf close;
   ods listing;
   %utlopts;
%mend pdfend;


*   *    *    *      *****  *   *  *   *
*   *   * *   *        *    *   *  **  *
*   *  *   *  *        *     * *   * * *
*   *  *****  *        *      *    *  **
*   *  *   *  *        *      *    *   *
 * *   *   *  *        *      *    *   *
  *    *   *  *****    *      *    *   *;

proc datasets library=work kill;
run;quit;;

%pdfend;
%utlopts;

%let z=%str(                  );
%let b=%str(font_weight=bold);
%let c=%str(font=("Courier New"));
%let w=%str(cellwidth=100pct);

/*
| to ,
` to single quote
~ to semi colon
# to percent sign
@ to percent
*/

%utl_ymrlan100(
     topmargin=.5in
    ,TitleFont=22pt
    ,docfont=20pt
    ,fixedfont=18pt
    ,rules=none
    ,frame=box
);

%pdfbeg;

title;
footnote;

%Tut_Sly
   (
    stop=13
    ,L9 ='^S={font_size=35pt just=c &w}Cupids Arrow and '
    ,L11='^S={font_size=35pt just=c &w}a Valentines Heart'
    ,L13='^S={font_size=35pt just=c &w}Using Legacy SAS Graph'
   );


%let pink=cxFF3333;
%let darkgray=gray66;
data heart_data;
do x=-2 to 2 by .05;
 y=sqrt(1-(abs(x)-1)**2);
 output;
 end;
do x=2 to -2 by -.05;
 y=arcos(1-abs(x))-3.14;
 output;
 end;
run;

data heart_data; set heart_data;
if y=. then y=0;
if round(x*100)=0 then y=y+.2;
idvar='heart';
run;


data anno_arrow;
length function $8;
xsys='2'; ysys='2'; hsys='3'; when='a'; color="&darkgray";
function='move'; x=-2; y=-2.5; output;
function='draw'; x=-.75; y=-1.25; output;
function='move'; x=1; y=.5; output;
function='arrow'; x=1.75; y=1.25; line=4; output;
run;

goptions gunit=pct ftitle='albany amt/bold'
ftext='albany amt' htitle=4.8 htext=2.5 ctext=&darkgray;
symbol1 value=dot h=1.0 interpol=none c=&pink;
axis1 order=(-3.5 to 1.5 by .5)
 minor=none value=(c=grayaa) offset=(0,0);
axis2 order=(-4.5 to 4.5 by .5)
minor=none value=(c=grayaa) offset=(0,0);
title1 ls=1.5 "From Robert Allison Site" ;
title2 h=8 ' ';
pattern1 v=s c=&pink;
proc gmap data=heart_data map=heart_data anno=anno_arrow;
id idvar;
choro idvar / nolegend
 coutline=&darkgray;
run;quit;


%Tut_Sly
   (
    stop=17
    ,L4='^S={font_size=25pt just=c &w  }Create Heart using Trig Cartiods'
    ,L6='^S={font_size=22pt just=l &w  }@let pink=cxFF3333~;'
    ,L7='^S={font_size=22pt just=l &w  }@let darkgray=gray66~;'
    ,L8='^S={font_size=22pt just=l &w  }data heart_data~;'
    ,L9='^S={font_size=22pt just=l &w  }do x=-2 to 2 by .05~;'
    ,L10='^S={font_size=22pt just=l &w } y=sqrt(1-(abs(x)-1)**2)~;'
    ,L11='^S={font_size=22pt just=l &w } output~;'
    ,L12='^S={font_size=22pt just=l &w } end~;'
    ,L13='^S={font_size=22pt just=l &w }do x=2 to -2 by -.05~;'
    ,L14='^S={font_size=22pt just=l &w } y=arcos(1-abs(x))-3.14~;'
    ,L15='^S={font_size=22pt just=l &w } output~;'
    ,L16='^S={font_size=22pt just=l &w } end~;'
    ,L17='^S={font_size=22pt just=l &w }run~;'
   );

%Tut_Sly
   (
    stop=17
    ,L4='^S={font_size=25pt just=c &w  }Adjustment heart bottom and Arrrow'
    ,L6='^S={font_size=22pt just=l &w  }data heart_data~ set heart_data~'
    ,L7='^S={font_size=22pt just=l &w  }if y=. then y=0~'
    ,L8='^S={font_size=22pt just=l &w  }if round(x*100)=0 then y=y+.2~'
    ,L9='^S={font_size=22pt just=l &w  }idvar="heart"~run~'
    ,L10='^S={font_size=22pt just=l &w }data anno_arrow~'
    ,L11='^S={font_size=22pt just=l &w }length function $8~'
    ,L12='^S={font_size=22pt just=l &w }xsys="2"~ ysys="2"~ hsys="3"~ when="a"~color="&darkgray"~'
    ,L13='^S={font_size=22pt just=l &w }function="move"~ x=-2~ y=-2.5~ output~'
    ,L14='^S={font_size=22pt just=l &w }function="draw"~ x=-.75~ y=-1.25~ output~'
    ,L15='^S={font_size=22pt just=l &w }function="move"~ x=1~ y=.5~ output~'
    ,L16='^S={font_size=22pt just=l &w }function="arrow"~ x=1.75~ y=1.25~ line=4~ output~'
    ,L17='^S={font_size=22pt just=l &w }run~'
   );


%Tut_Sly
   (
    stop=19
    ,L4='^S={font_size=25pt just=c &w  }Using GMAP to display heart'
    ,L6='^S={font_size=22pt just=l &w  }goptions gunit=pct ftitle="albany amt/bold"'
    ,L7='^S={font_size=22pt just=l &w  }ftext="albany amt" htitle=4.8 htext=2.5 ctext=&darkgray~'
    ,L8='^S={font_size=22pt just=l &w  }symbol1 value=dot h=1.0 interpol=none c=&pink~'
    ,L9='^S={font_size=22pt just=l &w  }axis1 order=(-3.5 to 1.5 by .5)'
    ,L10='^S={font_size=22pt just=l &w } minor=none value=(c=grayaa) offset=(0,0)~'
    ,L11='^S={font_size=22pt just=l &w }axis2 order=(-4.5 to 4.5 by .5)'
    ,L12='^S={font_size=22pt just=l &w }minor=none value=(c=grayaa) offset=(0,0)~'
    ,L13='^S={font_size=22pt just=l &w }title1 ls=1.5 "From Robert Allison Site" ~'
    ,L14='^S={font_size=22pt just=l &w }title2 h=8 " "~'
    ,L15='^S={font_size=22pt just=l &w }pattern1 v=s c=&pink~'
    ,L16='^S={font_size=22pt just=l &w }proc gmap data=heart_data map=heart_data anno=anno_arrow~'
    ,L17='^S={font_size=22pt just=l &w }id idvar~'
    ,L18='^S={font_size=22pt just=l &w }choro idvar / nolegend'
    ,L19='^S={font_size=22pt just=l &w } coutline=#darkgray~run~quit~;'
   );


%pdfend;

****    ***    ***   *****   ***
*   *  *   *  *   *  *      *   *
*   *  *   *   *     *       *
****   *   *    *    ****     *
* *    *   *     *   *         *
*  *   *   *  *   *  *      *   *
*   *   ***    ***   *****   ***;

%let pgm=hap_roses;

/* rose picture*/
ods graphics/reset=all;
ods graphics/ imagefmt=png;
options device=png;
options nodate nonumber;
*ods graphics/ height=6.5in noborder;
ods pdf gtitle gfootnote
      file="c:\ymr\hap_roses.pdf"
       startpage=no ;
title;
ODS USEGOPT ;
%macro makecard(for=Mary,from=Joe);
      data Roses;
            /* the array below has a list of multipliers that make
            pretty roses, it is temporary, so will not be saved
            with the data*/
            array klist{11} _temporary_ (4, 5, 6, 1.5, 2.5, 1.333333, 2.33333, .75, 1.25, 1.2, .8333333);
            do flower=1 to 12;
                  n = ceil( 11*rand("Uniform") );
                  /*pick a random number
                  between 1 and 11*/
                  k=klist{n}; /*assign k to be the nth multiplier*/
                  /* draw the rose r=cos(k * theta) */
                  do theta = 0 to 12*constant("pi") by 0.1;
                        r = cos(k * theta);      /* generalized rose */
                        x = r*cos(theta);        /* convert to Euclidean coords */
                        y = r*sin(theta);
                        /*move the rose to the right spot*/
                        if flower <= 5 then
                              do;
                                    cx=2*flower+1;
                                    cy=9;
                              end;
                        else if 6<= flower<=9 then
                              do;
                                    cx=(2*flower-8);
                                    cy=10.5;
                              end;
                        else if 10<= flower<=12 then
                              do;
                                    cx=(2*flower-15);
                                    cy=12;
                              end;
                        x=x+cx;
                        y=y+cy;
                        group=flower;
                        output;
                        /*make the stem*/
                        group=-flower;
                        x=cx;
                        y=cy;
                        output;
                        x=7;
                        y=3;
                        output;
                  end;
            end;
            /*bow*/
            do theta = constant("pi")*7.5/12 to constant("pi")*28.5/12 by 0.01;
                  r = cos(2 * (theta));       /* rose */
                  x = r*cos(theta);          /* convert to Euclidean coords */
                  y = r*sin(theta);
                  group=100;
                  if y<abs(x) then
                        do;
                              x=x+7;
                              y=y+3;
                              output;
                        end;
            end;
      run;
      proc sort data=roses;
            by group;
            title1 "Happy Valentines Day &for" ;
            title2 "A Dozen Random Polar Roses for You" ;
      proc sgplot data=Roses aspect=1 noautolegend
                  noborder nowall;
            styleattrs datacontrastcolors=
                  (
                  green green green green
                  green green green green
                  green green green green
                  red  bippk red purple bippk
                  blue purple  bippk red purple  blue red
                  crimson
                        ) datalinepatterns=(1);
            series x=x y=y /group=group;
            xaxis min=0 max=15 display=none;
            yaxis min=0 max=15 display=none;
            footnote "Lots of Love, &from";
            footnote2 " ";
            footnote3 " ";
            footnote4 " ";
            footnote5 " Polar Roses: r = cos(k*theta)";
            footnote6 " Generated with the SAS System 9.4";
            footnote7 "initial idea: http://blogs.sas.com/content/iml/2015/12/16/polar-rose.html";
      run;
      title;
      footnote;
%mend;
    %makecard(for=Mary ,from=Joe);
ods pdf close;


* TAB 1. SCATTER;

* SCATTER CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.class;
title "Weight*Height";
scatter x=weight y=height;
run;

* SCATTER CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.class;
title "Weight*Height";
scatter x=weight y=height /
        markerattrs=(size=12pt symbol=circlefilled)
        jitter;
run;


SUGI paper code

* SCATTER CHARTS: EXERCISE 3;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.class;
title "Weight*Height";
styleattrs datacontrastcolors=(blue pink);
scatter x=weight y=height /
        markerattrs=(size=12pt symbol=circlefilled)
        jitter
        group=sex;
run;

* SCATTER CHARTS: EXERCISE 4;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.class;
title "Weight*Height";
styleattrs datacontrastcolors=(blue vipk);  * VIPK=Vivid Pink;
symbolchar name=Smiley char='263A'x;  * Unicode smiley face;
scatter x=weight y=height /
        markerattrs=(size=36pt symbol=Smiley)
        jitter
        group=sex;
run;

* SCATTER CHARTS: EXERCISE 5;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.class;
title "Weight*Height";
scatter x=weight y=height /
        markerattrs=(size=12pt symbol=circlefilled)
        jitter
        colorresponse=age
        colormodel=(lightgreen darkgreen)
        datalabel=name datalabelattrs=(color=black);
xaxis label="Weight (lbs)";
yaxis label="Height (in)";
run;

* TAB 2. LINE;

* LINE CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.prdsale;
title "Sales";
vline month / response=actual;
run;

* LINE CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.prdsale;
title "Sales";
hline month / response=actual;
run;

* LINE CHARTS: EXERCISE 3;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.prdsale;
title "Sales";
vline month / response=actual
              markers;
xaxis display=(nolabel) valuesformat=monyy5. type=time;
run;

* LINE CHARTS: EXERCISE 4;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.prdsale;
title "Actual Sales by Product Type";
vline month / response=actual
              markers markerattrs=(symbol=circlefilled)
              group=prodtype;
xaxis display=(nolabel) type=time;
yaxis display=(nolabel);
format month yymmdd10.;
run;

* LINE CHARTS: EXERCISE 5;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.prdsale;
title "Actual vs Predicted Sales by Product Type";
vline month / response=actual
              markers markerattrs=(symbol=circlefilled)
              group=prodtype name="actual";
vline month / response=predict
              markers markerattrs=(symbol=circle)
              group=prodtype lineattrs=(pattern=dot)
              name="predict";
xaxis display=(nolabel) type=time;
yaxis display=(nolabel);
format month yymmdd10.;
keylegend "actual" / title="ACT" position=bottom noborder;
keylegend "predict" / title="PRD" position=bottom noborder;
run;

* TAB 3. STEP;

* STEP CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sql noprint;
create table orsalesum as
select quarter, sum(profit) as profit
from sashelp.orsales group by 1 order by 1;

proc sgplot data=orsalesum;
title "Quarterly Profit";
step x=quarter y=profit;
run;

* STEP CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sql noprint;
create table orsalesum as
select quarter, sum(profit) as profit
from sashelp.orsales group by 1 order by 1;

proc sgplot data=orsalesum;
title "Quarterly Profit";
step x=quarter y=profit /
     markers markerattrs=(symbol=circlefilled)
     datalabel=profit
     justify=center;
format profit dollar10.;
xaxis display=(nolabel) grid;
yaxis display=(nolabel) grid;
run;

* STEP CHARTS: EXERCISE 3;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sql noprint;
create table orsalesum2 as
select quarter, product_line, sum(profit) as profit
from sashelp.orsales
where product_line in ('Children', 'Sports')
group by 1, 2 order by 1, 2;

proc sgplot data=orsalesum2;
title "Quarterly Profit";
step x=quarter y=profit /
     markers markerattrs=(symbol=circlefilled)
     justify=center
     datalabel
     group=product_line
     curvelabel curvelabelloc=outside;
format profit dollar10.;
xaxis display=(nolabel) grid;
yaxis display=(nolabel) grid;
run;

* TAB 4. BAR;

* BAR CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.prdsale(where=(year(month)=1994));
title "Sales";
vbar month / response=actual;
run;

* BAR CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.prdsale(where=(year(month)=1994));
title "Sales";
hbar month / response=actual;
run;

* BAR CHARTS: EXERCISE 3;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.prdsale(where=(year(month)=1994));
title "Sales";
vbar month / response=actual group=division;
format month monyy5.;
run;

* BAR CHARTS: EXERCISE 4;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.prdsale(where=(year(month)=1994));
title "Sales";
vbar month / response=actual group=division groupdisplay=cluster;
format month monyy5.;
run;

* BAR CHARTS: EXERCISE 5;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.prdsale(where=(year(month)=1994));
styleattrs datacolors=(palegreen lightblue);
title height=12pt "1994 MONTHLY SALES";
vbar month /  response=actual group=division
                      datalabel datalabelattrs=(size=8.5pt)
                      seglabel seglabelformat=dollar9. seglabelattrs=(size=8.5pt);
xaxis display=(nolabel);
yaxis display=(nolabel) grid;
keylegend / title="" noborder;
format actual dollar9. month monname3.;
run;

* TAB 5. COMBO;

* COMBO CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.class;
title "Height vs. Weight";
vbar name / response=height;
vline name / response=weight y2axis;
run;

* COMBO CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.class noautolegend;
title "Height (in) vs. Weight (lbs)";
vbar name / response=height
            fillattrs=(color=blue transparency=.80)
            nooutline datalabel
            datalabelattrs=(weight=bold)
            categoryorder=respasc;
vline name / response=weight y2axis
             markers markerattrs=(symbol=circlefilled)
             datalabel datalabelattrs=(weight=bold);
xaxis display=(nolabel) valuesrotate=vertical;
yaxis display=(nolabel);
y2axis display=(nolabel) values=(0 to 180 by 20);
format weight 3.;
run;

* COMBO CHARTS: EXERCISE 3;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.class;
title "Height vs. Weight Scatter + REG";
styleattrs datacontrastcolors=(blue pink);
reg x=weight y=height;
scatter x=weight y=height /
        markerattrs=(size=10pt symbol=circlefilled)
        jitter group=sex;
run;

* COMBO CHARTS: EXERCISE 4;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.class;
title "Height vs. Weight Scatter + LOESS";
styleattrs datacontrastcolors=(blue pink);
loess x=weight y=height;
scatter x=weight y=height /
        markerattrs=(size=10pt symbol=circlefilled)
        jitter group=sex;
run;

* TAB 6. TABLE;

* TABLE CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.prdsale(where=(year=1993));
title "1993 Actual vs Predicted Sales";
vline month  / markers response=actual;
vline month  / markers response=predict;
format month monyy5. actual predict dollar7.0;
xaxistable actual predict / location=outside;
keylegend / location=inside position=topright;
xaxis display=(nolabel);
run;

* TAB 7. DOT;

* DOT CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.class;
title "Class by Age";
dot age;
run;

* DOT CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.class;
title "Class Mean Age";
dot age / response=height stat=mean
          group=sex datalabel=sex datalabelattrs=(size=10pt);
run;

* DOT CHARTS: EXERCISE 3;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc format;
picture inchF low-high ='99"';

proc sgplot data=sashelp.class;
title "Mean Height by Age";
dot age / response=height stat=mean
          limitstat=stddev numstd=1
          markerattrs=(size=12pt symbol=circlefilled);
xaxis valuesformat=inchF.;
yaxis reverse;
run;

* TAB 8. BUBBLE;

* BUBBLE CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.class;
title "Students by Height-Weight-Age";
bubble x=height y=weight size=age;
run;

* BUBBLE CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.class;
title "Students by Height-Weight-Age, Grouped by Gender";
bubble x=height y=weight size=age / group=sex;
run;

* BUBBLE CHARTS: EXERCISE 3;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.class;
title "Students by Height-Weight-Age, Grouped by Gender";
bubble x=height y=weight size=age /
       group=sex transparency=.5 dataskin=sheen
       datalabel=name datalabelattrs=(color=black);
run;

* BUBBLE CHARTS: EXERCISE 4;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sql noprint;
create table orsalesum as
select quarter, product_category, sum(profit) as profit format=dollar10.
from sashelp.orsales group by 1, 2 order by 1, 2;

proc sgplot data=orsalesum;
title "Orion Quarterly Sales by Product Category";
bubble y=product_category x=quarter size=profit /
       bradiusmax=12pt
       dataskin=sheen fillattrs=(color=blue);
xaxis display=(nolabel) valuesrotate=vertical;
yaxis display=(nolabel);
run;

* TAB 9. BOX;

* BOX CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.cars;
title "City MPG";
hbox mpg_city;
run;

* BOX CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.cars;
title "City MPG";
vbox mpg_city;
run;

* BOX CHARTS: EXERCISE 3;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.cars;
title "City MPG";
vbox mpg_city / datalabel=model;
run;

* BOX CHARTS: EXERCISE 4;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.cars noautolegend;
title "MPG City vs Number of Cylinders";
hbox mpg_city /
     group=cylinders category=cylinders;
yaxis reverse;
xaxis grid values=(0 to 65 by 5);
run;

* BOX CHARTS: EXERCISE 5;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.cars;
title "MPG City vs Number of Cylinders";
vbox mpg_city /
     category=cylinders connect=median
     datalabel=model dataskin=gloss;
yaxis grid values=(0 to 65 by 5);
format model $13.;
run;

* TAB 10. HIGHLOW;

* HIGHLOW CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.stocks;
title "Intel (1999-2000)";
where stock='Intel' and '01jan1999'd<=date<'01jan2001'd;
highlow x=date high=high low=low;
run;

* HIGHLOW CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.stocks;
title "Intel Monthly Open-Close-High-Low Stock Prices";
where stock='Intel' and '01jan1999'd<=date<'01jan2001'd;
highlow x=date high=high low=low /
        open=open close=close;
xaxis display=(nolabel);
yaxis display=(nolabel) grid;
run;

* HIGHLOW CHARTS: EXERCISE 3;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.stocks;
title "Intel Monthly High-Low Stock Prices";
where stock='Intel' and '01jan1999'd<=date<'01jan2001'd;
highlow y=date high=high low=low /
        type=bar nooutline barwidth=.75
        fill fillattrs=(color="verylightblue")
        lowlabel=low highlabel=high
        open=open close=close;
xaxis display=(nolabel) grid valueattrs=(size=8pt);
yaxis display=(nolabel) interval=month reverse
      valuesformat=monyy5. valueattrs=(size=8pt);
run;

* TAB 11. WATERFALL;

* WATERFALL CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.failure;
title "Counts of Failure by Cause";
waterfall category=cause response=count;
run;

* WATERFALL CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.failure;
title "Counts of Failure by Cause";
waterfall category=cause response=count /
          datalabel fillattrs=(color=lightred)
          finalbarattrs=(color=red);
xaxis display=(nolabel);
yaxis display=(nolabel);
run;

* WATERFALL CHARTS: EXERCISE 3;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sql noprint;
create table heartdeaths as
select deathcause, sum(-1) as Deaths
from sashelp.heart where status='Dead' group by 1;

select count(*) into :Participants from sashelp.heart;

proc sgplot data=heartdeaths;
title "Heart Study: Waterfall Chart of Death Causes";
waterfall category=deathcause response=deaths /
          datalabel fillattrs=(color=black)
          initialbarvalue=&Participants
          initialbarattrs=(color=green)
          finalbarattrs=(color=green);
xaxis display=(nolabel);
yaxis display=(nolabel);
format deaths comma7.;
run;

* TAB 12. SERIES;

* SERIES CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.stocks;
title "IBM (2000-2002)";
where stock="IBM" and '01jan2000'd<=date<'01jan2003'd;
series x=date y=close;
run;

* SERIES CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.stocks;
title "Closing Stock Prices";
where '01jan2000'd<=date<'01jan2001'd;
series x=date y=close /
       group=stock thickresp=volume
       curvelabel curvelabelloc=outside;
footnote "Note: Line thickness varies based on trading volume";
run;
footnote;
run;

* SERIES CHARTS: EXERCISE 3;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.stocks noborder;
title "IBM and MSFT Closing Stock Prices (2000-2002)";
where stock in ("IBM" "Microsoft") and '01jan2000'd<=date<'01jan2003'd;
series x=date y=close / group=stock curvelabel curvelabelloc=outside;
xaxis display=(nolabel) grid;
yaxis display=(nolabel) grid;
run;

* SERIES CHARTS: EXERCISE 4;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.stocks;
where stock="IBM" and '01jan2000'd<=date<'01jan2003'd;
title height=10pt "IBM Opening and Closing Stock Prices (2000-2002)";
series x=date y=open;
series x=date y=close;
run;

* SERIES CHARTS: EXERCISE 5;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.stocks;
where stock="IBM" and '01jan2000'd<=date<'01jan2003'd;
title height=10pt "IBM Opening and Closing Stock Prices (2000-2002)";
series x=date y=open / lineattrs=(pattern=dot thickness=3pt) smoothconnect;
series x=date y=close / lineattrs=(pattern=solid thickness=3pt) smoothconnect;
xaxis display=(nolabel);
yaxis display=(nolabel);
run;

* TAB 13. HISTOGRAM;

* HISTOGRAM CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.baseball;
title "Home Runs (1986 Season)";
histogram nhome;
run;

* HISTOGRAM CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.baseball;
title "1986 Major League Baseball Home Run Distribution";
histogram nhome /
          datalabel=count nbins=10 showbins
          dataskin=pressed filltype=gradient
          fillattrs=(color=dodgerblue);
run;

* HISTOGRAM CHARTS: EXERCISE 3;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc format;
picture pctF low-high ='099%';

proc sgplot data=sashelp.baseball noautolegend;
title "1986 Major League Baseball Home Run Distribution";
histogram nhome /
          datalabel=count nbins=10 showbins
          dataskin=pressed filltype=gradient
          fillattrs=(color=dodgerblue);
density nhome / type=kernel;
fringe nhome;
yaxis display=(nolabel) valuesformat=pctf. grid;
run;

* TAB 14. VECTOR;

* VECTOR CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.class;
title "Weight*Height Vector Plot";
vector x=weight y=height;
run;

* VECTOR CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sql noprint;
select avg(weight) format=5.1, avg(height) format=5.1
into :avgweight, :avgheight from sashelp.class;

proc sgplot data=sashelp.class;
title "Weight*Height Vector Plot";
vector x=weight y=height / xorigin=&avgweight yorigin=&avgheight;
run;

* VECTOR CHARTS: EXERCISE 3;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.class;
title "Weight*Height Vector Plot";
vector x=weight y=height /
       xorigin=&avgweight yorigin=&avgheight;
refline &avgweight /
        axis=x labelloc=inside label labelattrs=(size=7pt) lineattrs=(pattern=dash);
refline &avgheight /
        axis=y labelloc=inside label labelattrs=(size=7pt) lineattrs=(pattern=dash);
run;

* VECTOR CHARTS: EXERCISE 4;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc format;
picture inchF low-high ='99"';
picture lbsF low-high ='009 lbs';

proc sgplot data=sashelp.class;
title "'Distance' of Students from Mean Class Weight/Height";
vector x=weight y=height /
       xorigin=&avgweight yorigin=&avgheight datalabel=name;
refline &avgweight /
        axis=x labelloc=inside label labelattrs=(size=7pt) lineattrs=(pattern=dash);
refline &avgheight /
        axis=y labelloc=inside label labelattrs=(size=7pt) lineattrs=(pattern=dash);
xaxis display=(nolabel);
yaxis display=(nolabel);
format weight lbsF. height inchF.;
run;

* TAB 15. TEXT;

* TEXT CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.class;
title "Weight*Height Text Plot";
text x=weight y=height text=name;
run;

* TEXT CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sql noprint;
create table classminmax as
select c.*,
       case when height=minheight or height=maxheight
            then name end as showname
from sashelp.class c,
(select min(height) as minheight,
        max(height) as maxheight
 from sashelp.class) as minmax;

proc sgplot data=classminmax nowall noautolegend;
title "Class Weight by Height, With Names of Tallest & Shortest";
scatter x=weight y=height /
        transparency=.7
        markerattrs=(symbol=circlefilled size=8pt color=blue);
text x=weight y=height text=showname /
     textattrs=(size=10pt color=black weight=bold) position=top strip;
xaxis display=(nolabel);
yaxis display=(nolabel);
run;

* TAB 16. NEEDLE;

* NEEDLE CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.class;
title "Height - Needle Plot";
needle x=name y=height;
run;

* NEEDLE CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc format;
picture inchF low-high ='99.9"';

proc sgplot data=sashelp.class;
title "Class Height 'Lollipop' Chart";
needle x=name y=height /
       datalabel datalabelpos=center
       datalabelattrs=(color=white size=10pt weight=bold)
       markers markerattrs=(symbol=circlefilled size=32pt);
xaxis display=(nolabel);
yaxis display=none;
format height inchF.;
run;

* NEEDLE CHARTS: EXERCISE 3;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc format;
picture inchF low-high ='99.9"';

proc sql noprint;
select avg(height) into :avgheight from sashelp.class;

proc sgplot data=sashelp.class;
title "Class Heights vs. Avg Class Height";
needle x=name y=height / datalabel datalabelpos=right
       datalabelattrs=(color=black size=10pt weight=bold)
       lineattrs=(thickness=2pt color=dodgerblue)
       markers markerattrs=(symbol=circlefilled color=dodgerblue size=10pt)
       baseline=&avgHeight baselineattrs=(color=dodgerblue thickness=2pt);
xaxis display=(nolabel);
yaxis display=none;
format height inchF.;
run;

* TAB 17. HEATMAP;

* HEATMAP CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.heart;
title "Framingham Heart Study";
heatmap x=weight y=cholesterol;
run;

* HEATMAP CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.heart;
title "Framingham Heart Study (Death Cause Coronary Heart Disease)";
where deathcause="Coronary Heart Disease";
heatmap x=weight y=cholesterol;
run;

* HEATMAP CHARTS: EXERCISE 3;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.heart;
title "Framingham Heart Study";
heatmap x=weight y=cholesterol /
        colormodel=(green yellow red)
        nxbins=50 nybins=50 showxbins showybins;
run;

* HEATMAP CHARTS: EXERCISE 4;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.heart;
title "Framingham Heart Study";
heatmap x=bp_status y=weight_status /
        colormodel=(green yellow red);
run;

* TAB 18. BAND;

* BAND CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.classfit;
title "Weight Limits on the Y Axis (SASHELP.CLASSFIT)";
band x=name lower=lowermean upper=uppermean;
run;

* BAND CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.classfit noautolegend;
title "Weight Limits on the Y Axis (SASHELP.CLASSFIT)";
band x=name lower=lowermean upper=uppermean;
needle x=name y=weight /
       markers markerattrs=(symbol=circlefilled);
xaxis display=(nolabel);
yaxis grid;
run;

* BAND CHARTS: EXERCISE 3;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sql noprint;
create table orsalesum as
select quarter, sum(profit) as profit
from sashelp.orsales group by 1 order by 1;

proc sgplot data=orsalesum;
title "Quarterly Profit";
band x=quarter upper=profit lower=0 /
     fill fillattrs=(color=green transparency=.7);
format profit dollar10.;
xaxis display=(nolabel) grid;
yaxis display=(nolabel) grid;
run;

* TAB 19. BLOCK;

* BLOCK CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgplot data=sashelp.class;
title "Class, Blocked by Age";
block x=name block=age;
run;

* BLOCK CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sort data=sashelp.class out=classSort;
by height;

proc sgplot data=classSort;
styleattrs datacolors=(cxe5f5e0 cxc7e9c0 cxa1d99b cx74c476 cx41ab5d cx238b45);
title "Class by Height, Blocked by Age";
block x=name block=age;
series x=name y=height /
       markers markerattrs=(symbol=circlefilled);
xaxis display=(nolabel);
yaxis display=(nolabel) max=75;
run;

* BLOCK CHARTS: EXERCISE 3;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sql;
create table prdsalemth as
select month, put(month,monyy5.) as monyy, "Q"||put(quarter,1.) as qtr, sum(actual) as actual
from sashelp.prdsale group by 1, 2, 3 order by 1, 2, 3;

proc sgplot data=prdsalemth;
styleattrs datacolors=(lightorange lightblue lightgreen lightyellow);
title "Sales";
block x=monyy block=qtr / valuehalign=left;
vbarparm category=monyy response=actual /
                 fillattrs=(color=black) fill barwidth=.6 datalabel;
xaxis display=(nolabel) discreteorder=data;
yaxis display=(nolabel) offsetmax=0.1;
run;

* TAB 20. ATTRIBUTE MAPS;

* ATTRIBUTE MAPS CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
data mapGender;
input (ID value linecolor fillcolor)($);
datalines;
Gender F pink pink
Gender M blue blue
;
proc sgplot data=sashelp.class dattrmap=mapGender;
title "Discrete Attribute Map Example (Color List)";
vbar age / group=sex groupdisplay=cluster attrid=Gender datalabel;
run;

* ATTRIBUTE MAPS CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
data mapWeight;
input (ID min max color altcolor)($);
datalines;
weight _min_ 80        red      red
weight 80      100       blue    blue
weight 100    _max_  green green
;
proc sgplot data=sashelp.class rattrmap=mapWeight;
title "Range Attribute Map Example (Color List)";
scatter x=height y=weight /
        transparency=.5
        colorresponse=weight rattrid=weight
        markerattrs=(symbol=circlefilled size=24pt);
run;

* ATTRIBUTE MAPS CHARTS: EXERCISE 3;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
data mapWeight2;
input (ID min max)($) altcolormodel1:$10. altcolormodel2:$10.;
datalines;
weight _min_ _max_ lightgreen darkgreen
;
proc sgplot data=sashelp.class rattrmap=mapWeight2;
title "Range Attribute Map Example (Color Model)";
scatter x=height y=weight /
        colorresponse=weight rattrid=weight
        markerattrs=(symbol=circlefilled size=24pt);
run;

* TAB 21. ANNOTATE;

* ANNOTATE CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
data anno;
retain function "text" label "DRAFT" textcolor "gray" justify "center"
       textsize 180 transparency .3 width 200;

proc sgplot data=sashelp.class sganno=anno;
title "Annotation Example - Watermark";
vbar age / group=sex groupdisplay=cluster;
run;

* TAB 22. SGPANEL;

* SGPANEL CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgpanel data=sashelp.class;
title "Class Ages by Gender";
panelby sex;
vbar age / colorresponse=weight colormodel=(lightblue blue)
                  response=weight stat=mean colorstat=mean;
run;

* SGPANEL CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgpanel data=sashelp.cars;
title "Cars - MSRP by Origin";
panelby origin;
dot type / response=msrp stat=mean datalabel
                markerattrs=(size=16pt symbol=circlefilled color=blue);
run;

* SGPANEL CHARTS: EXERCISE 3;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgpanel data=sashelp.cars;
title "Cars - MSRP by Origin";
panelby type;
dot origin / response=msrp stat=mean datalabel
                  markerattrs=(size=16pt symbol=circlefilled color=blue);
run;

* SGPANEL CHARTS: EXERCISE 4;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgpanel data=sashelp.cars noautolegend;
title "Cars - MPG by Origin/Type";
panelby origin type /
              layout=lattice novarname uniscale=column onepanel;
reg y=mpg_city x=weight / markerattrs=(color=blue);
format weight comma8.;
run;

* SGPANEL CHARTS: EXERCISE 5;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgpanel data= sashelp.stocks;
title "Stock Closing Prices by Quarter (1998-2003)";
panelby stock / rows=3 novarname uniscale=column noheader;
title;
inset stock / nolabel  textattrs=(size=18pt);
series x=date y=close / lineattrs=(thickness=3pt) lineattrs=(color=blue);
colaxis values=('01jan1998'd to '01jan2004'd by quarter)
        min='01jan1998'd max='01jan2004'd
        display=(nolabel) grid valuesformat=yyq4.;
rowaxis display=(nolabel) grid;
run;

* TAB 23. SGSCATTER;

* SGSCATTER CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgscatter data=sashelp.cars;
title "SGSCATTER Matrix of Car Characteristics";
matrix enginesize cylinders horsepower mpg_city;
run;

* SGSCATTER CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgscatter data=sashelp.cars;
title "SGSCATTER Matrix of Car Characteristics";
matrix enginesize cylinders horsepower mpg_city /
       diagonal=(histogram) transparency=.2;
run;

* SGSCATTER CHARTS: EXERCISE 3;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgscatter data=sashelp.cars;
title "SGSCATTER Plots of Car Characteristics";
plot mpg_city*(enginesize cylinders horsepower mpg_highway);
run;

* SGSCATTER CHARTS: EXERCISE 4;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgscatter data=sashelp.cars;
title "SGSCATTER Plots of Car Characteristics";
plot mpg_city* (enginesize cylinders horsepower mpg_highway) / rows=3;
run;

* SGSCATTER CHARTS: EXERCISE 5;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgscatter data=sashelp.cars;
title "SGSCATTER Plots of Car Characteristics";
plot mpg_city* (enginesize cylinders horsepower mpg_highway) / columns=4 reg;
run;

* SGSCATTER CHARTS: EXERCISE 6;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgscatter data=sashelp.cars;
title "SGSCATTER Comparison Plots of Car Characteristics";
compare x=(enginesize cylinders horsepower mpg_highway) y=(mpg_city) / reg;
run;

* SGSCATTER CHARTS: EXERCISE 7;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sgscatter data=sashelp.cars;
title "SGSCATTER Comparison Plots of Car Characteristics";
compare x=(enginesize cylinders horsepower) y=(mpg_city mpg_highway) / reg;
run;

* TAB 24. GTL;

* GTL CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc template;
define statgraph gtlStock;
begingraph;
layout lattice;
seriesplot x=date y=close;
needleplot x=date y=volume;
endlayout;
endgraph;
end;

proc sgrender data=sashelp.stocks template=gtlStock;
title height=10pt "IBM Closing Stock Prices and Volume (1998-2005)";
where stock="IBM" and '01jan1998'd<=date<'01jan2005'd;
run;

* GTL CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc format;
picture million low-high='0000' (mult=.00001);

proc template;
define statgraph gtlStock;
begingraph;
entrytitle "IBM (1998-2005)";
layout lattice / columndatarange=union rowweights=(.7 .3);
seriesplot x=date y=close;
needleplot x=date y=volume;
columnaxes;
columnaxis / griddisplay=on display=(line ticks tickvalues);
endcolumnaxes;
endlayout;
endgraph;
end;

proc sgrender data=sashelp.stocks template=gtlStock;
where stock="IBM" and '01jan1998'd<=date<'01jan2005'd;
format volume million.;
run;

* TAB 25. PIE (GTL);

* PIE CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc template;
define statgraph pie;
begingraph;
entrytitle "Car Models by Number of Cylinders";
layout region;
piechart category=cylinders;
endlayout;
endgraph;
end;

proc sgrender data=sashelp.cars template=pie;
run;

* PIE CHARTS: EXERCISE 2;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc template;
define statgraph pie;
begingraph;
entrytitle "Car Models by Type";
layout region;
piechart category=type /
         dataskin=gloss
         datalabellocation=outside;
endlayout;
endgraph;
end;

proc sgrender data=sashelp.cars template=pie;
run;

* TAB 26. MOSAIC (GTL);

* MOSAIC CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc summary data=sashelp.cars nway;
class origin type;
var mpg_highway;
output out=mileage mean=avgMpg N=count / noinherit;

proc template;
define statgraph mosaicPlotParm;
begingraph;
layout region;
mosaicPlotParm category=(type origin) count=count / colorgroup=origin;
endlayout;
endgraph;
end;
proc sgrender data=mileage template=mosaicPlotParm;
title "Mosaic Plot of Car Origin/Type/MPG";
run;

* TAB 27. 3D HISTOGRAM (GTL);

* 3D HISTOGRAM CHARTS: EXERCISE 1;
ods graphics on / outputfmt=png antialias width=720pt height=390pt; title; footnote;
proc sql noprint;
create table carSum as
select round(horsepower,75) as Horsepower,
       round(weight,1000) as Weight,
       avg(mpg_city) as MPG
from sashelp.cars group by 1, 2 order by 1, 2;

proc template;
define statgraph gtl3D;
begingraph;
entrytitle "Avg MPG (City) by Weight and Horsepower";
layout overlay3d / cube=false zaxisopts=(griddisplay=on) rotate=130;
bihistogram3dparm y=weight x=horsepower z=mpg /
                  fillattrs=(color=lightgreen) display=all;
endlayout;
endgraph;
end;

proc sgrender data=carSum template=gtl3D;
run;


* combine pdfs;
x "cd c:\temp";
x "c:\pdf\gswin64c.exe -dNOPAUSE -sDEVICE=pdfwrite -sOUTPUTFILE=sly003.pdf -dBATCH sly210.pdf sly002.pdf";

* keep certain pages pages;
x "c:\pdf\gswin64c.exe -sDEVICE=pdfwrite -dNOPAUSE -dQUIET -dBATCH -dFirstPage=2 -dLastPage=229 -sOutputFile=sly002.pdf sly001.pdf";


*****  *   *  ****          *   *  *****  *   *
*      **  *   *  *         **  *  *      *   *
*      * * *   *  *         * * *  *      *   *
****   *  **   *  *         *  **  ****   *   *
*      *   *   *  *         *   *  *      * * *
*      *   *   *  *         *   *  *      ** **
*****  *   *  ****          *   *  *****  *   *;
